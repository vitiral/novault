# Generated by carnix 0.6.6: carnix -o novault.nix --src ./. Cargo.lock --standalone
with import <nixpkgs> {};
let kernel = buildPlatform.parsed.kernel.name;
    abi = buildPlatform.parsed.abi.name;
    include = includedFiles: src: builtins.filterSource (path: type:
      lib.lists.any (f:
        let p = toString (src + ("/" + f)); in
        (path == p) || (type == "directory" && lib.strings.hasPrefix path p)
      ) includedFiles
    ) src;
    updateFeatures = f: up: functions: builtins.deepSeq f (lib.lists.foldl' (features: fun: fun features) (lib.attrsets.recursiveUpdate f up) functions);
    mapFeatures = features: map (fun: fun { features = features; });
    mkFeatures = feat: lib.lists.foldl (features: featureName:
      if feat.${featureName} or false then
        [ featureName ] ++ features
      else
        features
    ) [] (builtins.attrNames feat);
in
rec {
  novault = f: novault_0_4_1 { features = novault_0_4_1_features { novault_0_4_1 = f; }; };
  aho_corasick_0_6_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "aho-corasick";
    version = "0.6.4";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "189v919mp6rzzgjp1khpn4zlq8ls81gh43x1lmc8kbkagdlpq888";
    libName = "aho_corasick";
    crateBin = [ {  name = "aho-corasick-dot"; } ];
    inherit dependencies buildDependencies features;
  };
  ansi_term_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ansi_term";
    version = "0.9.0";
    authors = [ "ogham@bsago.me" "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>" ];
    sha256 = "1vcd8m2hglrdi4zmqnkkz5zy3c73ifgii245k7vj6qr5dzpn9hij";
    inherit dependencies buildDependencies features;
  };
  ansi_term_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ansi_term";
    version = "0.11.0";
    authors = [ "ogham@bsago.me" "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>" "Josh Triplett <josh@joshtriplett.org>" ];
    sha256 = "08fk0p2xvkqpmz3zlrwnf6l8sj2vngw464rvzspzp31sbgxbwm4v";
    inherit dependencies buildDependencies features;
  };
  argon2rs_0_2_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "argon2rs";
    version = "0.2.5";
    authors = [ "bryant <bryant@defrag.in>" ];
    sha256 = "1byl9b3wwyrarn8qack21v5fi2qsnn3y5clvikk2apskhmnih1rw";
    inherit dependencies buildDependencies features;
  };
  arrayvec_0_4_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "arrayvec";
    version = "0.4.7";
    authors = [ "bluss" ];
    sha256 = "0fzgv7z1x1qnyd7j32vdcadk4k9wfx897y06mr3bw1yi52iqf4z4";
    inherit dependencies buildDependencies features;
  };
  atty_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "atty";
    version = "0.2.8";
    authors = [ "softprops <d.tangren@gmail.com>" ];
    sha256 = "03w1q3h4w7vhcdxdwa9cirjkzdjz3ja636fj3g64659z6yax6p6d";
    inherit dependencies buildDependencies features;
  };
  backtrace_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace";
    version = "0.3.5";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "The Rust Project Developers" ];
    sha256 = "0vj1dgsivxci5r43w9d56yb98g3r7ff75zr5f592j7yizznshh2r";
    inherit dependencies buildDependencies features;
  };
  backtrace_sys_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace-sys";
    version = "0.1.16";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1cn2c8q3dn06crmnk0p62czkngam4l8nf57wy33nz1y5g25pszwy";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  base64_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "base64";
    version = "0.6.0";
    authors = [ "Alice Maz <alice@alicemaz.com>" "Marshall Pierce <marshall@mpierce.org>" ];
    sha256 = "0ql1rmczbnww3iszc0pfc6mqa47ravpsdf525vp6s8r32nyzspl5";
    inherit dependencies buildDependencies features;
  };
  bitflags_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.4.0";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0an03kibhfcc0mcxf6a0mvbab0s7cggnvflw8jn0b15i351h828c";
    inherit dependencies buildDependencies features;
  };
  bitflags_0_9_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.9.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "18h073l5jd88rx4qdr95fjddr9rk79pb1aqnshzdnw16cfmb9rws";
    inherit dependencies buildDependencies features;
  };
  bitflags_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "1.0.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0p4b3nr0s5nda2qmm7xdhnvh4lkqk3xd8l9ffmwbvqw137vx7mj1";
    inherit dependencies buildDependencies features;
  };
  blake2_rfc_0_2_18_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "blake2-rfc";
    version = "0.2.18";
    authors = [ "Cesar Eduardo Barros <cesarb@cesarb.eti.br>" ];
    sha256 = "0pyqrik4471ljk16prs0iwb2sam39z0z6axyyjxlqxdmf4wprf0l";
    inherit dependencies buildDependencies features;
  };
  byteorder_1_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "byteorder";
    version = "1.2.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1wsxnqcscg4gchdmgdbwc78lw2qx2i6bnjd564xq7h7qc4fp2157";
    inherit dependencies buildDependencies features;
  };
  cc_1_0_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cc";
    version = "1.0.6";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1l40rmcwgz3l55adxryrn1i7c56zzh2ai81zdr7sb5n5nxjclnfd";
    inherit dependencies buildDependencies features;
  };
  cfg_if_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cfg-if";
    version = "0.1.2";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0x06hvrrqy96m97593823vvxcgvjaxckghwyy2jcyc8qc7c6cyhi";
    inherit dependencies buildDependencies features;
  };
  clap_2_31_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "clap";
    version = "2.31.1";
    authors = [ "Kevin K. <kbknapp@gmail.com>" ];
    sha256 = "1cx6sy0sgfiawlxf1z53qr82668535nq362gk3n8br6kmbmllsdg";
    inherit dependencies buildDependencies features;
  };
  clicolors_control_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "clicolors-control";
    version = "0.2.0";
    authors = [ "Armin Ronacher <armin.ronacher@active-4.com>" ];
    sha256 = "0p1fbs7k70h58ycahmin7b87c0xn6lc94xmh9jw4gxi40mnrvdkp";
    inherit dependencies buildDependencies features;
  };
  configure_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "configure";
    version = "0.1.1";
    authors = [ "Without Boats <woboats@gmail.com>" ];
    sha256 = "1783drka1dgj67kzwgnaaf06yj98x53hl1m37gvffnz552r9f0ay";
    inherit dependencies buildDependencies features;
  };
  configure_derive_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "configure_derive";
    version = "0.1.1";
    authors = [ "Without Boats <woboats@gmail.com>" ];
    sha256 = "1r97fj3psydgidlzss6zx6xp2fgd7apkcny2fbvc1r069vkl0ibq";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  console_0_6_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "console";
    version = "0.6.1";
    authors = [ "Armin Ronacher <armin.ronacher@active-4.com>" ];
    sha256 = "0h46m3nlx7m2pmc1ia2nlbl8d1vp46kqh2c82hx9ckjag68g4zdl";
    inherit dependencies buildDependencies features;
  };
  constant_time_eq_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "constant_time_eq";
    version = "0.1.3";
    authors = [ "Cesar Eduardo Barros <cesarb@cesarb.eti.br>" ];
    sha256 = "03qri9hjf049gwqg9q527lybpg918q6y5q4g9a5lma753nff49wd";
    inherit dependencies buildDependencies features;
  };
  core_foundation_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "core-foundation";
    version = "0.3.0";
    authors = [ "The Servo Project Developers" ];
    sha256 = "1zlwdggcl40ws54p57r3fryv2gajjnvxgfj5aplprg03mvzv96zg";
    inherit dependencies buildDependencies features;
  };
  core_foundation_sys_0_3_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "core-foundation-sys";
    version = "0.3.1";
    authors = [ "The Servo Project Developers" ];
    sha256 = "0gqv2wvfj1six5rc3j9kzyygxy1vbakdjyian9mfy875jlr3imwp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  core_graphics_0_8_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "core-graphics";
    version = "0.8.2";
    authors = [ "The Servo Project Developers" ];
    sha256 = "1wwkm59rx4lifd7cqgg3v2c0s5dx1s2k0gsaar9wrysv32c9k69p";
    inherit dependencies buildDependencies features;
  };
  crossbeam_channel_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-channel";
    version = "0.1.2";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "008xqz8w58sl43fmwpqqf08lp33sjq9gnmbgzw04l6ry7kidwm56";
    inherit dependencies buildDependencies features;
  };
  crossbeam_epoch_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-epoch";
    version = "0.2.0";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "05hyrrbmz64z0gz6n9h6jmx7swnhika90h96fcyd83psjwpkap88";
    inherit dependencies buildDependencies features;
  };
  crossbeam_utils_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-utils";
    version = "0.2.2";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "0jiwzxv0lysjq68yk4bzkygrf69zhdidyw55nxlmimxlm6xv0j4m";
    inherit dependencies buildDependencies features;
  };
  ctrlc_3_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ctrlc";
    version = "3.1.0";
    authors = [ "Antti Keränen <detegr@gmail.com>" "nabijaczleweli <nabijaczleweli@gmail.com>" "Henning Ottesen <henning@live.no>" "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1dspgfaqvipmmzr3ihjphxsrnlzq5zbnv3z1k0799rlm39d98cy2";
    inherit dependencies buildDependencies features;
  };
  dialoguer_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dialoguer";
    version = "0.1.0";
    authors = [ "Armin Ronacher <armin.ronacher@active-4.com>" ];
    sha256 = "0wp05h15hb6p32mkczyc3a7pkv0j6nrbcpnh4nq7334y86ah8l55";
    inherit dependencies buildDependencies features;
  };
  dtoa_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dtoa";
    version = "0.4.2";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1bxsh6fags7nr36vlz07ik2a1rzyipc8x1y30kjk832hf2pzadmw";
    inherit dependencies buildDependencies features;
  };
  either_1_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "either";
    version = "1.4.0";
    authors = [ "bluss" ];
    sha256 = "04kpfd84lvyrkb2z4sljlz2d3d5qczd0sb1yy37fgijq2yx3vb37";
    inherit dependencies buildDependencies features;
  };
  encode_unicode_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encode_unicode";
    version = "0.1.3";
    authors = [ "Torbjørn Birch Moltu <t.b.moltu@lyse.net>" ];
    sha256 = "1avvnhi4cy8vj0j0yjqpwxjz0kbjk3nx5k82rq70nr0fsa4ag73f";
    inherit dependencies buildDependencies features;
  };
  enigo_0_0_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "enigo";
    version = "0.0.11";
    authors = [ "Dustin Bensing <dustin.bensing@googlemail.com>" ];
    sha256 = "1j8kh8yl6vrkrkvxwh2nlazzy6ivp1860w86g1wlzrcza6sj6gza";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  erased_serde_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "erased-serde";
    version = "0.3.3";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1jrdyrdqc82ppsdml8gdivl7dy8hcw1jac4j7hlrk9628i8vnmwr";
    inherit dependencies buildDependencies features;
  };
  ergo_0_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ergo";
    version = "0.0.1";
    authors = [ "Garrett Berg <vitiral@gmail.com>" ];
    sha256 = "0d3wqimkn727sgdsh0rif8rdcz6r8s2gjwnlyri8m98km2wl329r";
    inherit dependencies buildDependencies features;
  };
  ergo_config_0_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ergo_config";
    version = "0.0.1";
    authors = [ "Garrett Berg <vitiral@gmail.com>" ];
    sha256 = "0c9vyvxhqyf67ljcdp30287gc7ckh5g3qmcq4p049s24kwbb117s";
    inherit dependencies buildDependencies features;
  };
  ergo_fs_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ergo_fs";
    version = "0.1.5";
    authors = [ "Garrett Berg <vitiral@gmail.com>" ];
    sha256 = "09s5plvz7gbban279mm1vfagzqmrp64hyi5v8nhy72wavd1y6v4q";
    inherit dependencies buildDependencies features;
  };
  ergo_std_0_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ergo_std";
    version = "0.0.1";
    authors = [ "Garrett Berg <vitiral@gmail.com>" ];
    sha256 = "0q8sy814x5y5aky81q6h6mi4vhcmzz46i9yzz3sj6nhrraqn6lxj";
    inherit dependencies buildDependencies features;
  };
  ergo_sync_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ergo_sync";
    version = "0.1.0";
    authors = [ "Garrett Berg <vitiral@gmail.com>" ];
    sha256 = "0vpwbhfd3vwd7ms0290rrxqqx6g5ap92cv2vdvp8mpi887g9ybqk";
    inherit dependencies buildDependencies features;
  };
  ergo_sys_0_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ergo_sys";
    version = "0.0.1";
    authors = [ "Garrett Berg <vitiral@gmail.com>" ];
    sha256 = "0fadkcvani8qvbcyz8mn5s1j7aha9912lqfqq86iz088a0jpc204";
    inherit dependencies buildDependencies features;
  };
  error_chain_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "error-chain";
    version = "0.11.0";
    authors = [ "Brian Anderson <banderson@mozilla.com>" "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" "Yamakaky <yamakaky@yamaworld.fr>" ];
    sha256 = "19nz17q6dzp0mx2jhh9qbj45gkvvgcl7zq9z2ai5a8ihbisfj6d7";
    inherit dependencies buildDependencies features;
  };
  file_lock_0_0_17_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "file-lock";
    version = "0.0.17";
    authors = [ "Alfie John <alfie@alfie.wtf>" "Sebastian Thiel <byronimo@gmail.com>" ];
    sha256 = "0m0ihdw9wlb82c0kf2367vwbm9h469d7hayfalg0appp6sw4cn55";
    libName = "file_lock";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  filetime_0_1_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "filetime";
    version = "0.1.15";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1qbib2cl25i9m0l65d8idyl0fci15pqpvldh1zdnkzb0v3a9m2l4";
    inherit dependencies buildDependencies features;
  };
  foreign_types_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "foreign-types";
    version = "0.3.2";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "105n8sp2djb1s5lzrw04p7ss3dchr5qa3canmynx396nh3vwm2p8";
    inherit dependencies buildDependencies features;
  };
  foreign_types_shared_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "foreign-types-shared";
    version = "0.1.1";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0b6cnvqbflws8dxywk4589vgbz80049lz4x1g9dfy4s1ppd3g4z5";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "0jrf4shb1699r4la8z358vri8318w4mdi6qzfqy30p2ymjlca4gk";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_sys_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon-sys";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "08jp1zxrm9jbrr6l26bjal4dbm8bxfy57ickdgibsqxr1n9j3hf5";
    inherit dependencies buildDependencies features;
  };
  gcc_0_3_54_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "gcc";
    version = "0.3.54";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "07a5i47r8achc6gxsba3ga17h9gnh4b9a2cak8vjg4hx62aajkr4";
    inherit dependencies buildDependencies features;
  };
  glob_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "glob";
    version = "0.2.11";
    authors = [ "The Rust Project Developers" ];
    sha256 = "104389jjxs8r2f5cc9p0axhjmndgln60ih5x4f00ccgg9d3zarlf";
    inherit dependencies buildDependencies features;
  };
  heck_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "heck";
    version = "0.3.0";
    authors = [ "Without Boats <woboats@gmail.com>" ];
    sha256 = "1cg062awkhr82ymwd1qyf0rz289gqhix82j94x1xr2g6w30pady1";
    inherit dependencies buildDependencies features;
  };
  itertools_0_7_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "itertools";
    version = "0.7.7";
    authors = [ "bluss" ];
    sha256 = "05j5jp7fs3ngpnkn2paly0ybz0jngcklfrdgvwh9yjak80abvwfl";
    inherit dependencies buildDependencies features;
  };
  itoa_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "itoa";
    version = "0.3.4";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1nfkzz6vrgj0d9l3yzjkkkqzdgs68y294fjdbl7jq118qi8xc9d9";
    inherit dependencies buildDependencies features;
  };
  kernel32_sys_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "kernel32-sys";
    version = "0.2.2";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lrw1hbinyvr6cp28g60z97w32w8vsk6pahk64pmrv2fmby8srfj";
    libName = "kernel32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  lazy_static_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "0.2.11";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "1x6871cvpy5b96yv4c7jvpq316fp5d4609s9py7qk6cd6x9k34vm";
    inherit dependencies buildDependencies features;
  };
  lazy_static_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "1.0.0";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "0wfvqyr2nvx2mbsrscg5y7gfa9skhb8p72ayanl8vl49pw24v4fh";
    inherit dependencies buildDependencies features;
  };
  libc_0_2_39_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libc";
    version = "0.2.39";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0sv0abs2msd0f9x0gf00v6ha7g8hfl3kbbd8d61kn3zwnpsgb8fw";
    inherit dependencies buildDependencies features;
  };
  linked_hash_map_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "linked-hash-map";
    version = "0.5.1";
    authors = [ "Stepan Koltsov <stepan.koltsov@gmail.com>" "Andrew Paseltiner <apaseltiner@gmail.com>" ];
    sha256 = "1f29c7j53z7w5v0g115yii9dmmbsahr93ak375g48vi75v3p4030";
    inherit dependencies buildDependencies features;
  };
  maplit_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "maplit";
    version = "1.0.1";
    authors = [ "bluss" ];
    sha256 = "1lcadhrcy2qyb6zazmzj7gvgb50rmlvkcivw287016j4q723x72g";
    inherit dependencies buildDependencies features;
  };
  memchr_2_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memchr";
    version = "2.0.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
    sha256 = "0ls2y47rjwapjdax6bp974gdp06ggm1v8d1h69wyydmh1nhgm5gr";
    inherit dependencies buildDependencies features;
  };
  memoffset_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memoffset";
    version = "0.1.0";
    authors = [ "Gilad Naaman <gilad.naaman@gmail.com>" ];
    sha256 = "1jq5vcfwqwxl709985srmsxs229da2hq3ab11fx3abbx1bpxcgx1";
    inherit dependencies buildDependencies features;
  };
  nix_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "nix";
    version = "0.5.1";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "17dp0x440bl6a4dc3rxqnj7p2sx46isg2hhvdqpjkdlca84qd7b2";
    inherit dependencies buildDependencies features;
  };
  nix_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "nix";
    version = "0.9.0";
    authors = [ "The nix-rust Project Developers" ];
    sha256 = "00p63bphzwwn460rja5l2wcpgmv7ljf7illf6n95cppx63d180q0";
    inherit dependencies buildDependencies features;
  };
  nodrop_0_1_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "nodrop";
    version = "0.1.12";
    authors = [ "bluss" ];
    sha256 = "1b9rxvdg8061gxjc239l9slndf0ds3m6fy2sf3gs8f9kknqgl49d";
    inherit dependencies buildDependencies features;
  };
  novault_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "novault";
    version = "0.4.1";
    authors = [ "Garrett Berg <vitiral@gmail.com>" ];
    src = ./.;
    inherit dependencies buildDependencies features;
  };
  num_traits_0_1_43_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-traits";
    version = "0.1.43";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1zdzx78vrcg3f39w94pqjs1mwxl1phyv7843hwgwkzggwcxhhf6s";
    inherit dependencies buildDependencies features;
  };
  num_traits_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-traits";
    version = "0.2.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1k27bqbvpghrind428shhndgwyfr6mgldvm5ja63fgjvbyfa700q";
    inherit dependencies buildDependencies features;
  };
  num_cpus_1_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num_cpus";
    version = "1.8.0";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "1y6qnd9r8ga6y8mvlabdrr73nc8cshjjlzbvnanzyj9b8zzkfwk2";
    inherit dependencies buildDependencies features;
  };
  openssl_0_9_24_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "openssl";
    version = "0.9.24";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0wzm3c11g3ndaqyzq36mcdcm1q4a8pmsyi33ibybhjz28g2z0f79";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  openssl_sys_0_9_27_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "openssl-sys";
    version = "0.9.27";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "1bga1f4lw464j1qwc176y7h50b016fnx4z6dc7azdsvaxyh53sv9";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  owning_ref_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "owning_ref";
    version = "0.3.3";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "13ivn0ydc0hf957ix0f5si9nnplzzykbr70hni1qz9m19i9kvmrh";
    inherit dependencies buildDependencies features;
  };
  parking_lot_0_4_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "parking_lot";
    version = "0.4.8";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "0qrb2f0azglbsx7k3skgnc7mmv9z9spnqgk1m450g91r94nlklqi";
    inherit dependencies buildDependencies features;
  };
  parking_lot_0_5_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "parking_lot";
    version = "0.5.4";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "1dg89h65n8gxa2y5p5896pkqm1k7vy6dbvcslsym842590v2cmy0";
    inherit dependencies buildDependencies features;
  };
  parking_lot_core_0_2_13_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "parking_lot_core";
    version = "0.2.13";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "178j9qdrkfm8kw2i57rll1k066x07rjr4ld3hkhk6sfz4dmhzpi8";
    inherit dependencies buildDependencies features;
  };
  path_abs_0_3_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "path_abs";
    version = "0.3.16";
    authors = [ "Garrett Berg <googberg@gmail.com>" ];
    sha256 = "1nsa8dh63m6bmgbji8swlz3qflyzmyay4v8k5cssw8zxwl9dy56v";
    inherit dependencies buildDependencies features;
  };
  pkg_config_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "pkg-config";
    version = "0.3.9";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "06k8fxgrsrxj8mjpjcq1n7mn2p1shpxif4zg9y5h09c7vy20s146";
    inherit dependencies buildDependencies features;
  };
  proc_macro2_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "proc-macro2";
    version = "0.2.3";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1y47qagi1r1f13b4b66xagr3dn9hjlvba7i6f5mcb77qhkn8yg9c";
    inherit dependencies buildDependencies features;
  };
  quote_0_3_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.3.15";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "09il61jv4kd1360spaj46qwyl21fv1qz18fsv2jra8wdnlgl5jsg";
    inherit dependencies buildDependencies features;
  };
  quote_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.4.2";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0rzka356p113f9hdcdc8ha78qar3qd6jpap9wnf5dza9hfs2k4bc";
    inherit dependencies buildDependencies features;
  };
  rand_0_3_22_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.3.22";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0wrj12acx7l4hr7ag3nz8b50yhp8ancyq988bzmnnsxln67rsys0";
    inherit dependencies buildDependencies features;
  };
  rand_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.4.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0h8pkg23wb67i8904sm76iyr1jlmhklb85vbpz9c9191a24xzkfm";
    inherit dependencies buildDependencies features;
  };
  redox_syscall_0_1_37_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_syscall";
    version = "0.1.37";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "0qa0jl9cr3qp80an8vshp2mcn8rzvwiavs1398hq1vsjw7pc3h2v";
    libName = "syscall";
    inherit dependencies buildDependencies features;
  };
  redox_termios_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_termios";
    version = "0.1.1";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "04s6yyzjca552hdaqlvqhp3vw0zqbc304md5czyd3axh56iry8wh";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  regex_0_2_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex";
    version = "0.2.7";
    authors = [ "The Rust Project Developers" ];
    sha256 = "19ydb8sij0prjgbrgmzckjgpfxaggapnh2v7av1rqxb7ijq4bhcy";
    inherit dependencies buildDependencies features;
  };
  regex_syntax_0_5_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex-syntax";
    version = "0.5.0";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0pshgjh9ykg3l2bz2ywjfn4kadj0lziwmb3aagyg4dp6frbch0ip";
    inherit dependencies buildDependencies features;
  };
  remove_dir_all_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "remove_dir_all";
    version = "0.3.0";
    authors = [ "Aaronepower <theaaronepower@gmail.com>" ];
    sha256 = "1m9n4fh3ivadmdvmr5q0la19r6xi56q9r48vc3vv27p1w0z5hy7n";
    inherit dependencies buildDependencies features;
  };
  ron_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ron";
    version = "0.1.7";
    authors = [ "Dzmitry Malyshau <kvarkus@gmail.com>" "Thomas Schaller <torkleyy@gmail.com>" ];
    sha256 = "0ncbyv54xmsslnrgbpyj3gbzrmz88kvhpbf0w6bmki4rbbd2vfks";
    inherit dependencies buildDependencies features;
  };
  rustc_demangle_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc-demangle";
    version = "0.1.7";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0wrln6jvwmqrhyvqlw5vq9a2s4r04ja8mrybxjj9aaaar1fyvns6";
    inherit dependencies buildDependencies features;
  };
  rustyline_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustyline";
    version = "1.0.0";
    authors = [ "Katsu Kawakami <kkawa1570@gmail.com>" ];
    sha256 = "0xq3xal9wdyf0z46maspr0qsvw84n2ip8146n433ywvn1c03zwg9";
    inherit dependencies buildDependencies features;
  };
  safemem_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "safemem";
    version = "0.2.0";
    authors = [ "Austin Bonander <austin.bonander@gmail.com>" ];
    sha256 = "058m251q202n479ip1h6s91yw3plg66vsk5mpaflssn6rs5hijdm";
    inherit dependencies buildDependencies features;
  };
  same_file_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "same-file";
    version = "1.0.2";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1xjj93345qz4dqk1qwlah98dkqrbfvrg7i3hcm3dkjygjqdid2h7";
    inherit dependencies buildDependencies features;
  };
  scoped_threadpool_0_1_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "scoped_threadpool";
    version = "0.1.9";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "1arqj2skcfr46s1lcyvnlmfr5456kg5nhn8k90xyfjnxkp5yga2v";
    inherit dependencies buildDependencies features;
  };
  scopeguard_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "scopeguard";
    version = "0.3.3";
    authors = [ "bluss" ];
    sha256 = "0i1l013csrqzfz6c68pr5pi01hg5v5yahq8fsdmaxy6p8ygsjf3r";
    inherit dependencies buildDependencies features;
  };
  serde_1_0_29_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde";
    version = "1.0.29";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "05y790wyn76xwqqss8piq2sp5d4y9qvygfwhwicycj5p3spwl24w";
    inherit dependencies buildDependencies features;
  };
  serde_derive_1_0_29_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_derive";
    version = "1.0.29";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0w61rja7csagryv9nfqs741hs6f5zdbs2vifgmnhvcbpvmp1spl3";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  serde_derive_internals_0_20_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_derive_internals";
    version = "0.20.0";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0k1z2j46040mywn39f8jj2ji6dcj78kh51cs6y7bfkkqn955bfpz";
    inherit dependencies buildDependencies features;
  };
  serde_json_1_0_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_json";
    version = "1.0.10";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "13fr0j39mp6bjmhmhh1jhm9vg9h4bp2ji44kbd8izjcvv5qxp80z";
    inherit dependencies buildDependencies features;
  };
  serde_yaml_0_7_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_yaml";
    version = "0.7.3";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1nxfrin7m6hip0mv5kw01wdwry4wx651kknxj02baya985k9hgrs";
    inherit dependencies buildDependencies features;
  };
  shellexpand_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "shellexpand";
    version = "1.0.0";
    authors = [ "Vladimir Matveev <vladimir.matweev@gmail.com>" ];
    sha256 = "0k611hbn5lxzic1mqwm993hi3fm2dr80g74ljy7qgppp182hwifc";
    inherit dependencies buildDependencies features;
  };
  shlex_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "shlex";
    version = "0.1.1";
    authors = [ "comex <comexk@gmail.com>" ];
    sha256 = "18vqycq8apg10pg5na57wff8z957d1q05yhvkddqbqflw98xj0rv";
    inherit dependencies buildDependencies features;
  };
  smallvec_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "smallvec";
    version = "0.6.0";
    authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "1k75p20zzdm6r5ka55dmiywpb6wr6p87gr6ha6p2s73mycmjc4ln";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  stable_deref_trait_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "stable_deref_trait";
    version = "1.0.0";
    authors = [ "Robert Grosse <n210241048576@gmail.com>" ];
    sha256 = "0ya5fms9qdwkd52d3a111w4vcz18j4rbfx4p88z44116cqd6cczr";
    inherit dependencies buildDependencies features;
  };
  std_prelude_0_2_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "std_prelude";
    version = "0.2.12";
    authors = [ "Garrett Berg <vitiral@gmail.com>" ];
    sha256 = "1m49lxf44asj33xag9ishipf9gscamapxkl3d55jqzdim4dykn2s";
    inherit dependencies buildDependencies features;
  };
  stfu8_0_2_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "stfu8";
    version = "0.2.4";
    authors = [ "Garrett Berg <googberg@gmail.com>" ];
    sha256 = "0gyj0ffya2x5czgilkkn3n663d89bxk28swxm340i1kna0klfhca";
    inherit dependencies buildDependencies features;
  };
  strfmt_0_1_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "strfmt";
    version = "0.1.6";
    authors = [ "Garrett Berg <vitiral@gmail.com>" ];
    sha256 = "0qvin5hgl4xrc6fygc8f1acs13bmmjmj88hzgk1p8jwhb4a5hmwq";
    inherit dependencies buildDependencies features;
  };
  strsim_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "strsim";
    version = "0.7.0";
    authors = [ "Danny Guo <dannyguo91@gmail.com>" ];
    sha256 = "0fy0k5f2705z73mb3x9459bpcvrx4ky8jpr4zikcbiwan4bnm0iv";
    inherit dependencies buildDependencies features;
  };
  structopt_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "structopt";
    version = "0.1.7";
    authors = [ "Guillaume Pinot <texitoi@texitoi.eu>" ];
    sha256 = "0ri9z9da990fybdibzwi96i3gy48fw00m79pyqk6hb06bvg6g7k2";
    inherit dependencies buildDependencies features;
  };
  structopt_derive_0_1_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "structopt-derive";
    version = "0.1.6";
    authors = [ "Guillaume Pinot <texitoi@texitoi.eu>" ];
    sha256 = "0jmym5m7x8h5pcsjk2pizkx50q4a7jpv9m8yvf0bjh9d57cnfak4";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  syn_0_11_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syn";
    version = "0.11.11";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0yw8ng7x1dn5a6ykg0ib49y7r9nhzgpiq2989rqdp7rdz3n85502";
    inherit dependencies buildDependencies features;
  };
  syn_0_12_14_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syn";
    version = "0.12.14";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1f4d8zy31yan86lq6k54x0s2fn2ad7wkm68d6k0hwx1jfq5inshc";
    inherit dependencies buildDependencies features;
  };
  synom_0_11_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "synom";
    version = "0.11.3";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1l6d1s9qjfp6ng2s2z8219igvlv7gyk8gby97sdykqc1r93d8rhc";
    inherit dependencies buildDependencies features;
  };
  tabwriter_1_0_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tabwriter";
    version = "1.0.4";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "02yk7db101lqn24wnm15yy8xb095kv9bnkdvyj7vqhx40vixyibd";
    inherit dependencies buildDependencies features;
  };
  taken_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "taken";
    version = "0.1.1";
    authors = [ "Garrett Berg <vitiral@gmail.com>" ];
    sha256 = "18bnislpyqqv9ir25j3j6dvb9cpamg04nr03w7y465qpyakvcxr3";
    inherit dependencies buildDependencies features;
  };
  tar_0_4_14_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tar";
    version = "0.4.14";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1sqgw96j1mi6m6ybacwy3ffqcq9gf4c22hkl03x4cl3mjc5aqp1a";
    inherit dependencies buildDependencies features;
  };
  tempdir_0_3_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tempdir";
    version = "0.3.6";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1gp7r78p1wianwph2c6hjfrm3npkrsv2yabfri70a9w7q6j53x82";
    inherit dependencies buildDependencies features;
  };
  tempfile_2_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tempfile";
    version = "2.2.0";
    authors = [ "Steven Allen <steven@stebalien.com>" ];
    sha256 = "1z3l901ipvi0s0mdppw4lwfa77ydb22rfnf6y9sh0pifj7ah5drf";
    inherit dependencies buildDependencies features;
  };
  termion_1_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termion";
    version = "1.5.1";
    authors = [ "ticki <Ticki@users.noreply.github.com>" "gycos <alexandre.bury@gmail.com>" "IGI-111 <igi-111@protonmail.com>" ];
    sha256 = "02gq4vd8iws1f3gjrgrgpajsk2bk43nds5acbbb4s8dvrdvr8nf1";
    inherit dependencies buildDependencies features;
  };
  termios_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termios";
    version = "0.2.2";
    authors = [ "David Cuddeback <david.cuddeback@gmail.com>" ];
    sha256 = "0hjy4idvcapx9i6qbhf5536aqnf6rqk2aaj424sfwy7qhv6xmcx3";
    inherit dependencies buildDependencies features;
  };
  textwrap_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "textwrap";
    version = "0.9.0";
    authors = [ "Martin Geisler <martin@geisler.net>" ];
    sha256 = "18jg79ndjlwndz01mlbh82kkr2arqm658yn5kwp65l5n1hz8w4yb";
    inherit dependencies buildDependencies features;
  };
  thread_local_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "thread_local";
    version = "0.3.5";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "0mkp0sp91aqsk7brgygai4igv751r1754rsxn37mig3ag5rx8np6";
    inherit dependencies buildDependencies features;
  };
  toml_0_4_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "toml";
    version = "0.4.5";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "06zxqhn3y58yzjfaykhcrvlf7p2dnn54kn3g4apmja3cn5b18lkk";
    inherit dependencies buildDependencies features;
  };
  ucd_util_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ucd-util";
    version = "0.1.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "02a8h3siipx52b832xc8m8rwasj6nx9jpiwfldw8hp6k205hgkn0";
    inherit dependencies buildDependencies features;
  };
  unicode_segmentation_1_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-segmentation";
    version = "1.2.0";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "0yz43x7wrhr3n7a2zsinx3r60yxsdqicg8a5kycyyhdaq1zmiz1y";
    inherit dependencies buildDependencies features;
  };
  unicode_width_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-width";
    version = "0.1.4";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "1rp7a04icn9y5c0lm74nrd4py0rdl0af8bhdwq7g478n1xifpifl";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_0_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.0.4";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "1dc8wkkcd3s6534s5aw4lbjn8m67flkkbnajp5bl8408wdg8rh9v";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.1.0";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "05wdmwlfzxhq3nhsxn6wx4q8dhxzzfb9szsz6wiw092m1rjj01zj";
    inherit dependencies buildDependencies features;
  };
  unreachable_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unreachable";
    version = "1.0.0";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "1am8czbk5wwr25gbp2zr007744fxjshhdqjz9liz7wl4pnv3whcf";
    inherit dependencies buildDependencies features;
  };
  user32_sys_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "user32-sys";
    version = "0.2.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "09jsljskvjhfpmmi0bva89ymxs00qmsrfgfk98zbq1ygz94mblxz";
    libName = "user32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  utf8_ranges_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "utf8-ranges";
    version = "1.0.0";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0rzmqprwjv9yp1n0qqgahgm24872x6c0xddfym5pfndy7a36vkn0";
    inherit dependencies buildDependencies features;
  };
  vcpkg_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vcpkg";
    version = "0.2.2";
    authors = [ "Jim McGrath <jimmc2@gmail.com>" ];
    sha256 = "1fl5j0ksnwrnsrf1b1a9lqbjgnajdipq0030vsbhx81mb7d9478a";
    inherit dependencies buildDependencies features;
  };
  vec_map_0_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vec_map";
    version = "0.8.0";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Jorge Aparicio <japaricious@gmail.com>" "Alexis Beingessner <a.beingessner@gmail.com>" "Brian Anderson <>" "tbu- <>" "Manish Goregaokar <>" "Aaron Turon <aturon@mozilla.com>" "Adolfo Ochagavía <>" "Niko Matsakis <>" "Steven Fackler <>" "Chase Southwood <csouth3@illinois.edu>" "Eduard Burtescu <>" "Florian Wilkens <>" "Félix Raimundo <>" "Tibor Benke <>" "Markus Siemens <markus@m-siemens.de>" "Josh Branchaud <jbranchaud@gmail.com>" "Huon Wilson <dbau.pp@gmail.com>" "Corey Farwell <coref@rwell.org>" "Aaron Liblong <>" "Nick Cameron <nrc@ncameron.org>" "Patrick Walton <pcwalton@mimiga.net>" "Felix S Klock II <>" "Andrew Paseltiner <apaseltiner@gmail.com>" "Sean McArthur <sean.monstar@gmail.com>" "Vadim Petrochenkov <>" ];
    sha256 = "07sgxp3cf1a4cxm9n3r27fcvqmld32bl2576mrcahnvm34j11xay";
    inherit dependencies buildDependencies features;
  };
  void_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "void";
    version = "1.0.2";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "0h1dm0dx8dhf56a83k68mijyxigqhizpskwxfdrs1drwv2cdclv3";
    inherit dependencies buildDependencies features;
  };
  walkdir_2_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "walkdir";
    version = "2.1.4";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1bx9q2xnhgbjygn99zi8j5avhv8jmkbi5lxgg20h9kmgswqkbmny";
    inherit dependencies buildDependencies features;
  };
  winapi_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.2.8";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0a45b58ywf12vb7gvj6h3j264nydynmzyqz8d8rqxsj6icqv82as";
    inherit dependencies buildDependencies features;
  };
  winapi_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.3.4";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1qbrf5dcnd8j36cawby5d9r5vx07r0l4ryf672pfncnp8895k9lx";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_build_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-build";
    version = "0.1.1";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lxlpi87rkhxcwp2ykf1ldw3p108hwm24nywf3jfrvmff4rjhqga";
    libName = "build";
    inherit dependencies buildDependencies features;
  };
  winapi_i686_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-i686-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "05ihkij18r4gamjpxj4gra24514can762imjzlmak5wlzidplzrp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_x86_64_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-x86_64-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0n1ylmlsb8yg1v583i4xy0qmqg42275flvbc51hdqjjfjcl9vlbj";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  xattr_0_1_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "xattr";
    version = "0.1.11";
    authors = [ "Steven Allen <steven@stebalien.com>" ];
    sha256 = "0v8wad18pdxv7242a7xs18i9hy00ih3vwajz7my05zbxx2ss01nx";
    inherit dependencies buildDependencies features;
  };
  yaml_rust_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "yaml-rust";
    version = "0.4.0";
    authors = [ "Yuheng Chen <yuhengchen@sensetime.com>" ];
    sha256 = "1mqv1jagn9hfym28ypp2dq6hw9kcyilzil9ydlpls0ivb8d9i3h8";
    inherit dependencies buildDependencies features;
  };
  aho_corasick_0_6_4 = { features?(aho_corasick_0_6_4_features {}) }: aho_corasick_0_6_4_ {
    dependencies = mapFeatures features ([ memchr_2_0_1 ]);
  };
  aho_corasick_0_6_4_features = f: updateFeatures f (rec {
    aho_corasick_0_6_4.default = (f.aho_corasick_0_6_4.default or true);
    memchr_2_0_1.default = true;
  }) [ memchr_2_0_1_features ];
  ansi_term_0_9_0 = { features?(ansi_term_0_9_0_features {}) }: ansi_term_0_9_0_ {};
  ansi_term_0_9_0_features = f: updateFeatures f (rec {
    ansi_term_0_9_0.default = (f.ansi_term_0_9_0.default or true);
  }) [];
  ansi_term_0_11_0 = { features?(ansi_term_0_11_0_features {}) }: ansi_term_0_11_0_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  ansi_term_0_11_0_features = f: updateFeatures f (rec {
    ansi_term_0_11_0.default = (f.ansi_term_0_11_0.default or true);
    winapi_0_3_4.consoleapi = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.errhandlingapi = true;
    winapi_0_3_4.processenv = true;
  }) [ winapi_0_3_4_features ];
  argon2rs_0_2_5 = { features?(argon2rs_0_2_5_features {}) }: argon2rs_0_2_5_ {
    dependencies = mapFeatures features ([ blake2_rfc_0_2_18 scoped_threadpool_0_1_9 ]);
    features = mkFeatures (features.argon2rs_0_2_5 or {});
  };
  argon2rs_0_2_5_features = f: updateFeatures f (rec {
    argon2rs_0_2_5.default = (f.argon2rs_0_2_5.default or true);
    blake2_rfc_0_2_18.default = true;
    blake2_rfc_0_2_18.simd_asm =
      (f.blake2_rfc_0_2_18.simd_asm or false) ||
      (argon2rs_0_2_5.simd or false) ||
      (f.argon2rs_0_2_5.simd or false);
    scoped_threadpool_0_1_9.default = true;
  }) [ blake2_rfc_0_2_18_features scoped_threadpool_0_1_9_features ];
  arrayvec_0_4_7 = { features?(arrayvec_0_4_7_features {}) }: arrayvec_0_4_7_ {
    dependencies = mapFeatures features ([ nodrop_0_1_12 ]);
    features = mkFeatures (features.arrayvec_0_4_7 or {});
  };
  arrayvec_0_4_7_features = f: updateFeatures f (rec {
    arrayvec_0_4_7.default = (f.arrayvec_0_4_7.default or true);
    arrayvec_0_4_7.serde =
      (f.arrayvec_0_4_7.serde or false) ||
      (f.arrayvec_0_4_7.serde-1 or false) ||
      (arrayvec_0_4_7.serde-1 or false);
    arrayvec_0_4_7.std =
      (f.arrayvec_0_4_7.std or false) ||
      (f.arrayvec_0_4_7.default or false) ||
      (arrayvec_0_4_7.default or false);
    nodrop_0_1_12.default = (f.nodrop_0_1_12.default or false);
  }) [ nodrop_0_1_12_features ];
  atty_0_2_8 = { features?(atty_0_2_8_features {}) }: atty_0_2_8_ {
    dependencies = (if kernel == "redox" then mapFeatures features ([ termion_1_5_1 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_39 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  atty_0_2_8_features = f: updateFeatures f (rec {
    atty_0_2_8.default = (f.atty_0_2_8.default or true);
    libc_0_2_39.default = (f.libc_0_2_39.default or false);
    termion_1_5_1.default = true;
    winapi_0_3_4.consoleapi = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwinbase = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.processenv = true;
    winapi_0_3_4.winbase = true;
  }) [ termion_1_5_1_features libc_0_2_39_features winapi_0_3_4_features ];
  backtrace_0_3_5 = { features?(backtrace_0_3_5_features {}) }: backtrace_0_3_5_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 rustc_demangle_0_1_7 ])
      ++ (if (kernel == "linux" || kernel == "darwin") && !(kernel == "fuchsia") && !(kernel == "emscripten") && !(kernel == "darwin") && !(kernel == "ios") then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_5.backtrace-sys or false then [ backtrace_sys_0_1_16 ] else [])) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_39 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_5.winapi or false then [ winapi_0_3_4 ] else [])) else []);
    features = mkFeatures (features.backtrace_0_3_5 or {});
  };
  backtrace_0_3_5_features = f: updateFeatures f (rec {
    backtrace_0_3_5.addr2line =
      (f.backtrace_0_3_5.addr2line or false) ||
      (f.backtrace_0_3_5.gimli-symbolize or false) ||
      (backtrace_0_3_5.gimli-symbolize or false);
    backtrace_0_3_5.backtrace-sys =
      (f.backtrace_0_3_5.backtrace-sys or false) ||
      (f.backtrace_0_3_5.libbacktrace or false) ||
      (backtrace_0_3_5.libbacktrace or false);
    backtrace_0_3_5.coresymbolication =
      (f.backtrace_0_3_5.coresymbolication or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.dbghelp =
      (f.backtrace_0_3_5.dbghelp or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.default = (f.backtrace_0_3_5.default or true);
    backtrace_0_3_5.dladdr =
      (f.backtrace_0_3_5.dladdr or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.findshlibs =
      (f.backtrace_0_3_5.findshlibs or false) ||
      (f.backtrace_0_3_5.gimli-symbolize or false) ||
      (backtrace_0_3_5.gimli-symbolize or false);
    backtrace_0_3_5.libbacktrace =
      (f.backtrace_0_3_5.libbacktrace or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.libunwind =
      (f.backtrace_0_3_5.libunwind or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.rustc-serialize =
      (f.backtrace_0_3_5.rustc-serialize or false) ||
      (f.backtrace_0_3_5.serialize-rustc or false) ||
      (backtrace_0_3_5.serialize-rustc or false);
    backtrace_0_3_5.serde =
      (f.backtrace_0_3_5.serde or false) ||
      (f.backtrace_0_3_5.serialize-serde or false) ||
      (backtrace_0_3_5.serialize-serde or false);
    backtrace_0_3_5.serde_derive =
      (f.backtrace_0_3_5.serde_derive or false) ||
      (f.backtrace_0_3_5.serialize-serde or false) ||
      (backtrace_0_3_5.serialize-serde or false);
    backtrace_0_3_5.winapi =
      (f.backtrace_0_3_5.winapi or false) ||
      (f.backtrace_0_3_5.dbghelp or false) ||
      (backtrace_0_3_5.dbghelp or false);
    backtrace_sys_0_1_16.default = true;
    cfg_if_0_1_2.default = true;
    libc_0_2_39.default = true;
    rustc_demangle_0_1_7.default = true;
    winapi_0_3_4.dbghelp = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.processthreadsapi = true;
    winapi_0_3_4.std = true;
    winapi_0_3_4.winnt = true;
  }) [ cfg_if_0_1_2_features rustc_demangle_0_1_7_features backtrace_sys_0_1_16_features libc_0_2_39_features winapi_0_3_4_features ];
  backtrace_sys_0_1_16 = { features?(backtrace_sys_0_1_16_features {}) }: backtrace_sys_0_1_16_ {
    dependencies = mapFeatures features ([ libc_0_2_39 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_6 ]);
  };
  backtrace_sys_0_1_16_features = f: updateFeatures f (rec {
    backtrace_sys_0_1_16.default = (f.backtrace_sys_0_1_16.default or true);
    cc_1_0_6.default = true;
    libc_0_2_39.default = true;
  }) [ libc_0_2_39_features cc_1_0_6_features ];
  base64_0_6_0 = { features?(base64_0_6_0_features {}) }: base64_0_6_0_ {
    dependencies = mapFeatures features ([ byteorder_1_2_1 safemem_0_2_0 ]);
  };
  base64_0_6_0_features = f: updateFeatures f (rec {
    base64_0_6_0.default = (f.base64_0_6_0.default or true);
    byteorder_1_2_1.default = true;
    safemem_0_2_0.default = true;
  }) [ byteorder_1_2_1_features safemem_0_2_0_features ];
  bitflags_0_4_0 = { features?(bitflags_0_4_0_features {}) }: bitflags_0_4_0_ {
    features = mkFeatures (features.bitflags_0_4_0 or {});
  };
  bitflags_0_4_0_features = f: updateFeatures f (rec {
    bitflags_0_4_0.default = (f.bitflags_0_4_0.default or true);
  }) [];
  bitflags_0_9_1 = { features?(bitflags_0_9_1_features {}) }: bitflags_0_9_1_ {
    features = mkFeatures (features.bitflags_0_9_1 or {});
  };
  bitflags_0_9_1_features = f: updateFeatures f (rec {
    bitflags_0_9_1.default = (f.bitflags_0_9_1.default or true);
    bitflags_0_9_1.example_generated =
      (f.bitflags_0_9_1.example_generated or false) ||
      (f.bitflags_0_9_1.default or false) ||
      (bitflags_0_9_1.default or false);
  }) [];
  bitflags_1_0_1 = { features?(bitflags_1_0_1_features {}) }: bitflags_1_0_1_ {
    features = mkFeatures (features.bitflags_1_0_1 or {});
  };
  bitflags_1_0_1_features = f: updateFeatures f (rec {
    bitflags_1_0_1.default = (f.bitflags_1_0_1.default or true);
    bitflags_1_0_1.example_generated =
      (f.bitflags_1_0_1.example_generated or false) ||
      (f.bitflags_1_0_1.default or false) ||
      (bitflags_1_0_1.default or false);
  }) [];
  blake2_rfc_0_2_18 = { features?(blake2_rfc_0_2_18_features {}) }: blake2_rfc_0_2_18_ {
    dependencies = mapFeatures features ([ arrayvec_0_4_7 constant_time_eq_0_1_3 ]);
    features = mkFeatures (features.blake2_rfc_0_2_18 or {});
  };
  blake2_rfc_0_2_18_features = f: updateFeatures f (rec {
    arrayvec_0_4_7.default = (f.arrayvec_0_4_7.default or false);
    blake2_rfc_0_2_18.default = (f.blake2_rfc_0_2_18.default or true);
    blake2_rfc_0_2_18.simd =
      (f.blake2_rfc_0_2_18.simd or false) ||
      (f.blake2_rfc_0_2_18.simd_opt or false) ||
      (blake2_rfc_0_2_18.simd_opt or false);
    blake2_rfc_0_2_18.simd_opt =
      (f.blake2_rfc_0_2_18.simd_opt or false) ||
      (f.blake2_rfc_0_2_18.simd_asm or false) ||
      (blake2_rfc_0_2_18.simd_asm or false);
    blake2_rfc_0_2_18.std =
      (f.blake2_rfc_0_2_18.std or false) ||
      (f.blake2_rfc_0_2_18.default or false) ||
      (blake2_rfc_0_2_18.default or false);
    constant_time_eq_0_1_3.default = true;
  }) [ arrayvec_0_4_7_features constant_time_eq_0_1_3_features ];
  byteorder_1_2_1 = { features?(byteorder_1_2_1_features {}) }: byteorder_1_2_1_ {
    features = mkFeatures (features.byteorder_1_2_1 or {});
  };
  byteorder_1_2_1_features = f: updateFeatures f (rec {
    byteorder_1_2_1.default = (f.byteorder_1_2_1.default or true);
    byteorder_1_2_1.std =
      (f.byteorder_1_2_1.std or false) ||
      (f.byteorder_1_2_1.default or false) ||
      (byteorder_1_2_1.default or false);
  }) [];
  cc_1_0_6 = { features?(cc_1_0_6_features {}) }: cc_1_0_6_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.cc_1_0_6 or {});
  };
  cc_1_0_6_features = f: updateFeatures f (rec {
    cc_1_0_6.default = (f.cc_1_0_6.default or true);
    cc_1_0_6.rayon =
      (f.cc_1_0_6.rayon or false) ||
      (f.cc_1_0_6.parallel or false) ||
      (cc_1_0_6.parallel or false);
  }) [];
  cfg_if_0_1_2 = { features?(cfg_if_0_1_2_features {}) }: cfg_if_0_1_2_ {};
  cfg_if_0_1_2_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = (f.cfg_if_0_1_2.default or true);
  }) [];
  clap_2_31_1 = { features?(clap_2_31_1_features {}) }: clap_2_31_1_ {
    dependencies = mapFeatures features ([ bitflags_1_0_1 textwrap_0_9_0 unicode_width_0_1_4 ]
      ++ (if features.clap_2_31_1.atty or false then [ atty_0_2_8 ] else [])
      ++ (if features.clap_2_31_1.strsim or false then [ strsim_0_7_0 ] else [])
      ++ (if features.clap_2_31_1.vec_map or false then [ vec_map_0_8_0 ] else []))
      ++ (if !(kernel == "windows") then mapFeatures features ([ ]
      ++ (if features.clap_2_31_1.ansi_term or false then [ ansi_term_0_11_0 ] else [])) else []);
    features = mkFeatures (features.clap_2_31_1 or {});
  };
  clap_2_31_1_features = f: updateFeatures f (rec {
    ansi_term_0_11_0.default = true;
    atty_0_2_8.default = true;
    bitflags_1_0_1.default = true;
    clap_2_31_1.ansi_term =
      (f.clap_2_31_1.ansi_term or false) ||
      (f.clap_2_31_1.color or false) ||
      (clap_2_31_1.color or false);
    clap_2_31_1.atty =
      (f.clap_2_31_1.atty or false) ||
      (f.clap_2_31_1.color or false) ||
      (clap_2_31_1.color or false);
    clap_2_31_1.clippy =
      (f.clap_2_31_1.clippy or false) ||
      (f.clap_2_31_1.lints or false) ||
      (clap_2_31_1.lints or false);
    clap_2_31_1.color =
      (f.clap_2_31_1.color or false) ||
      (f.clap_2_31_1.default or false) ||
      (clap_2_31_1.default or false);
    clap_2_31_1.default = (f.clap_2_31_1.default or true);
    clap_2_31_1.strsim =
      (f.clap_2_31_1.strsim or false) ||
      (f.clap_2_31_1.suggestions or false) ||
      (clap_2_31_1.suggestions or false);
    clap_2_31_1.suggestions =
      (f.clap_2_31_1.suggestions or false) ||
      (f.clap_2_31_1.default or false) ||
      (clap_2_31_1.default or false);
    clap_2_31_1.term_size =
      (f.clap_2_31_1.term_size or false) ||
      (f.clap_2_31_1.wrap_help or false) ||
      (clap_2_31_1.wrap_help or false);
    clap_2_31_1.vec_map =
      (f.clap_2_31_1.vec_map or false) ||
      (f.clap_2_31_1.default or false) ||
      (clap_2_31_1.default or false);
    clap_2_31_1.yaml =
      (f.clap_2_31_1.yaml or false) ||
      (f.clap_2_31_1.doc or false) ||
      (clap_2_31_1.doc or false);
    clap_2_31_1.yaml-rust =
      (f.clap_2_31_1.yaml-rust or false) ||
      (f.clap_2_31_1.yaml or false) ||
      (clap_2_31_1.yaml or false);
    strsim_0_7_0.default = true;
    textwrap_0_9_0.default = true;
    textwrap_0_9_0.term_size =
      (f.textwrap_0_9_0.term_size or false) ||
      (clap_2_31_1.wrap_help or false) ||
      (f.clap_2_31_1.wrap_help or false);
    unicode_width_0_1_4.default = true;
    vec_map_0_8_0.default = true;
  }) [ atty_0_2_8_features bitflags_1_0_1_features strsim_0_7_0_features textwrap_0_9_0_features unicode_width_0_1_4_features vec_map_0_8_0_features ansi_term_0_11_0_features ];
  clicolors_control_0_2_0 = { features?(clicolors_control_0_2_0_features {}) }: clicolors_control_0_2_0_ {
    dependencies = mapFeatures features ([ lazy_static_0_2_11 ])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_39 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_3_4 ]) else []);
    features = mkFeatures (features.clicolors_control_0_2_0 or {});
  };
  clicolors_control_0_2_0_features = f: updateFeatures f (rec {
    clicolors_control_0_2_0.default = (f.clicolors_control_0_2_0.default or true);
    clicolors_control_0_2_0.terminal_autoconfig =
      (f.clicolors_control_0_2_0.terminal_autoconfig or false) ||
      (f.clicolors_control_0_2_0.default or false) ||
      (clicolors_control_0_2_0.default or false);
    kernel32_sys_0_2_2.default = true;
    lazy_static_0_2_11.default = true;
    libc_0_2_39.default = true;
    winapi_0_3_4.consoleapi = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.handleapi = true;
    winapi_0_3_4.processenv = true;
    winapi_0_3_4.winbase = true;
  }) [ lazy_static_0_2_11_features libc_0_2_39_features kernel32_sys_0_2_2_features winapi_0_3_4_features ];
  configure_0_1_1 = { features?(configure_0_1_1_features {}) }: configure_0_1_1_ {
    dependencies = mapFeatures features ([ configure_derive_0_1_1 erased_serde_0_3_3 heck_0_3_0 serde_1_0_29 toml_0_4_5 ]);
  };
  configure_0_1_1_features = f: updateFeatures f (rec {
    configure_0_1_1.default = (f.configure_0_1_1.default or true);
    configure_derive_0_1_1.default = true;
    erased_serde_0_3_3.default = true;
    heck_0_3_0.default = true;
    serde_1_0_29.default = true;
    toml_0_4_5.default = true;
  }) [ configure_derive_0_1_1_features erased_serde_0_3_3_features heck_0_3_0_features serde_1_0_29_features toml_0_4_5_features ];
  configure_derive_0_1_1 = { features?(configure_derive_0_1_1_features {}) }: configure_derive_0_1_1_ {
    dependencies = mapFeatures features ([ heck_0_3_0 quote_0_3_15 syn_0_11_11 ]);
  };
  configure_derive_0_1_1_features = f: updateFeatures f (rec {
    configure_derive_0_1_1.default = (f.configure_derive_0_1_1.default or true);
    heck_0_3_0.default = true;
    quote_0_3_15.default = true;
    syn_0_11_11.default = true;
  }) [ heck_0_3_0_features quote_0_3_15_features syn_0_11_11_features ];
  console_0_6_1 = { features?(console_0_6_1_features {}) }: console_0_6_1_ {
    dependencies = mapFeatures features ([ clicolors_control_0_2_0 lazy_static_0_2_11 libc_0_2_39 parking_lot_0_5_4 regex_0_2_7 unicode_width_0_1_4 ])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ termios_0_2_2 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  console_0_6_1_features = f: updateFeatures f (rec {
    clicolors_control_0_2_0.default = true;
    console_0_6_1.default = (f.console_0_6_1.default or true);
    lazy_static_0_2_11.default = true;
    libc_0_2_39.default = true;
    parking_lot_0_5_4.default = true;
    regex_0_2_7.default = true;
    termios_0_2_2.default = true;
    unicode_width_0_1_4.default = true;
    winapi_0_3_4.consoleapi = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.processenv = true;
    winapi_0_3_4.winbase = true;
    winapi_0_3_4.wincon = true;
    winapi_0_3_4.winuser = true;
  }) [ clicolors_control_0_2_0_features lazy_static_0_2_11_features libc_0_2_39_features parking_lot_0_5_4_features regex_0_2_7_features unicode_width_0_1_4_features termios_0_2_2_features winapi_0_3_4_features ];
  constant_time_eq_0_1_3 = { features?(constant_time_eq_0_1_3_features {}) }: constant_time_eq_0_1_3_ {};
  constant_time_eq_0_1_3_features = f: updateFeatures f (rec {
    constant_time_eq_0_1_3.default = (f.constant_time_eq_0_1_3.default or true);
  }) [];
  core_foundation_0_3_0 = { features?(core_foundation_0_3_0_features {}) }: core_foundation_0_3_0_ {
    dependencies = mapFeatures features ([ core_foundation_sys_0_3_1 libc_0_2_39 ]);
  };
  core_foundation_0_3_0_features = f: updateFeatures f (rec {
    core_foundation_0_3_0.default = (f.core_foundation_0_3_0.default or true);
    core_foundation_sys_0_3_1.default = true;
    libc_0_2_39.default = true;
  }) [ core_foundation_sys_0_3_1_features libc_0_2_39_features ];
  core_foundation_sys_0_3_1 = { features?(core_foundation_sys_0_3_1_features {}) }: core_foundation_sys_0_3_1_ {
    dependencies = mapFeatures features ([ libc_0_2_39 ]);
  };
  core_foundation_sys_0_3_1_features = f: updateFeatures f (rec {
    core_foundation_sys_0_3_1.default = (f.core_foundation_sys_0_3_1.default or true);
    libc_0_2_39.default = true;
  }) [ libc_0_2_39_features ];
  core_graphics_0_8_2 = { features?(core_graphics_0_8_2_features {}) }: core_graphics_0_8_2_ {
    dependencies = mapFeatures features ([ bitflags_0_9_1 core_foundation_0_3_0 libc_0_2_39 ]);
    features = mkFeatures (features.core_graphics_0_8_2 or {});
  };
  core_graphics_0_8_2_features = f: updateFeatures f (rec {
    bitflags_0_9_1.default = true;
    core_foundation_0_3_0.default = true;
    core_graphics_0_8_2.default = (f.core_graphics_0_8_2.default or true);
    libc_0_2_39.default = true;
  }) [ bitflags_0_9_1_features core_foundation_0_3_0_features libc_0_2_39_features ];
  crossbeam_channel_0_1_2 = { features?(crossbeam_channel_0_1_2_features {}) }: crossbeam_channel_0_1_2_ {
    dependencies = mapFeatures features ([ crossbeam_epoch_0_2_0 crossbeam_utils_0_2_2 parking_lot_0_4_8 ]);
    features = mkFeatures (features.crossbeam_channel_0_1_2 or {});
  };
  crossbeam_channel_0_1_2_features = f: updateFeatures f (rec {
    crossbeam_channel_0_1_2.default = (f.crossbeam_channel_0_1_2.default or true);
    crossbeam_epoch_0_2_0.default = true;
    crossbeam_utils_0_2_2.default = true;
    parking_lot_0_4_8.default = true;
  }) [ crossbeam_epoch_0_2_0_features crossbeam_utils_0_2_2_features parking_lot_0_4_8_features ];
  crossbeam_epoch_0_2_0 = { features?(crossbeam_epoch_0_2_0_features {}) }: crossbeam_epoch_0_2_0_ {
    dependencies = mapFeatures features ([ arrayvec_0_4_7 cfg_if_0_1_2 crossbeam_utils_0_2_2 memoffset_0_1_0 scopeguard_0_3_3 ]
      ++ (if features.crossbeam_epoch_0_2_0.lazy_static or false then [ lazy_static_0_2_11 ] else []));
    features = mkFeatures (features.crossbeam_epoch_0_2_0 or {});
  };
  crossbeam_epoch_0_2_0_features = f: updateFeatures f (rec {
    arrayvec_0_4_7.default = (f.arrayvec_0_4_7.default or false);
    arrayvec_0_4_7.use_union =
      (f.arrayvec_0_4_7.use_union or false) ||
      (crossbeam_epoch_0_2_0.nightly or false) ||
      (f.crossbeam_epoch_0_2_0.nightly or false);
    cfg_if_0_1_2.default = true;
    crossbeam_epoch_0_2_0.default = (f.crossbeam_epoch_0_2_0.default or true);
    crossbeam_epoch_0_2_0.lazy_static =
      (f.crossbeam_epoch_0_2_0.lazy_static or false) ||
      (f.crossbeam_epoch_0_2_0.use_std or false) ||
      (crossbeam_epoch_0_2_0.use_std or false);
    crossbeam_epoch_0_2_0.use_std =
      (f.crossbeam_epoch_0_2_0.use_std or false) ||
      (f.crossbeam_epoch_0_2_0.default or false) ||
      (crossbeam_epoch_0_2_0.default or false);
    crossbeam_utils_0_2_2.default = (f.crossbeam_utils_0_2_2.default or false);
    crossbeam_utils_0_2_2.use_std =
      (f.crossbeam_utils_0_2_2.use_std or false) ||
      (crossbeam_epoch_0_2_0.use_std or false) ||
      (f.crossbeam_epoch_0_2_0.use_std or false);
    lazy_static_0_2_11.default = true;
    memoffset_0_1_0.default = (f.memoffset_0_1_0.default or false);
    scopeguard_0_3_3.default = (f.scopeguard_0_3_3.default or false);
  }) [ arrayvec_0_4_7_features cfg_if_0_1_2_features crossbeam_utils_0_2_2_features lazy_static_0_2_11_features memoffset_0_1_0_features scopeguard_0_3_3_features ];
  crossbeam_utils_0_2_2 = { features?(crossbeam_utils_0_2_2_features {}) }: crossbeam_utils_0_2_2_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 ]);
    features = mkFeatures (features.crossbeam_utils_0_2_2 or {});
  };
  crossbeam_utils_0_2_2_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = true;
    crossbeam_utils_0_2_2.default = (f.crossbeam_utils_0_2_2.default or true);
    crossbeam_utils_0_2_2.use_std =
      (f.crossbeam_utils_0_2_2.use_std or false) ||
      (f.crossbeam_utils_0_2_2.default or false) ||
      (crossbeam_utils_0_2_2.default or false);
  }) [ cfg_if_0_1_2_features ];
  ctrlc_3_1_0 = { features?(ctrlc_3_1_0_features {}) }: ctrlc_3_1_0_ {
    dependencies = (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ nix_0_9_0 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
    features = mkFeatures (features.ctrlc_3_1_0 or {});
  };
  ctrlc_3_1_0_features = f: updateFeatures f (rec {
    ctrlc_3_1_0.default = (f.ctrlc_3_1_0.default or true);
    kernel32_sys_0_2_2.default = true;
    nix_0_9_0.default = true;
    winapi_0_2_8.default = true;
  }) [ nix_0_9_0_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  dialoguer_0_1_0 = { features?(dialoguer_0_1_0_features {}) }: dialoguer_0_1_0_ {
    dependencies = mapFeatures features ([ console_0_6_1 tempfile_2_2_0 ]);
  };
  dialoguer_0_1_0_features = f: updateFeatures f (rec {
    console_0_6_1.default = true;
    dialoguer_0_1_0.default = (f.dialoguer_0_1_0.default or true);
    tempfile_2_2_0.default = true;
  }) [ console_0_6_1_features tempfile_2_2_0_features ];
  dtoa_0_4_2 = { features?(dtoa_0_4_2_features {}) }: dtoa_0_4_2_ {};
  dtoa_0_4_2_features = f: updateFeatures f (rec {
    dtoa_0_4_2.default = (f.dtoa_0_4_2.default or true);
  }) [];
  either_1_4_0 = { features?(either_1_4_0_features {}) }: either_1_4_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.either_1_4_0 or {});
  };
  either_1_4_0_features = f: updateFeatures f (rec {
    either_1_4_0.default = (f.either_1_4_0.default or true);
    either_1_4_0.use_std =
      (f.either_1_4_0.use_std or false) ||
      (f.either_1_4_0.default or false) ||
      (either_1_4_0.default or false);
  }) [];
  encode_unicode_0_1_3 = { features?(encode_unicode_0_1_3_features {}) }: encode_unicode_0_1_3_ {
    dependencies = mapFeatures features ([]);
  };
  encode_unicode_0_1_3_features = f: updateFeatures f (rec {
    encode_unicode_0_1_3.default = (f.encode_unicode_0_1_3.default or true);
  }) [];
  enigo_0_0_11 = { features?(enigo_0_0_11_features {}) }: enigo_0_0_11_ {
    dependencies = mapFeatures features ([])
      ++ (if kernel == "linux" then mapFeatures features ([ libc_0_2_39 ]) else [])
      ++ (if kernel == "darwin" then mapFeatures features ([ core_graphics_0_8_2 libc_0_2_39 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ user32_sys_0_2_0 winapi_0_2_8 ]) else []);
    buildDependencies = mapFeatures features ([ pkg_config_0_3_9 ]);
    features = mkFeatures (features.enigo_0_0_11 or {});
  };
  enigo_0_0_11_features = f: updateFeatures f (rec {
    core_graphics_0_8_2.default = true;
    enigo_0_0_11.default = (f.enigo_0_0_11.default or true);
    enigo_0_0_11.serde =
      (f.enigo_0_0_11.serde or false) ||
      (f.enigo_0_0_11.with_serde or false) ||
      (enigo_0_0_11.with_serde or false);
    enigo_0_0_11.serde_derive =
      (f.enigo_0_0_11.serde_derive or false) ||
      (f.enigo_0_0_11.with_serde or false) ||
      (enigo_0_0_11.with_serde or false);
    libc_0_2_39.default = true;
    pkg_config_0_3_9.default = true;
    user32_sys_0_2_0.default = true;
    winapi_0_2_8.default = true;
  }) [ pkg_config_0_3_9_features libc_0_2_39_features core_graphics_0_8_2_features libc_0_2_39_features user32_sys_0_2_0_features winapi_0_2_8_features ];
  erased_serde_0_3_3 = { features?(erased_serde_0_3_3_features {}) }: erased_serde_0_3_3_ {
    dependencies = mapFeatures features ([ serde_1_0_29 ]);
    features = mkFeatures (features.erased_serde_0_3_3 or {});
  };
  erased_serde_0_3_3_features = f: updateFeatures f (rec {
    erased_serde_0_3_3.default = (f.erased_serde_0_3_3.default or true);
    serde_1_0_29.default = true;
  }) [ serde_1_0_29_features ];
  ergo_0_0_1 = { features?(ergo_0_0_1_features {}) }: ergo_0_0_1_ {
    dependencies = mapFeatures features ([ ergo_config_0_0_1 ergo_fs_0_1_5 ergo_std_0_0_1 ergo_sync_0_1_0 ergo_sys_0_0_1 ]);
  };
  ergo_0_0_1_features = f: updateFeatures f (rec {
    ergo_0_0_1.default = (f.ergo_0_0_1.default or true);
    ergo_config_0_0_1.default = true;
    ergo_fs_0_1_5.default = true;
    ergo_std_0_0_1.default = true;
    ergo_sync_0_1_0.default = true;
    ergo_sys_0_0_1.default = true;
  }) [ ergo_config_0_0_1_features ergo_fs_0_1_5_features ergo_std_0_0_1_features ergo_sync_0_1_0_features ergo_sys_0_0_1_features ];
  ergo_config_0_0_1 = { features?(ergo_config_0_0_1_features {}) }: ergo_config_0_0_1_ {
    dependencies = mapFeatures features ([ configure_0_1_1 ron_0_1_7 serde_json_1_0_10 serde_yaml_0_7_3 toml_0_4_5 ]);
  };
  ergo_config_0_0_1_features = f: updateFeatures f (rec {
    configure_0_1_1.default = true;
    ergo_config_0_0_1.default = (f.ergo_config_0_0_1.default or true);
    ron_0_1_7.default = true;
    serde_json_1_0_10.default = true;
    serde_yaml_0_7_3.default = true;
    toml_0_4_5.default = true;
  }) [ configure_0_1_1_features ron_0_1_7_features serde_json_1_0_10_features serde_yaml_0_7_3_features toml_0_4_5_features ];
  ergo_fs_0_1_5 = { features?(ergo_fs_0_1_5_features {}) }: ergo_fs_0_1_5_ {
    dependencies = mapFeatures features ([ glob_0_2_11 path_abs_0_3_16 shellexpand_1_0_0 std_prelude_0_2_12 tar_0_4_14 tempdir_0_3_6 walkdir_2_1_4 ]);
  };
  ergo_fs_0_1_5_features = f: updateFeatures f (rec {
    ergo_fs_0_1_5.default = (f.ergo_fs_0_1_5.default or true);
    glob_0_2_11.default = true;
    path_abs_0_3_16.default = true;
    shellexpand_1_0_0.default = true;
    std_prelude_0_2_12.default = true;
    tar_0_4_14.default = true;
    tempdir_0_3_6.default = true;
    walkdir_2_1_4.default = true;
  }) [ glob_0_2_11_features path_abs_0_3_16_features shellexpand_1_0_0_features std_prelude_0_2_12_features tar_0_4_14_features tempdir_0_3_6_features walkdir_2_1_4_features ];
  ergo_std_0_0_1 = { features?(ergo_std_0_0_1_features {}) }: ergo_std_0_0_1_ {
    dependencies = mapFeatures features ([ itertools_0_7_7 lazy_static_1_0_0 maplit_1_0_1 regex_0_2_7 serde_1_0_29 serde_derive_1_0_29 std_prelude_0_2_12 ]);
  };
  ergo_std_0_0_1_features = f: updateFeatures f (rec {
    ergo_std_0_0_1.default = (f.ergo_std_0_0_1.default or true);
    itertools_0_7_7.default = true;
    lazy_static_1_0_0.default = true;
    maplit_1_0_1.default = true;
    regex_0_2_7.default = true;
    serde_1_0_29.default = true;
    serde_derive_1_0_29.default = true;
    std_prelude_0_2_12.default = true;
  }) [ itertools_0_7_7_features lazy_static_1_0_0_features maplit_1_0_1_features regex_0_2_7_features serde_1_0_29_features serde_derive_1_0_29_features std_prelude_0_2_12_features ];
  ergo_sync_0_1_0 = { features?(ergo_sync_0_1_0_features {}) }: ergo_sync_0_1_0_ {
    dependencies = mapFeatures features ([ crossbeam_channel_0_1_2 num_cpus_1_8_0 std_prelude_0_2_12 taken_0_1_1 ]);
  };
  ergo_sync_0_1_0_features = f: updateFeatures f (rec {
    crossbeam_channel_0_1_2.default = true;
    ergo_sync_0_1_0.default = (f.ergo_sync_0_1_0.default or true);
    num_cpus_1_8_0.default = true;
    std_prelude_0_2_12.default = true;
    taken_0_1_1.default = true;
  }) [ crossbeam_channel_0_1_2_features num_cpus_1_8_0_features std_prelude_0_2_12_features taken_0_1_1_features ];
  ergo_sys_0_0_1 = { features?(ergo_sys_0_0_1_features {}) }: ergo_sys_0_0_1_ {
    dependencies = mapFeatures features ([ ctrlc_3_1_0 rand_0_4_2 ]);
  };
  ergo_sys_0_0_1_features = f: updateFeatures f (rec {
    ctrlc_3_1_0.default = true;
    ergo_sys_0_0_1.default = (f.ergo_sys_0_0_1.default or true);
    rand_0_4_2.default = true;
  }) [ ctrlc_3_1_0_features rand_0_4_2_features ];
  error_chain_0_11_0 = { features?(error_chain_0_11_0_features {}) }: error_chain_0_11_0_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.error_chain_0_11_0.backtrace or false then [ backtrace_0_3_5 ] else []));
    features = mkFeatures (features.error_chain_0_11_0 or {});
  };
  error_chain_0_11_0_features = f: updateFeatures f (rec {
    backtrace_0_3_5.default = true;
    error_chain_0_11_0.backtrace =
      (f.error_chain_0_11_0.backtrace or false) ||
      (f.error_chain_0_11_0.default or false) ||
      (error_chain_0_11_0.default or false);
    error_chain_0_11_0.default = (f.error_chain_0_11_0.default or true);
    error_chain_0_11_0.example_generated =
      (f.error_chain_0_11_0.example_generated or false) ||
      (f.error_chain_0_11_0.default or false) ||
      (error_chain_0_11_0.default or false);
  }) [ backtrace_0_3_5_features ];
  file_lock_0_0_17 = { features?(file_lock_0_0_17_features {}) }: file_lock_0_0_17_ {
    dependencies = mapFeatures features ([ libc_0_2_39 ]);
    buildDependencies = mapFeatures features ([ gcc_0_3_54 ]);
    features = mkFeatures (features.file_lock_0_0_17 or {});
  };
  file_lock_0_0_17_features = f: updateFeatures f (rec {
    file_lock_0_0_17.default = (f.file_lock_0_0_17.default or true);
    gcc_0_3_54.default = true;
    libc_0_2_39.default = true;
  }) [ libc_0_2_39_features gcc_0_3_54_features ];
  filetime_0_1_15 = { features?(filetime_0_1_15_features {}) }: filetime_0_1_15_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 ])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_37 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_39 ]) else []);
  };
  filetime_0_1_15_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = true;
    filetime_0_1_15.default = (f.filetime_0_1_15.default or true);
    libc_0_2_39.default = true;
    redox_syscall_0_1_37.default = true;
  }) [ cfg_if_0_1_2_features redox_syscall_0_1_37_features libc_0_2_39_features ];
  foreign_types_0_3_2 = { features?(foreign_types_0_3_2_features {}) }: foreign_types_0_3_2_ {
    dependencies = mapFeatures features ([ foreign_types_shared_0_1_1 ]);
  };
  foreign_types_0_3_2_features = f: updateFeatures f (rec {
    foreign_types_0_3_2.default = (f.foreign_types_0_3_2.default or true);
    foreign_types_shared_0_1_1.default = true;
  }) [ foreign_types_shared_0_1_1_features ];
  foreign_types_shared_0_1_1 = { features?(foreign_types_shared_0_1_1_features {}) }: foreign_types_shared_0_1_1_ {};
  foreign_types_shared_0_1_1_features = f: updateFeatures f (rec {
    foreign_types_shared_0_1_1.default = (f.foreign_types_shared_0_1_1.default or true);
  }) [];
  fuchsia_zircon_0_3_3 = { features?(fuchsia_zircon_0_3_3_features {}) }: fuchsia_zircon_0_3_3_ {
    dependencies = mapFeatures features ([ bitflags_1_0_1 fuchsia_zircon_sys_0_3_3 ]);
  };
  fuchsia_zircon_0_3_3_features = f: updateFeatures f (rec {
    bitflags_1_0_1.default = true;
    fuchsia_zircon_0_3_3.default = (f.fuchsia_zircon_0_3_3.default or true);
    fuchsia_zircon_sys_0_3_3.default = true;
  }) [ bitflags_1_0_1_features fuchsia_zircon_sys_0_3_3_features ];
  fuchsia_zircon_sys_0_3_3 = { features?(fuchsia_zircon_sys_0_3_3_features {}) }: fuchsia_zircon_sys_0_3_3_ {};
  fuchsia_zircon_sys_0_3_3_features = f: updateFeatures f (rec {
    fuchsia_zircon_sys_0_3_3.default = (f.fuchsia_zircon_sys_0_3_3.default or true);
  }) [];
  gcc_0_3_54 = { features?(gcc_0_3_54_features {}) }: gcc_0_3_54_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.gcc_0_3_54 or {});
  };
  gcc_0_3_54_features = f: updateFeatures f (rec {
    gcc_0_3_54.default = (f.gcc_0_3_54.default or true);
    gcc_0_3_54.rayon =
      (f.gcc_0_3_54.rayon or false) ||
      (f.gcc_0_3_54.parallel or false) ||
      (gcc_0_3_54.parallel or false);
  }) [];
  glob_0_2_11 = { features?(glob_0_2_11_features {}) }: glob_0_2_11_ {};
  glob_0_2_11_features = f: updateFeatures f (rec {
    glob_0_2_11.default = (f.glob_0_2_11.default or true);
  }) [];
  heck_0_3_0 = { features?(heck_0_3_0_features {}) }: heck_0_3_0_ {
    dependencies = mapFeatures features ([ unicode_segmentation_1_2_0 ]);
  };
  heck_0_3_0_features = f: updateFeatures f (rec {
    heck_0_3_0.default = (f.heck_0_3_0.default or true);
    unicode_segmentation_1_2_0.default = true;
  }) [ unicode_segmentation_1_2_0_features ];
  itertools_0_7_7 = { features?(itertools_0_7_7_features {}) }: itertools_0_7_7_ {
    dependencies = mapFeatures features ([ either_1_4_0 ]);
    features = mkFeatures (features.itertools_0_7_7 or {});
  };
  itertools_0_7_7_features = f: updateFeatures f (rec {
    either_1_4_0.default = (f.either_1_4_0.default or false);
    itertools_0_7_7.default = (f.itertools_0_7_7.default or true);
    itertools_0_7_7.use_std =
      (f.itertools_0_7_7.use_std or false) ||
      (f.itertools_0_7_7.default or false) ||
      (itertools_0_7_7.default or false);
  }) [ either_1_4_0_features ];
  itoa_0_3_4 = { features?(itoa_0_3_4_features {}) }: itoa_0_3_4_ {
    features = mkFeatures (features.itoa_0_3_4 or {});
  };
  itoa_0_3_4_features = f: updateFeatures f (rec {
    itoa_0_3_4.default = (f.itoa_0_3_4.default or true);
  }) [];
  kernel32_sys_0_2_2 = { features?(kernel32_sys_0_2_2_features {}) }: kernel32_sys_0_2_2_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  kernel32_sys_0_2_2_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = (f.kernel32_sys_0_2_2.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  lazy_static_0_2_11 = { features?(lazy_static_0_2_11_features {}) }: lazy_static_0_2_11_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_0_2_11 or {});
  };
  lazy_static_0_2_11_features = f: updateFeatures f (rec {
    lazy_static_0_2_11.compiletest_rs =
      (f.lazy_static_0_2_11.compiletest_rs or false) ||
      (f.lazy_static_0_2_11.compiletest or false) ||
      (lazy_static_0_2_11.compiletest or false);
    lazy_static_0_2_11.default = (f.lazy_static_0_2_11.default or true);
    lazy_static_0_2_11.nightly =
      (f.lazy_static_0_2_11.nightly or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
    lazy_static_0_2_11.spin =
      (f.lazy_static_0_2_11.spin or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
  }) [];
  lazy_static_1_0_0 = { features?(lazy_static_1_0_0_features {}) }: lazy_static_1_0_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_1_0_0 or {});
  };
  lazy_static_1_0_0_features = f: updateFeatures f (rec {
    lazy_static_1_0_0.compiletest_rs =
      (f.lazy_static_1_0_0.compiletest_rs or false) ||
      (f.lazy_static_1_0_0.compiletest or false) ||
      (lazy_static_1_0_0.compiletest or false);
    lazy_static_1_0_0.default = (f.lazy_static_1_0_0.default or true);
    lazy_static_1_0_0.nightly =
      (f.lazy_static_1_0_0.nightly or false) ||
      (f.lazy_static_1_0_0.spin_no_std or false) ||
      (lazy_static_1_0_0.spin_no_std or false);
    lazy_static_1_0_0.spin =
      (f.lazy_static_1_0_0.spin or false) ||
      (f.lazy_static_1_0_0.spin_no_std or false) ||
      (lazy_static_1_0_0.spin_no_std or false);
  }) [];
  libc_0_2_39 = { features?(libc_0_2_39_features {}) }: libc_0_2_39_ {
    features = mkFeatures (features.libc_0_2_39 or {});
  };
  libc_0_2_39_features = f: updateFeatures f (rec {
    libc_0_2_39.default = (f.libc_0_2_39.default or true);
    libc_0_2_39.use_std =
      (f.libc_0_2_39.use_std or false) ||
      (f.libc_0_2_39.default or false) ||
      (libc_0_2_39.default or false);
  }) [];
  linked_hash_map_0_5_1 = { features?(linked_hash_map_0_5_1_features {}) }: linked_hash_map_0_5_1_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.linked_hash_map_0_5_1 or {});
  };
  linked_hash_map_0_5_1_features = f: updateFeatures f (rec {
    linked_hash_map_0_5_1.default = (f.linked_hash_map_0_5_1.default or true);
    linked_hash_map_0_5_1.heapsize =
      (f.linked_hash_map_0_5_1.heapsize or false) ||
      (f.linked_hash_map_0_5_1.heapsize_impl or false) ||
      (linked_hash_map_0_5_1.heapsize_impl or false);
    linked_hash_map_0_5_1.serde =
      (f.linked_hash_map_0_5_1.serde or false) ||
      (f.linked_hash_map_0_5_1.serde_impl or false) ||
      (linked_hash_map_0_5_1.serde_impl or false);
    linked_hash_map_0_5_1.serde_test =
      (f.linked_hash_map_0_5_1.serde_test or false) ||
      (f.linked_hash_map_0_5_1.serde_impl or false) ||
      (linked_hash_map_0_5_1.serde_impl or false);
  }) [];
  maplit_1_0_1 = { features?(maplit_1_0_1_features {}) }: maplit_1_0_1_ {};
  maplit_1_0_1_features = f: updateFeatures f (rec {
    maplit_1_0_1.default = (f.maplit_1_0_1.default or true);
  }) [];
  memchr_2_0_1 = { features?(memchr_2_0_1_features {}) }: memchr_2_0_1_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.memchr_2_0_1.libc or false then [ libc_0_2_39 ] else []));
    features = mkFeatures (features.memchr_2_0_1 or {});
  };
  memchr_2_0_1_features = f: updateFeatures f (rec {
    libc_0_2_39.default = (f.libc_0_2_39.default or false);
    libc_0_2_39.use_std =
      (f.libc_0_2_39.use_std or false) ||
      (memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.use_std or false);
    memchr_2_0_1.default = (f.memchr_2_0_1.default or true);
    memchr_2_0_1.libc =
      (f.memchr_2_0_1.libc or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false) ||
      (f.memchr_2_0_1.use_std or false) ||
      (memchr_2_0_1.use_std or false);
    memchr_2_0_1.use_std =
      (f.memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false);
  }) [ libc_0_2_39_features ];
  memoffset_0_1_0 = { features?(memoffset_0_1_0_features {}) }: memoffset_0_1_0_ {
    features = mkFeatures (features.memoffset_0_1_0 or {});
  };
  memoffset_0_1_0_features = f: updateFeatures f (rec {
    memoffset_0_1_0.default = (f.memoffset_0_1_0.default or true);
    memoffset_0_1_0.std =
      (f.memoffset_0_1_0.std or false) ||
      (f.memoffset_0_1_0.default or false) ||
      (memoffset_0_1_0.default or false);
  }) [];
  nix_0_5_1 = { features?(nix_0_5_1_features {}) }: nix_0_5_1_ {
    dependencies = mapFeatures features ([ bitflags_0_4_0 libc_0_2_39 ]);
    features = mkFeatures (features.nix_0_5_1 or {});
  };
  nix_0_5_1_features = f: updateFeatures f (rec {
    bitflags_0_4_0.default = true;
    libc_0_2_39.default = true;
    nix_0_5_1.default = (f.nix_0_5_1.default or true);
  }) [ bitflags_0_4_0_features libc_0_2_39_features ];
  nix_0_9_0 = { features?(nix_0_9_0_features {}) }: nix_0_9_0_ {
    dependencies = mapFeatures features ([ bitflags_0_9_1 cfg_if_0_1_2 libc_0_2_39 void_1_0_2 ]);
  };
  nix_0_9_0_features = f: updateFeatures f (rec {
    bitflags_0_9_1.default = true;
    cfg_if_0_1_2.default = true;
    libc_0_2_39.default = true;
    nix_0_9_0.default = (f.nix_0_9_0.default or true);
    void_1_0_2.default = true;
  }) [ bitflags_0_9_1_features cfg_if_0_1_2_features libc_0_2_39_features void_1_0_2_features ];
  nodrop_0_1_12 = { features?(nodrop_0_1_12_features {}) }: nodrop_0_1_12_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.nodrop_0_1_12 or {});
  };
  nodrop_0_1_12_features = f: updateFeatures f (rec {
    nodrop_0_1_12.default = (f.nodrop_0_1_12.default or true);
    nodrop_0_1_12.nodrop-union =
      (f.nodrop_0_1_12.nodrop-union or false) ||
      (f.nodrop_0_1_12.use_union or false) ||
      (nodrop_0_1_12.use_union or false);
    nodrop_0_1_12.std =
      (f.nodrop_0_1_12.std or false) ||
      (f.nodrop_0_1_12.default or false) ||
      (nodrop_0_1_12.default or false);
  }) [];
  novault_0_4_1 = { features?(novault_0_4_1_features {}) }: novault_0_4_1_ {
    dependencies = mapFeatures features ([ ansi_term_0_9_0 argon2rs_0_2_5 base64_0_6_0 byteorder_1_2_1 dialoguer_0_1_0 enigo_0_0_11 ergo_0_0_1 error_chain_0_11_0 file_lock_0_0_17 openssl_0_9_24 rustyline_1_0_0 serde_1_0_29 serde_derive_1_0_29 shlex_0_1_1 strfmt_0_1_6 structopt_0_1_7 structopt_derive_0_1_6 tabwriter_1_0_4 ]);
  };
  novault_0_4_1_features = f: updateFeatures f (rec {
    ansi_term_0_9_0.default = true;
    argon2rs_0_2_5.default = true;
    base64_0_6_0.default = true;
    byteorder_1_2_1.default = true;
    dialoguer_0_1_0.default = true;
    enigo_0_0_11.default = true;
    ergo_0_0_1.default = true;
    error_chain_0_11_0.default = true;
    file_lock_0_0_17.default = true;
    novault_0_4_1.default = (f.novault_0_4_1.default or true);
    openssl_0_9_24.default = true;
    rustyline_1_0_0.default = true;
    serde_1_0_29.default = true;
    serde_derive_1_0_29.default = true;
    shlex_0_1_1.default = true;
    strfmt_0_1_6.default = true;
    structopt_0_1_7.default = true;
    structopt_derive_0_1_6.default = true;
    tabwriter_1_0_4.default = true;
  }) [ ansi_term_0_9_0_features argon2rs_0_2_5_features base64_0_6_0_features byteorder_1_2_1_features dialoguer_0_1_0_features enigo_0_0_11_features ergo_0_0_1_features error_chain_0_11_0_features file_lock_0_0_17_features openssl_0_9_24_features rustyline_1_0_0_features serde_1_0_29_features serde_derive_1_0_29_features shlex_0_1_1_features strfmt_0_1_6_features structopt_0_1_7_features structopt_derive_0_1_6_features tabwriter_1_0_4_features ];
  num_traits_0_1_43 = { features?(num_traits_0_1_43_features {}) }: num_traits_0_1_43_ {
    dependencies = mapFeatures features ([ num_traits_0_2_1 ]);
  };
  num_traits_0_1_43_features = f: updateFeatures f (rec {
    num_traits_0_1_43.default = (f.num_traits_0_1_43.default or true);
    num_traits_0_2_1.default = true;
  }) [ num_traits_0_2_1_features ];
  num_traits_0_2_1 = { features?(num_traits_0_2_1_features {}) }: num_traits_0_2_1_ {
    features = mkFeatures (features.num_traits_0_2_1 or {});
  };
  num_traits_0_2_1_features = f: updateFeatures f (rec {
    num_traits_0_2_1.default = (f.num_traits_0_2_1.default or true);
    num_traits_0_2_1.std =
      (f.num_traits_0_2_1.std or false) ||
      (f.num_traits_0_2_1.default or false) ||
      (num_traits_0_2_1.default or false);
  }) [];
  num_cpus_1_8_0 = { features?(num_cpus_1_8_0_features {}) }: num_cpus_1_8_0_ {
    dependencies = mapFeatures features ([ libc_0_2_39 ]);
  };
  num_cpus_1_8_0_features = f: updateFeatures f (rec {
    libc_0_2_39.default = true;
    num_cpus_1_8_0.default = (f.num_cpus_1_8_0.default or true);
  }) [ libc_0_2_39_features ];
  openssl_0_9_24 = { features?(openssl_0_9_24_features {}) }: openssl_0_9_24_ {
    dependencies = mapFeatures features ([ bitflags_0_9_1 foreign_types_0_3_2 lazy_static_1_0_0 libc_0_2_39 openssl_sys_0_9_27 ]);
    features = mkFeatures (features.openssl_0_9_24 or {});
  };
  openssl_0_9_24_features = f: updateFeatures f (rec {
    bitflags_0_9_1.default = true;
    foreign_types_0_3_2.default = true;
    lazy_static_1_0_0.default = true;
    libc_0_2_39.default = true;
    openssl_0_9_24.default = (f.openssl_0_9_24.default or true);
    openssl_sys_0_9_27.default = true;
  }) [ bitflags_0_9_1_features foreign_types_0_3_2_features lazy_static_1_0_0_features libc_0_2_39_features openssl_sys_0_9_27_features ];
  openssl_sys_0_9_27 = { features?(openssl_sys_0_9_27_features {}) }: openssl_sys_0_9_27_ {
    dependencies = mapFeatures features ([ libc_0_2_39 ])
      ++ (if abi == "msvc" then mapFeatures features ([]) else []);
    buildDependencies = mapFeatures features ([ cc_1_0_6 pkg_config_0_3_9 ]);
  };
  openssl_sys_0_9_27_features = f: updateFeatures f (rec {
    cc_1_0_6.default = true;
    libc_0_2_39.default = true;
    openssl_sys_0_9_27.default = (f.openssl_sys_0_9_27.default or true);
    pkg_config_0_3_9.default = true;
  }) [ libc_0_2_39_features cc_1_0_6_features pkg_config_0_3_9_features ];
  owning_ref_0_3_3 = { features?(owning_ref_0_3_3_features {}) }: owning_ref_0_3_3_ {
    dependencies = mapFeatures features ([ stable_deref_trait_1_0_0 ]);
  };
  owning_ref_0_3_3_features = f: updateFeatures f (rec {
    owning_ref_0_3_3.default = (f.owning_ref_0_3_3.default or true);
    stable_deref_trait_1_0_0.default = true;
  }) [ stable_deref_trait_1_0_0_features ];
  parking_lot_0_4_8 = { features?(parking_lot_0_4_8_features {}) }: parking_lot_0_4_8_ {
    dependencies = mapFeatures features ([ parking_lot_core_0_2_13 ]
      ++ (if features.parking_lot_0_4_8.owning_ref or false then [ owning_ref_0_3_3 ] else []));
    features = mkFeatures (features.parking_lot_0_4_8 or {});
  };
  parking_lot_0_4_8_features = f: updateFeatures f (rec {
    owning_ref_0_3_3.default = true;
    parking_lot_0_4_8.default = (f.parking_lot_0_4_8.default or true);
    parking_lot_0_4_8.owning_ref =
      (f.parking_lot_0_4_8.owning_ref or false) ||
      (f.parking_lot_0_4_8.default or false) ||
      (parking_lot_0_4_8.default or false);
    parking_lot_core_0_2_13.deadlock_detection =
      (f.parking_lot_core_0_2_13.deadlock_detection or false) ||
      (parking_lot_0_4_8.deadlock_detection or false) ||
      (f.parking_lot_0_4_8.deadlock_detection or false);
    parking_lot_core_0_2_13.default = true;
    parking_lot_core_0_2_13.nightly =
      (f.parking_lot_core_0_2_13.nightly or false) ||
      (parking_lot_0_4_8.nightly or false) ||
      (f.parking_lot_0_4_8.nightly or false);
  }) [ owning_ref_0_3_3_features parking_lot_core_0_2_13_features ];
  parking_lot_0_5_4 = { features?(parking_lot_0_5_4_features {}) }: parking_lot_0_5_4_ {
    dependencies = mapFeatures features ([ parking_lot_core_0_2_13 ]
      ++ (if features.parking_lot_0_5_4.owning_ref or false then [ owning_ref_0_3_3 ] else []));
    features = mkFeatures (features.parking_lot_0_5_4 or {});
  };
  parking_lot_0_5_4_features = f: updateFeatures f (rec {
    owning_ref_0_3_3.default = true;
    parking_lot_0_5_4.default = (f.parking_lot_0_5_4.default or true);
    parking_lot_0_5_4.owning_ref =
      (f.parking_lot_0_5_4.owning_ref or false) ||
      (f.parking_lot_0_5_4.default or false) ||
      (parking_lot_0_5_4.default or false);
    parking_lot_core_0_2_13.deadlock_detection =
      (f.parking_lot_core_0_2_13.deadlock_detection or false) ||
      (parking_lot_0_5_4.deadlock_detection or false) ||
      (f.parking_lot_0_5_4.deadlock_detection or false);
    parking_lot_core_0_2_13.default = true;
    parking_lot_core_0_2_13.nightly =
      (f.parking_lot_core_0_2_13.nightly or false) ||
      (parking_lot_0_5_4.nightly or false) ||
      (f.parking_lot_0_5_4.nightly or false);
  }) [ owning_ref_0_3_3_features parking_lot_core_0_2_13_features ];
  parking_lot_core_0_2_13 = { features?(parking_lot_core_0_2_13_features {}) }: parking_lot_core_0_2_13_ {
    dependencies = mapFeatures features ([ rand_0_4_2 smallvec_0_6_0 ])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_39 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
    features = mkFeatures (features.parking_lot_core_0_2_13 or {});
  };
  parking_lot_core_0_2_13_features = f: updateFeatures f (rec {
    libc_0_2_39.default = true;
    parking_lot_core_0_2_13.backtrace =
      (f.parking_lot_core_0_2_13.backtrace or false) ||
      (f.parking_lot_core_0_2_13.deadlock_detection or false) ||
      (parking_lot_core_0_2_13.deadlock_detection or false);
    parking_lot_core_0_2_13.default = (f.parking_lot_core_0_2_13.default or true);
    parking_lot_core_0_2_13.petgraph =
      (f.parking_lot_core_0_2_13.petgraph or false) ||
      (f.parking_lot_core_0_2_13.deadlock_detection or false) ||
      (parking_lot_core_0_2_13.deadlock_detection or false);
    parking_lot_core_0_2_13.thread-id =
      (f.parking_lot_core_0_2_13.thread-id or false) ||
      (f.parking_lot_core_0_2_13.deadlock_detection or false) ||
      (parking_lot_core_0_2_13.deadlock_detection or false);
    rand_0_4_2.default = true;
    smallvec_0_6_0.default = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.errhandlingapi = true;
    winapi_0_3_4.handleapi = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.ntstatus = true;
    winapi_0_3_4.synchapi = true;
    winapi_0_3_4.winbase = true;
    winapi_0_3_4.winerror = true;
    winapi_0_3_4.winnt = true;
  }) [ rand_0_4_2_features smallvec_0_6_0_features libc_0_2_39_features winapi_0_3_4_features ];
  path_abs_0_3_16 = { features?(path_abs_0_3_16_features {}) }: path_abs_0_3_16_ {
    dependencies = mapFeatures features ([ std_prelude_0_2_12 ]
      ++ (if features.path_abs_0_3_16.serde or false then [ serde_1_0_29 ] else [])
      ++ (if features.path_abs_0_3_16.serde_derive or false then [ serde_derive_1_0_29 ] else [])
      ++ (if features.path_abs_0_3_16.stfu8 or false then [ stfu8_0_2_4 ] else []));
    features = mkFeatures (features.path_abs_0_3_16 or {});
  };
  path_abs_0_3_16_features = f: updateFeatures f (rec {
    path_abs_0_3_16.default = (f.path_abs_0_3_16.default or true);
    path_abs_0_3_16.serde =
      (f.path_abs_0_3_16.serde or false) ||
      (f.path_abs_0_3_16.serialize or false) ||
      (path_abs_0_3_16.serialize or false);
    path_abs_0_3_16.serde_derive =
      (f.path_abs_0_3_16.serde_derive or false) ||
      (f.path_abs_0_3_16.serialize or false) ||
      (path_abs_0_3_16.serialize or false);
    path_abs_0_3_16.serialize =
      (f.path_abs_0_3_16.serialize or false) ||
      (f.path_abs_0_3_16.default or false) ||
      (path_abs_0_3_16.default or false);
    path_abs_0_3_16.stfu8 =
      (f.path_abs_0_3_16.stfu8 or false) ||
      (f.path_abs_0_3_16.serialize or false) ||
      (path_abs_0_3_16.serialize or false);
    serde_1_0_29.default = true;
    serde_derive_1_0_29.default = true;
    std_prelude_0_2_12.default = true;
    stfu8_0_2_4.default = true;
  }) [ serde_1_0_29_features serde_derive_1_0_29_features std_prelude_0_2_12_features stfu8_0_2_4_features ];
  pkg_config_0_3_9 = { features?(pkg_config_0_3_9_features {}) }: pkg_config_0_3_9_ {};
  pkg_config_0_3_9_features = f: updateFeatures f (rec {
    pkg_config_0_3_9.default = (f.pkg_config_0_3_9.default or true);
  }) [];
  proc_macro2_0_2_3 = { features?(proc_macro2_0_2_3_features {}) }: proc_macro2_0_2_3_ {
    dependencies = mapFeatures features ([ unicode_xid_0_1_0 ]);
    features = mkFeatures (features.proc_macro2_0_2_3 or {});
  };
  proc_macro2_0_2_3_features = f: updateFeatures f (rec {
    proc_macro2_0_2_3.default = (f.proc_macro2_0_2_3.default or true);
    proc_macro2_0_2_3.proc-macro =
      (f.proc_macro2_0_2_3.proc-macro or false) ||
      (f.proc_macro2_0_2_3.default or false) ||
      (proc_macro2_0_2_3.default or false) ||
      (f.proc_macro2_0_2_3.nightly or false) ||
      (proc_macro2_0_2_3.nightly or false);
    unicode_xid_0_1_0.default = true;
  }) [ unicode_xid_0_1_0_features ];
  quote_0_3_15 = { features?(quote_0_3_15_features {}) }: quote_0_3_15_ {};
  quote_0_3_15_features = f: updateFeatures f (rec {
    quote_0_3_15.default = (f.quote_0_3_15.default or true);
  }) [];
  quote_0_4_2 = { features?(quote_0_4_2_features {}) }: quote_0_4_2_ {
    dependencies = mapFeatures features ([ proc_macro2_0_2_3 ]);
  };
  quote_0_4_2_features = f: updateFeatures f (rec {
    proc_macro2_0_2_3.default = true;
    quote_0_4_2.default = (f.quote_0_4_2.default or true);
  }) [ proc_macro2_0_2_3_features ];
  rand_0_3_22 = { features?(rand_0_3_22_features {}) }: rand_0_3_22_ {
    dependencies = mapFeatures features ([ libc_0_2_39 rand_0_4_2 ])
      ++ (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 ]) else []);
    features = mkFeatures (features.rand_0_3_22 or {});
  };
  rand_0_3_22_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    libc_0_2_39.default = true;
    rand_0_3_22.default = (f.rand_0_3_22.default or true);
    rand_0_3_22.i128_support =
      (f.rand_0_3_22.i128_support or false) ||
      (f.rand_0_3_22.nightly or false) ||
      (rand_0_3_22.nightly or false);
    rand_0_4_2.default = true;
  }) [ libc_0_2_39_features rand_0_4_2_features fuchsia_zircon_0_3_3_features ];
  rand_0_4_2 = { features?(rand_0_4_2_features {}) }: rand_0_4_2_ {
    dependencies = (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ ]
      ++ (if features.rand_0_4_2.libc or false then [ libc_0_2_39 ] else [])) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
    features = mkFeatures (features.rand_0_4_2 or {});
  };
  rand_0_4_2_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    libc_0_2_39.default = true;
    rand_0_4_2.default = (f.rand_0_4_2.default or true);
    rand_0_4_2.i128_support =
      (f.rand_0_4_2.i128_support or false) ||
      (f.rand_0_4_2.nightly or false) ||
      (rand_0_4_2.nightly or false);
    rand_0_4_2.libc =
      (f.rand_0_4_2.libc or false) ||
      (f.rand_0_4_2.std or false) ||
      (rand_0_4_2.std or false);
    rand_0_4_2.std =
      (f.rand_0_4_2.std or false) ||
      (f.rand_0_4_2.default or false) ||
      (rand_0_4_2.default or false);
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.ntsecapi = true;
    winapi_0_3_4.profileapi = true;
    winapi_0_3_4.winnt = true;
  }) [ fuchsia_zircon_0_3_3_features libc_0_2_39_features winapi_0_3_4_features ];
  redox_syscall_0_1_37 = { features?(redox_syscall_0_1_37_features {}) }: redox_syscall_0_1_37_ {};
  redox_syscall_0_1_37_features = f: updateFeatures f (rec {
    redox_syscall_0_1_37.default = (f.redox_syscall_0_1_37.default or true);
  }) [];
  redox_termios_0_1_1 = { features?(redox_termios_0_1_1_features {}) }: redox_termios_0_1_1_ {
    dependencies = mapFeatures features ([ redox_syscall_0_1_37 ]);
  };
  redox_termios_0_1_1_features = f: updateFeatures f (rec {
    redox_syscall_0_1_37.default = true;
    redox_termios_0_1_1.default = (f.redox_termios_0_1_1.default or true);
  }) [ redox_syscall_0_1_37_features ];
  regex_0_2_7 = { features?(regex_0_2_7_features {}) }: regex_0_2_7_ {
    dependencies = mapFeatures features ([ aho_corasick_0_6_4 memchr_2_0_1 regex_syntax_0_5_0 thread_local_0_3_5 utf8_ranges_1_0_0 ]);
    features = mkFeatures (features.regex_0_2_7 or {});
  };
  regex_0_2_7_features = f: updateFeatures f (rec {
    aho_corasick_0_6_4.default = true;
    memchr_2_0_1.default = true;
    regex_0_2_7.default = (f.regex_0_2_7.default or true);
    regex_0_2_7.simd =
      (f.regex_0_2_7.simd or false) ||
      (f.regex_0_2_7.simd-accel or false) ||
      (regex_0_2_7.simd-accel or false);
    regex_syntax_0_5_0.default = true;
    thread_local_0_3_5.default = true;
    utf8_ranges_1_0_0.default = true;
  }) [ aho_corasick_0_6_4_features memchr_2_0_1_features regex_syntax_0_5_0_features thread_local_0_3_5_features utf8_ranges_1_0_0_features ];
  regex_syntax_0_5_0 = { features?(regex_syntax_0_5_0_features {}) }: regex_syntax_0_5_0_ {
    dependencies = mapFeatures features ([ ucd_util_0_1_1 ]);
  };
  regex_syntax_0_5_0_features = f: updateFeatures f (rec {
    regex_syntax_0_5_0.default = (f.regex_syntax_0_5_0.default or true);
    ucd_util_0_1_1.default = true;
  }) [ ucd_util_0_1_1_features ];
  remove_dir_all_0_3_0 = { features?(remove_dir_all_0_3_0_features {}) }: remove_dir_all_0_3_0_ {
    dependencies = mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]);
  };
  remove_dir_all_0_3_0_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    remove_dir_all_0_3_0.default = (f.remove_dir_all_0_3_0.default or true);
    winapi_0_2_8.default = true;
  }) [ kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  ron_0_1_7 = { features?(ron_0_1_7_features {}) }: ron_0_1_7_ {
    dependencies = mapFeatures features ([ serde_1_0_29 ]);
  };
  ron_0_1_7_features = f: updateFeatures f (rec {
    ron_0_1_7.default = (f.ron_0_1_7.default or true);
    serde_1_0_29.default = true;
    serde_1_0_29.serde_derive = true;
  }) [ serde_1_0_29_features ];
  rustc_demangle_0_1_7 = { features?(rustc_demangle_0_1_7_features {}) }: rustc_demangle_0_1_7_ {};
  rustc_demangle_0_1_7_features = f: updateFeatures f (rec {
    rustc_demangle_0_1_7.default = (f.rustc_demangle_0_1_7.default or true);
  }) [];
  rustyline_1_0_0 = { features?(rustyline_1_0_0_features {}) }: rustyline_1_0_0_ {
    dependencies = mapFeatures features ([ encode_unicode_0_1_3 libc_0_2_39 unicode_width_0_1_4 ])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ nix_0_5_1 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  rustyline_1_0_0_features = f: updateFeatures f (rec {
    encode_unicode_0_1_3.default = true;
    kernel32_sys_0_2_2.default = true;
    libc_0_2_39.default = true;
    nix_0_5_1.default = true;
    rustyline_1_0_0.default = (f.rustyline_1_0_0.default or true);
    unicode_width_0_1_4.default = true;
    winapi_0_2_8.default = true;
  }) [ encode_unicode_0_1_3_features libc_0_2_39_features unicode_width_0_1_4_features nix_0_5_1_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  safemem_0_2_0 = { features?(safemem_0_2_0_features {}) }: safemem_0_2_0_ {};
  safemem_0_2_0_features = f: updateFeatures f (rec {
    safemem_0_2_0.default = (f.safemem_0_2_0.default or true);
  }) [];
  same_file_1_0_2 = { features?(same_file_1_0_2_features {}) }: same_file_1_0_2_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  same_file_1_0_2_features = f: updateFeatures f (rec {
    same_file_1_0_2.default = (f.same_file_1_0_2.default or true);
    winapi_0_3_4.default = true;
    winapi_0_3_4.fileapi = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.processenv = true;
    winapi_0_3_4.std = true;
    winapi_0_3_4.winbase = true;
  }) [ winapi_0_3_4_features ];
  scoped_threadpool_0_1_9 = { features?(scoped_threadpool_0_1_9_features {}) }: scoped_threadpool_0_1_9_ {
    features = mkFeatures (features.scoped_threadpool_0_1_9 or {});
  };
  scoped_threadpool_0_1_9_features = f: updateFeatures f (rec {
    scoped_threadpool_0_1_9.default = (f.scoped_threadpool_0_1_9.default or true);
  }) [];
  scopeguard_0_3_3 = { features?(scopeguard_0_3_3_features {}) }: scopeguard_0_3_3_ {
    features = mkFeatures (features.scopeguard_0_3_3 or {});
  };
  scopeguard_0_3_3_features = f: updateFeatures f (rec {
    scopeguard_0_3_3.default = (f.scopeguard_0_3_3.default or true);
    scopeguard_0_3_3.use_std =
      (f.scopeguard_0_3_3.use_std or false) ||
      (f.scopeguard_0_3_3.default or false) ||
      (scopeguard_0_3_3.default or false);
  }) [];
  serde_1_0_29 = { features?(serde_1_0_29_features {}) }: serde_1_0_29_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.serde_1_0_29.serde_derive or false then [ serde_derive_1_0_29 ] else []));
    features = mkFeatures (features.serde_1_0_29 or {});
  };
  serde_1_0_29_features = f: updateFeatures f (rec {
    serde_1_0_29.default = (f.serde_1_0_29.default or true);
    serde_1_0_29.serde_derive =
      (f.serde_1_0_29.serde_derive or false) ||
      (f.serde_1_0_29.derive or false) ||
      (serde_1_0_29.derive or false) ||
      (f.serde_1_0_29.playground or false) ||
      (serde_1_0_29.playground or false);
    serde_1_0_29.std =
      (f.serde_1_0_29.std or false) ||
      (f.serde_1_0_29.default or false) ||
      (serde_1_0_29.default or false);
    serde_1_0_29.unstable =
      (f.serde_1_0_29.unstable or false) ||
      (f.serde_1_0_29.alloc or false) ||
      (serde_1_0_29.alloc or false);
    serde_derive_1_0_29.default = true;
  }) [ serde_derive_1_0_29_features ];
  serde_derive_1_0_29 = { features?(serde_derive_1_0_29_features {}) }: serde_derive_1_0_29_ {
    dependencies = mapFeatures features ([ proc_macro2_0_2_3 quote_0_4_2 serde_derive_internals_0_20_0 syn_0_12_14 ]);
    features = mkFeatures (features.serde_derive_1_0_29 or {});
  };
  serde_derive_1_0_29_features = f: updateFeatures f (rec {
    proc_macro2_0_2_3.default = true;
    quote_0_4_2.default = true;
    serde_derive_1_0_29.default = (f.serde_derive_1_0_29.default or true);
    serde_derive_internals_0_20_0.default = (f.serde_derive_internals_0_20_0.default or false);
    syn_0_12_14.default = true;
    syn_0_12_14.visit = true;
  }) [ proc_macro2_0_2_3_features quote_0_4_2_features serde_derive_internals_0_20_0_features syn_0_12_14_features ];
  serde_derive_internals_0_20_0 = { features?(serde_derive_internals_0_20_0_features {}) }: serde_derive_internals_0_20_0_ {
    dependencies = mapFeatures features ([ proc_macro2_0_2_3 syn_0_12_14 ]);
  };
  serde_derive_internals_0_20_0_features = f: updateFeatures f (rec {
    proc_macro2_0_2_3.default = true;
    serde_derive_internals_0_20_0.default = (f.serde_derive_internals_0_20_0.default or true);
    syn_0_12_14.clone-impls = true;
    syn_0_12_14.default = (f.syn_0_12_14.default or false);
    syn_0_12_14.derive = true;
    syn_0_12_14.parsing = true;
  }) [ proc_macro2_0_2_3_features syn_0_12_14_features ];
  serde_json_1_0_10 = { features?(serde_json_1_0_10_features {}) }: serde_json_1_0_10_ {
    dependencies = mapFeatures features ([ dtoa_0_4_2 itoa_0_3_4 num_traits_0_2_1 serde_1_0_29 ]);
    features = mkFeatures (features.serde_json_1_0_10 or {});
  };
  serde_json_1_0_10_features = f: updateFeatures f (rec {
    dtoa_0_4_2.default = true;
    itoa_0_3_4.default = true;
    num_traits_0_2_1.default = (f.num_traits_0_2_1.default or false);
    serde_1_0_29.default = true;
    serde_json_1_0_10.default = (f.serde_json_1_0_10.default or true);
    serde_json_1_0_10.linked-hash-map =
      (f.serde_json_1_0_10.linked-hash-map or false) ||
      (f.serde_json_1_0_10.preserve_order or false) ||
      (serde_json_1_0_10.preserve_order or false);
  }) [ dtoa_0_4_2_features itoa_0_3_4_features num_traits_0_2_1_features serde_1_0_29_features ];
  serde_yaml_0_7_3 = { features?(serde_yaml_0_7_3_features {}) }: serde_yaml_0_7_3_ {
    dependencies = mapFeatures features ([ linked_hash_map_0_5_1 num_traits_0_1_43 serde_1_0_29 yaml_rust_0_4_0 ]);
  };
  serde_yaml_0_7_3_features = f: updateFeatures f (rec {
    linked_hash_map_0_5_1.default = true;
    num_traits_0_1_43.default = true;
    serde_1_0_29.default = true;
    serde_yaml_0_7_3.default = (f.serde_yaml_0_7_3.default or true);
    yaml_rust_0_4_0.default = true;
  }) [ linked_hash_map_0_5_1_features num_traits_0_1_43_features serde_1_0_29_features yaml_rust_0_4_0_features ];
  shellexpand_1_0_0 = { features?(shellexpand_1_0_0_features {}) }: shellexpand_1_0_0_ {};
  shellexpand_1_0_0_features = f: updateFeatures f (rec {
    shellexpand_1_0_0.default = (f.shellexpand_1_0_0.default or true);
  }) [];
  shlex_0_1_1 = { features?(shlex_0_1_1_features {}) }: shlex_0_1_1_ {};
  shlex_0_1_1_features = f: updateFeatures f (rec {
    shlex_0_1_1.default = (f.shlex_0_1_1.default or true);
  }) [];
  smallvec_0_6_0 = { features?(smallvec_0_6_0_features {}) }: smallvec_0_6_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.smallvec_0_6_0 or {});
  };
  smallvec_0_6_0_features = f: updateFeatures f (rec {
    smallvec_0_6_0.default = (f.smallvec_0_6_0.default or true);
    smallvec_0_6_0.std =
      (f.smallvec_0_6_0.std or false) ||
      (f.smallvec_0_6_0.default or false) ||
      (smallvec_0_6_0.default or false);
  }) [];
  stable_deref_trait_1_0_0 = { features?(stable_deref_trait_1_0_0_features {}) }: stable_deref_trait_1_0_0_ {
    features = mkFeatures (features.stable_deref_trait_1_0_0 or {});
  };
  stable_deref_trait_1_0_0_features = f: updateFeatures f (rec {
    stable_deref_trait_1_0_0.default = (f.stable_deref_trait_1_0_0.default or true);
    stable_deref_trait_1_0_0.std =
      (f.stable_deref_trait_1_0_0.std or false) ||
      (f.stable_deref_trait_1_0_0.default or false) ||
      (stable_deref_trait_1_0_0.default or false);
  }) [];
  std_prelude_0_2_12 = { features?(std_prelude_0_2_12_features {}) }: std_prelude_0_2_12_ {};
  std_prelude_0_2_12_features = f: updateFeatures f (rec {
    std_prelude_0_2_12.default = (f.std_prelude_0_2_12.default or true);
  }) [];
  stfu8_0_2_4 = { features?(stfu8_0_2_4_features {}) }: stfu8_0_2_4_ {
    dependencies = mapFeatures features ([ lazy_static_1_0_0 regex_0_2_7 ]);
    features = mkFeatures (features.stfu8_0_2_4 or {});
  };
  stfu8_0_2_4_features = f: updateFeatures f (rec {
    lazy_static_1_0_0.default = true;
    regex_0_2_7.default = true;
    stfu8_0_2_4.default = (f.stfu8_0_2_4.default or true);
    stfu8_0_2_4.testing =
      (f.stfu8_0_2_4.testing or false) ||
      (f.stfu8_0_2_4.default or false) ||
      (stfu8_0_2_4.default or false);
  }) [ lazy_static_1_0_0_features regex_0_2_7_features ];
  strfmt_0_1_6 = { features?(strfmt_0_1_6_features {}) }: strfmt_0_1_6_ {};
  strfmt_0_1_6_features = f: updateFeatures f (rec {
    strfmt_0_1_6.default = (f.strfmt_0_1_6.default or true);
  }) [];
  strsim_0_7_0 = { features?(strsim_0_7_0_features {}) }: strsim_0_7_0_ {};
  strsim_0_7_0_features = f: updateFeatures f (rec {
    strsim_0_7_0.default = (f.strsim_0_7_0.default or true);
  }) [];
  structopt_0_1_7 = { features?(structopt_0_1_7_features {}) }: structopt_0_1_7_ {
    dependencies = mapFeatures features ([ clap_2_31_1 ]);
  };
  structopt_0_1_7_features = f: updateFeatures f (rec {
    clap_2_31_1.default =
      (f.clap_2_31_1.default or false) ||
      (structopt_0_1_7.default or false) ||
      (f.structopt_0_1_7.default or false) ||
      false;
    structopt_0_1_7.default = (f.structopt_0_1_7.default or true);
  }) [ clap_2_31_1_features ];
  structopt_derive_0_1_6 = { features?(structopt_derive_0_1_6_features {}) }: structopt_derive_0_1_6_ {
    dependencies = mapFeatures features ([ quote_0_3_15 syn_0_11_11 ]);
  };
  structopt_derive_0_1_6_features = f: updateFeatures f (rec {
    quote_0_3_15.default = true;
    structopt_derive_0_1_6.default = (f.structopt_derive_0_1_6.default or true);
    syn_0_11_11.default = true;
  }) [ quote_0_3_15_features syn_0_11_11_features ];
  syn_0_11_11 = { features?(syn_0_11_11_features {}) }: syn_0_11_11_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.syn_0_11_11.quote or false then [ quote_0_3_15 ] else [])
      ++ (if features.syn_0_11_11.synom or false then [ synom_0_11_3 ] else [])
      ++ (if features.syn_0_11_11.unicode-xid or false then [ unicode_xid_0_0_4 ] else []));
    features = mkFeatures (features.syn_0_11_11 or {});
  };
  syn_0_11_11_features = f: updateFeatures f (rec {
    quote_0_3_15.default = true;
    syn_0_11_11.default = (f.syn_0_11_11.default or true);
    syn_0_11_11.parsing =
      (f.syn_0_11_11.parsing or false) ||
      (f.syn_0_11_11.default or false) ||
      (syn_0_11_11.default or false);
    syn_0_11_11.printing =
      (f.syn_0_11_11.printing or false) ||
      (f.syn_0_11_11.default or false) ||
      (syn_0_11_11.default or false);
    syn_0_11_11.quote =
      (f.syn_0_11_11.quote or false) ||
      (f.syn_0_11_11.printing or false) ||
      (syn_0_11_11.printing or false);
    syn_0_11_11.synom =
      (f.syn_0_11_11.synom or false) ||
      (f.syn_0_11_11.parsing or false) ||
      (syn_0_11_11.parsing or false);
    syn_0_11_11.unicode-xid =
      (f.syn_0_11_11.unicode-xid or false) ||
      (f.syn_0_11_11.parsing or false) ||
      (syn_0_11_11.parsing or false);
    synom_0_11_3.default = true;
    unicode_xid_0_0_4.default = true;
  }) [ quote_0_3_15_features synom_0_11_3_features unicode_xid_0_0_4_features ];
  syn_0_12_14 = { features?(syn_0_12_14_features {}) }: syn_0_12_14_ {
    dependencies = mapFeatures features ([ proc_macro2_0_2_3 unicode_xid_0_1_0 ]
      ++ (if features.syn_0_12_14.quote or false then [ quote_0_4_2 ] else []));
    features = mkFeatures (features.syn_0_12_14 or {});
  };
  syn_0_12_14_features = f: updateFeatures f (rec {
    proc_macro2_0_2_3.default = true;
    quote_0_4_2.default = true;
    syn_0_12_14.clone-impls =
      (f.syn_0_12_14.clone-impls or false) ||
      (f.syn_0_12_14.default or false) ||
      (syn_0_12_14.default or false);
    syn_0_12_14.default = (f.syn_0_12_14.default or true);
    syn_0_12_14.derive =
      (f.syn_0_12_14.derive or false) ||
      (f.syn_0_12_14.default or false) ||
      (syn_0_12_14.default or false);
    syn_0_12_14.parsing =
      (f.syn_0_12_14.parsing or false) ||
      (f.syn_0_12_14.default or false) ||
      (syn_0_12_14.default or false);
    syn_0_12_14.printing =
      (f.syn_0_12_14.printing or false) ||
      (f.syn_0_12_14.default or false) ||
      (syn_0_12_14.default or false);
    syn_0_12_14.quote =
      (f.syn_0_12_14.quote or false) ||
      (f.syn_0_12_14.printing or false) ||
      (syn_0_12_14.printing or false);
    unicode_xid_0_1_0.default = true;
  }) [ proc_macro2_0_2_3_features quote_0_4_2_features unicode_xid_0_1_0_features ];
  synom_0_11_3 = { features?(synom_0_11_3_features {}) }: synom_0_11_3_ {
    dependencies = mapFeatures features ([ unicode_xid_0_0_4 ]);
  };
  synom_0_11_3_features = f: updateFeatures f (rec {
    synom_0_11_3.default = (f.synom_0_11_3.default or true);
    unicode_xid_0_0_4.default = true;
  }) [ unicode_xid_0_0_4_features ];
  tabwriter_1_0_4 = { features?(tabwriter_1_0_4_features {}) }: tabwriter_1_0_4_ {
    dependencies = mapFeatures features ([ unicode_width_0_1_4 ]);
    features = mkFeatures (features.tabwriter_1_0_4 or {});
  };
  tabwriter_1_0_4_features = f: updateFeatures f (rec {
    tabwriter_1_0_4.default = (f.tabwriter_1_0_4.default or true);
    tabwriter_1_0_4.lazy_static =
      (f.tabwriter_1_0_4.lazy_static or false) ||
      (f.tabwriter_1_0_4.ansi_formatting or false) ||
      (tabwriter_1_0_4.ansi_formatting or false);
    tabwriter_1_0_4.regex =
      (f.tabwriter_1_0_4.regex or false) ||
      (f.tabwriter_1_0_4.ansi_formatting or false) ||
      (tabwriter_1_0_4.ansi_formatting or false);
    unicode_width_0_1_4.default = true;
  }) [ unicode_width_0_1_4_features ];
  taken_0_1_1 = { features?(taken_0_1_1_features {}) }: taken_0_1_1_ {};
  taken_0_1_1_features = f: updateFeatures f (rec {
    taken_0_1_1.default = (f.taken_0_1_1.default or true);
  }) [];
  tar_0_4_14 = { features?(tar_0_4_14_features {}) }: tar_0_4_14_ {
    dependencies = mapFeatures features ([ filetime_0_1_15 ])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_37 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_39 ]
      ++ (if features.tar_0_4_14.xattr or false then [ xattr_0_1_11 ] else [])) else []);
    features = mkFeatures (features.tar_0_4_14 or {});
  };
  tar_0_4_14_features = f: updateFeatures f (rec {
    filetime_0_1_15.default = true;
    libc_0_2_39.default = true;
    redox_syscall_0_1_37.default = true;
    tar_0_4_14.default = (f.tar_0_4_14.default or true);
    tar_0_4_14.xattr =
      (f.tar_0_4_14.xattr or false) ||
      (f.tar_0_4_14.default or false) ||
      (tar_0_4_14.default or false);
    xattr_0_1_11.default = true;
  }) [ filetime_0_1_15_features redox_syscall_0_1_37_features libc_0_2_39_features xattr_0_1_11_features ];
  tempdir_0_3_6 = { features?(tempdir_0_3_6_features {}) }: tempdir_0_3_6_ {
    dependencies = mapFeatures features ([ rand_0_4_2 remove_dir_all_0_3_0 ]);
  };
  tempdir_0_3_6_features = f: updateFeatures f (rec {
    rand_0_4_2.default = true;
    remove_dir_all_0_3_0.default = true;
    tempdir_0_3_6.default = (f.tempdir_0_3_6.default or true);
  }) [ rand_0_4_2_features remove_dir_all_0_3_0_features ];
  tempfile_2_2_0 = { features?(tempfile_2_2_0_features {}) }: tempfile_2_2_0_ {
    dependencies = mapFeatures features ([ rand_0_3_22 ])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_37 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_39 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  tempfile_2_2_0_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    libc_0_2_39.default = true;
    rand_0_3_22.default = true;
    redox_syscall_0_1_37.default = true;
    tempfile_2_2_0.default = (f.tempfile_2_2_0.default or true);
    winapi_0_2_8.default = true;
  }) [ rand_0_3_22_features redox_syscall_0_1_37_features libc_0_2_39_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  termion_1_5_1 = { features?(termion_1_5_1_features {}) }: termion_1_5_1_ {
    dependencies = (if !(kernel == "redox") then mapFeatures features ([ libc_0_2_39 ]) else [])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_37 redox_termios_0_1_1 ]) else []);
  };
  termion_1_5_1_features = f: updateFeatures f (rec {
    libc_0_2_39.default = true;
    redox_syscall_0_1_37.default = true;
    redox_termios_0_1_1.default = true;
    termion_1_5_1.default = (f.termion_1_5_1.default or true);
  }) [ libc_0_2_39_features redox_syscall_0_1_37_features redox_termios_0_1_1_features ];
  termios_0_2_2 = { features?(termios_0_2_2_features {}) }: termios_0_2_2_ {
    dependencies = mapFeatures features ([ libc_0_2_39 ]);
  };
  termios_0_2_2_features = f: updateFeatures f (rec {
    libc_0_2_39.default = true;
    termios_0_2_2.default = (f.termios_0_2_2.default or true);
  }) [ libc_0_2_39_features ];
  textwrap_0_9_0 = { features?(textwrap_0_9_0_features {}) }: textwrap_0_9_0_ {
    dependencies = mapFeatures features ([ unicode_width_0_1_4 ]);
  };
  textwrap_0_9_0_features = f: updateFeatures f (rec {
    textwrap_0_9_0.default = (f.textwrap_0_9_0.default or true);
    unicode_width_0_1_4.default = true;
  }) [ unicode_width_0_1_4_features ];
  thread_local_0_3_5 = { features?(thread_local_0_3_5_features {}) }: thread_local_0_3_5_ {
    dependencies = mapFeatures features ([ lazy_static_1_0_0 unreachable_1_0_0 ]);
  };
  thread_local_0_3_5_features = f: updateFeatures f (rec {
    lazy_static_1_0_0.default = true;
    thread_local_0_3_5.default = (f.thread_local_0_3_5.default or true);
    unreachable_1_0_0.default = true;
  }) [ lazy_static_1_0_0_features unreachable_1_0_0_features ];
  toml_0_4_5 = { features?(toml_0_4_5_features {}) }: toml_0_4_5_ {
    dependencies = mapFeatures features ([ serde_1_0_29 ]);
  };
  toml_0_4_5_features = f: updateFeatures f (rec {
    serde_1_0_29.default = true;
    toml_0_4_5.default = (f.toml_0_4_5.default or true);
  }) [ serde_1_0_29_features ];
  ucd_util_0_1_1 = { features?(ucd_util_0_1_1_features {}) }: ucd_util_0_1_1_ {};
  ucd_util_0_1_1_features = f: updateFeatures f (rec {
    ucd_util_0_1_1.default = (f.ucd_util_0_1_1.default or true);
  }) [];
  unicode_segmentation_1_2_0 = { features?(unicode_segmentation_1_2_0_features {}) }: unicode_segmentation_1_2_0_ {
    features = mkFeatures (features.unicode_segmentation_1_2_0 or {});
  };
  unicode_segmentation_1_2_0_features = f: updateFeatures f (rec {
    unicode_segmentation_1_2_0.default = (f.unicode_segmentation_1_2_0.default or true);
  }) [];
  unicode_width_0_1_4 = { features?(unicode_width_0_1_4_features {}) }: unicode_width_0_1_4_ {
    features = mkFeatures (features.unicode_width_0_1_4 or {});
  };
  unicode_width_0_1_4_features = f: updateFeatures f (rec {
    unicode_width_0_1_4.default = (f.unicode_width_0_1_4.default or true);
  }) [];
  unicode_xid_0_0_4 = { features?(unicode_xid_0_0_4_features {}) }: unicode_xid_0_0_4_ {
    features = mkFeatures (features.unicode_xid_0_0_4 or {});
  };
  unicode_xid_0_0_4_features = f: updateFeatures f (rec {
    unicode_xid_0_0_4.default = (f.unicode_xid_0_0_4.default or true);
  }) [];
  unicode_xid_0_1_0 = { features?(unicode_xid_0_1_0_features {}) }: unicode_xid_0_1_0_ {
    features = mkFeatures (features.unicode_xid_0_1_0 or {});
  };
  unicode_xid_0_1_0_features = f: updateFeatures f (rec {
    unicode_xid_0_1_0.default = (f.unicode_xid_0_1_0.default or true);
  }) [];
  unreachable_1_0_0 = { features?(unreachable_1_0_0_features {}) }: unreachable_1_0_0_ {
    dependencies = mapFeatures features ([ void_1_0_2 ]);
  };
  unreachable_1_0_0_features = f: updateFeatures f (rec {
    unreachable_1_0_0.default = (f.unreachable_1_0_0.default or true);
    void_1_0_2.default = (f.void_1_0_2.default or false);
  }) [ void_1_0_2_features ];
  user32_sys_0_2_0 = { features?(user32_sys_0_2_0_features {}) }: user32_sys_0_2_0_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  user32_sys_0_2_0_features = f: updateFeatures f (rec {
    user32_sys_0_2_0.default = (f.user32_sys_0_2_0.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  utf8_ranges_1_0_0 = { features?(utf8_ranges_1_0_0_features {}) }: utf8_ranges_1_0_0_ {};
  utf8_ranges_1_0_0_features = f: updateFeatures f (rec {
    utf8_ranges_1_0_0.default = (f.utf8_ranges_1_0_0.default or true);
  }) [];
  vcpkg_0_2_2 = { features?(vcpkg_0_2_2_features {}) }: vcpkg_0_2_2_ {};
  vcpkg_0_2_2_features = f: updateFeatures f (rec {
    vcpkg_0_2_2.default = (f.vcpkg_0_2_2.default or true);
  }) [];
  vec_map_0_8_0 = { features?(vec_map_0_8_0_features {}) }: vec_map_0_8_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.vec_map_0_8_0 or {});
  };
  vec_map_0_8_0_features = f: updateFeatures f (rec {
    vec_map_0_8_0.default = (f.vec_map_0_8_0.default or true);
    vec_map_0_8_0.serde =
      (f.vec_map_0_8_0.serde or false) ||
      (f.vec_map_0_8_0.eders or false) ||
      (vec_map_0_8_0.eders or false);
    vec_map_0_8_0.serde_derive =
      (f.vec_map_0_8_0.serde_derive or false) ||
      (f.vec_map_0_8_0.eders or false) ||
      (vec_map_0_8_0.eders or false);
  }) [];
  void_1_0_2 = { features?(void_1_0_2_features {}) }: void_1_0_2_ {
    features = mkFeatures (features.void_1_0_2 or {});
  };
  void_1_0_2_features = f: updateFeatures f (rec {
    void_1_0_2.default = (f.void_1_0_2.default or true);
    void_1_0_2.std =
      (f.void_1_0_2.std or false) ||
      (f.void_1_0_2.default or false) ||
      (void_1_0_2.default or false);
  }) [];
  walkdir_2_1_4 = { features?(walkdir_2_1_4_features {}) }: walkdir_2_1_4_ {
    dependencies = mapFeatures features ([ same_file_1_0_2 ])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  walkdir_2_1_4_features = f: updateFeatures f (rec {
    same_file_1_0_2.default = true;
    walkdir_2_1_4.default = (f.walkdir_2_1_4.default or true);
    winapi_0_3_4.default = true;
    winapi_0_3_4.std = true;
    winapi_0_3_4.winnt = true;
  }) [ same_file_1_0_2_features winapi_0_3_4_features ];
  winapi_0_2_8 = { features?(winapi_0_2_8_features {}) }: winapi_0_2_8_ {};
  winapi_0_2_8_features = f: updateFeatures f (rec {
    winapi_0_2_8.default = (f.winapi_0_2_8.default or true);
  }) [];
  winapi_0_3_4 = { features?(winapi_0_3_4_features {}) }: winapi_0_3_4_ {
    dependencies = (if kernel == "i686-pc-windows-gnu" then mapFeatures features ([ winapi_i686_pc_windows_gnu_0_4_0 ]) else [])
      ++ (if kernel == "x86_64-pc-windows-gnu" then mapFeatures features ([ winapi_x86_64_pc_windows_gnu_0_4_0 ]) else []);
    features = mkFeatures (features.winapi_0_3_4 or {});
  };
  winapi_0_3_4_features = f: updateFeatures f (rec {
    winapi_0_3_4.default = (f.winapi_0_3_4.default or true);
    winapi_i686_pc_windows_gnu_0_4_0.default = true;
    winapi_x86_64_pc_windows_gnu_0_4_0.default = true;
  }) [ winapi_i686_pc_windows_gnu_0_4_0_features winapi_x86_64_pc_windows_gnu_0_4_0_features ];
  winapi_build_0_1_1 = { features?(winapi_build_0_1_1_features {}) }: winapi_build_0_1_1_ {};
  winapi_build_0_1_1_features = f: updateFeatures f (rec {
    winapi_build_0_1_1.default = (f.winapi_build_0_1_1.default or true);
  }) [];
  winapi_i686_pc_windows_gnu_0_4_0 = { features?(winapi_i686_pc_windows_gnu_0_4_0_features {}) }: winapi_i686_pc_windows_gnu_0_4_0_ {};
  winapi_i686_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_i686_pc_windows_gnu_0_4_0.default = (f.winapi_i686_pc_windows_gnu_0_4_0.default or true);
  }) [];
  winapi_x86_64_pc_windows_gnu_0_4_0 = { features?(winapi_x86_64_pc_windows_gnu_0_4_0_features {}) }: winapi_x86_64_pc_windows_gnu_0_4_0_ {};
  winapi_x86_64_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_x86_64_pc_windows_gnu_0_4_0.default = (f.winapi_x86_64_pc_windows_gnu_0_4_0.default or true);
  }) [];
  xattr_0_1_11 = { features?(xattr_0_1_11_features {}) }: xattr_0_1_11_ {
    dependencies = mapFeatures features ([ libc_0_2_39 ]);
    features = mkFeatures (features.xattr_0_1_11 or {});
  };
  xattr_0_1_11_features = f: updateFeatures f (rec {
    libc_0_2_39.default = true;
    xattr_0_1_11.default = (f.xattr_0_1_11.default or true);
    xattr_0_1_11.unsupported =
      (f.xattr_0_1_11.unsupported or false) ||
      (f.xattr_0_1_11.default or false) ||
      (xattr_0_1_11.default or false);
  }) [ libc_0_2_39_features ];
  yaml_rust_0_4_0 = { features?(yaml_rust_0_4_0_features {}) }: yaml_rust_0_4_0_ {
    dependencies = mapFeatures features ([ linked_hash_map_0_5_1 ]);
  };
  yaml_rust_0_4_0_features = f: updateFeatures f (rec {
    linked_hash_map_0_5_1.default = true;
    yaml_rust_0_4_0.default = (f.yaml_rust_0_4_0.default or true);
  }) [ linked_hash_map_0_5_1_features ];
}
