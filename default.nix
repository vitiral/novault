# Generated by carnix 0.6.6: carnix -o novault.nix --src src Cargo.lock --standalone
with import <nixpkgs> {};
let kernel = buildPlatform.parsed.kernel.name;
    abi = buildPlatform.parsed.abi.name;
    include = includedFiles: src: builtins.filterSource (path: type:
      lib.lists.any (f:
        let p = toString (src + ("/" + f)); in
        (path == p) || (type == "directory" && lib.strings.hasPrefix path p)
      ) includedFiles
    ) src;
    updateFeatures = f: up: functions: builtins.deepSeq f (lib.lists.foldl' (features: fun: fun features) (lib.attrsets.recursiveUpdate f up) functions);
    mapFeatures = features: map (fun: fun { features = features; });
    mkFeatures = feat: lib.lists.foldl (features: featureName:
      if feat.${featureName} or false then
        [ featureName ] ++ features
      else
        features
    ) [] (builtins.attrNames feat);
in
rec {
  novault = f: novault_0_4_0 { features = novault_0_4_0_features { novault_0_4_0 = f; }; };
  aho_corasick_0_6_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "aho-corasick";
    version = "0.6.3";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1cpqzf6acj8lm06z3f1cg41wn6c2n9l3v49nh0dvimv4055qib6k";
    libName = "aho_corasick";
    crateBin = [ {  name = "aho-corasick-dot"; } ];
    inherit dependencies buildDependencies features;
  };
  ansi_term_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ansi_term";
    version = "0.9.0";
    authors = [ "ogham@bsago.me" "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>" ];
    sha256 = "1vcd8m2hglrdi4zmqnkkz5zy3c73ifgii245k7vj6qr5dzpn9hij";
    inherit dependencies buildDependencies features;
  };
  argon2rs_0_2_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "argon2rs";
    version = "0.2.5";
    authors = [ "bryant <bryant@defrag.in>" ];
    sha256 = "1byl9b3wwyrarn8qack21v5fi2qsnn3y5clvikk2apskhmnih1rw";
    inherit dependencies buildDependencies features;
  };
  atty_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "atty";
    version = "0.2.2";
    authors = [ "softprops <d.tangren@gmail.com>" ];
    sha256 = "05c6jvrxljp4s1aycgq2z3y56f7f5yvc56v25cqlmpc1qx65z7ba";
    inherit dependencies buildDependencies features;
  };
  backtrace_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace";
    version = "0.3.3";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "The Rust Project Developers" ];
    sha256 = "0invfdxkj85v8zyrjs3amfxjdk2a36x8irq7wq7kny6q49hh8y0z";
    inherit dependencies buildDependencies features;
  };
  backtrace_sys_0_1_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace-sys";
    version = "0.1.12";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0245bi18lm8nvi7j3rqrsi7ancl4424dddvnnd8rb72ba6a1gz1w";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  base64_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "base64";
    version = "0.6.0";
    authors = [ "Alice Maz <alice@alicemaz.com>" "Marshall Pierce <marshall@mpierce.org>" ];
    sha256 = "0ql1rmczbnww3iszc0pfc6mqa47ravpsdf525vp6s8r32nyzspl5";
    inherit dependencies buildDependencies features;
  };
  bitflags_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.7.0";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1hr72xg5slm0z4pxs2hiy4wcyx3jva70h58b7mid8l0a4c8f7gn5";
    inherit dependencies buildDependencies features;
  };
  bitflags_0_9_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.9.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "18h073l5jd88rx4qdr95fjddr9rk79pb1aqnshzdnw16cfmb9rws";
    inherit dependencies buildDependencies features;
  };
  blake2_rfc_0_2_17_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "blake2-rfc";
    version = "0.2.17";
    authors = [ "Cesar Eduardo Barros <cesarb@cesarb.eti.br>" ];
    sha256 = "122i4khg7xz0y8da0b0cpclg57h1ndv0mvlr2rsfigpac3znv9k4";
    inherit dependencies buildDependencies features;
  };
  byteorder_1_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "byteorder";
    version = "1.1.0";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1i2n0161jm00zvzh4bncgv9zrwa6ydbxdn5j4bx0wwn7rvi9zycp";
    inherit dependencies buildDependencies features;
  };
  cfg_if_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cfg-if";
    version = "0.1.2";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0x06hvrrqy96m97593823vvxcgvjaxckghwyy2jcyc8qc7c6cyhi";
    inherit dependencies buildDependencies features;
  };
  clap_2_26_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "clap";
    version = "2.26.0";
    authors = [ "Kevin K. <kbknapp@gmail.com>" ];
    sha256 = "0mqmkzgdhq08zzrlbfnb6w500r64l8vgg2mg9y79l6vlqcpzna6z";
    inherit dependencies buildDependencies features;
  };
  clicolors_control_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "clicolors-control";
    version = "0.1.0";
    authors = [ "Armin Ronacher <armin.ronacher@active-4.com>" ];
    sha256 = "1539dh7mvr16dbcb5j1yxfmarvrrf3ihl01g2y27b1aq74pgsk50";
    inherit dependencies buildDependencies features;
  };
  console_0_5_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "console";
    version = "0.5.0";
    authors = [ "Armin Ronacher <armin.ronacher@active-4.com>" ];
    sha256 = "00qz57wsywrknf5m3d5kq4xa7zcq8pr4zmyja11ljzfcqq3gikgy";
    inherit dependencies buildDependencies features;
  };
  constant_time_eq_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "constant_time_eq";
    version = "0.1.3";
    authors = [ "Cesar Eduardo Barros <cesarb@cesarb.eti.br>" ];
    sha256 = "03qri9hjf049gwqg9q527lybpg918q6y5q4g9a5lma753nff49wd";
    inherit dependencies buildDependencies features;
  };
  conv_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "conv";
    version = "0.3.3";
    authors = [ "Daniel Keep <daniel.keep@gmail.com>" ];
    sha256 = "08rl72k1a48xah0ar5l9v1bw19pp8jdw2pdkd3vvj9ijsyyg9yik";
    inherit dependencies buildDependencies features;
  };
  core_foundation_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "core-foundation";
    version = "0.3.0";
    authors = [ "The Servo Project Developers" ];
    sha256 = "1zlwdggcl40ws54p57r3fryv2gajjnvxgfj5aplprg03mvzv96zg";
    inherit dependencies buildDependencies features;
  };
  core_foundation_sys_0_3_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "core-foundation-sys";
    version = "0.3.1";
    authors = [ "The Servo Project Developers" ];
    sha256 = "0gqv2wvfj1six5rc3j9kzyygxy1vbakdjyian9mfy875jlr3imwp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  core_graphics_0_8_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "core-graphics";
    version = "0.8.2";
    authors = [ "The Servo Project Developers" ];
    sha256 = "1wwkm59rx4lifd7cqgg3v2c0s5dx1s2k0gsaar9wrysv32c9k69p";
    inherit dependencies buildDependencies features;
  };
  custom_derive_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "custom_derive";
    version = "0.1.7";
    authors = [ "Daniel Keep <daniel.keep@gmail.com>" ];
    sha256 = "160q3pzri2fgrr6czfdkwy1sbddki2za96r7ivvyii52qp1523zs";
    inherit dependencies buildDependencies features;
  };
  dbghelp_sys_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dbghelp-sys";
    version = "0.2.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0ylpi3bbiy233m57hnisn1df1v0lbl7nsxn34b0anzsgg440hqpq";
    libName = "dbghelp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  dialoguer_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dialoguer";
    version = "0.1.0";
    authors = [ "Armin Ronacher <armin.ronacher@active-4.com>" ];
    sha256 = "0wp05h15hb6p32mkczyc3a7pkv0j6nrbcpnh4nq7334y86ah8l55";
    inherit dependencies buildDependencies features;
  };
  enigo_0_0_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "enigo";
    version = "0.0.11";
    authors = [ "Dustin Bensing <dustin.bensing@googlemail.com>" ];
    sha256 = "1j8kh8yl6vrkrkvxwh2nlazzy6ivp1860w86g1wlzrcza6sj6gza";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  error_chain_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "error-chain";
    version = "0.11.0";
    authors = [ "Brian Anderson <banderson@mozilla.com>" "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" "Yamakaky <yamakaky@yamaworld.fr>" ];
    sha256 = "19nz17q6dzp0mx2jhh9qbj45gkvvgcl7zq9z2ai5a8ihbisfj6d7";
    inherit dependencies buildDependencies features;
  };
  file_lock_0_0_17_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "file-lock";
    version = "0.0.17";
    authors = [ "Alfie John <alfie@alfie.wtf>" "Sebastian Thiel <byronimo@gmail.com>" ];
    sha256 = "0m0ihdw9wlb82c0kf2367vwbm9h469d7hayfalg0appp6sw4cn55";
    libName = "file_lock";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  foreign_types_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "foreign-types";
    version = "0.2.0";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "1sznwg2py4xi7hyrx0gg1sirlwgh87wsanvjx3zb475g6c4139jh";
    inherit dependencies buildDependencies features;
  };
  gcc_0_3_53_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "gcc";
    version = "0.3.53";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1syk1bsl08m6w21nn4b283psp5y9rdwga6v0226jqv2lnhg5yais";
    inherit dependencies buildDependencies features;
  };
  kernel32_sys_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "kernel32-sys";
    version = "0.2.2";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lrw1hbinyvr6cp28g60z97w32w8vsk6pahk64pmrv2fmby8srfj";
    libName = "kernel32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  lazy_static_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "0.2.8";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "1xbpxx7cd5kl60g87g43q80jxyrsildhxfjc42jb1x4jncknpwbl";
    inherit dependencies buildDependencies features;
  };
  libc_0_2_30_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libc";
    version = "0.2.30";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1c4gi6r5gbpbw3dmryc98x059awl4003cfz5kd6lqm03gp62wlkw";
    inherit dependencies buildDependencies features;
  };
  magenta_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "magenta";
    version = "0.1.1";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "1s4l6lf2r1rhxii2y2mjpc2p0zydpfmi6rs0w30j4l01w85bx1vv";
    inherit dependencies buildDependencies features;
  };
  magenta_sys_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "magenta-sys";
    version = "0.1.1";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "19r43rcl6dmafrzfn0d8vl11dzsvls3jhd9346c78k0zjslpr4r4";
    inherit dependencies buildDependencies features;
  };
  memchr_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memchr";
    version = "1.0.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
    sha256 = "071m5y0zm9p1k7pzqm20f44ixvmycf71xsrpayqaypxrjwchnkxm";
    inherit dependencies buildDependencies features;
  };
  novault_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "novault";
    version = "0.4.0";
    authors = [ "Garrett Berg <vitiral@gmail.com>" ];
    src = ./src;
    inherit dependencies buildDependencies features;
  };
  openssl_0_9_17_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "openssl";
    version = "0.9.17";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0c1qz31vf4zxb668pk1xvv2b99g5yk5zlm2mgxwb18mxkcrqlsq2";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  openssl_sys_0_9_17_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "openssl-sys";
    version = "0.9.17";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "1fhy5g0wf34ibgsp2clj7xxqknqm232acxp3sjwl4r1c51aa41yj";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  owning_ref_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "owning_ref";
    version = "0.3.3";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "13ivn0ydc0hf957ix0f5si9nnplzzykbr70hni1qz9m19i9kvmrh";
    inherit dependencies buildDependencies features;
  };
  parking_lot_0_4_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "parking_lot";
    version = "0.4.7";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "0ggrdij6fxd7z5yk0fr688y8kvccx6wvxbqa3qcmyi05x20fqcgc";
    inherit dependencies buildDependencies features;
  };
  parking_lot_core_0_2_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "parking_lot_core";
    version = "0.2.6";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "0iw3a4f6xpxp6w60rnpnddixqji1c073wkq4q2z7gxkxp0jghzm4";
    inherit dependencies buildDependencies features;
  };
  pkg_config_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "pkg-config";
    version = "0.3.9";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "06k8fxgrsrxj8mjpjcq1n7mn2p1shpxif4zg9y5h09c7vy20s146";
    inherit dependencies buildDependencies features;
  };
  prelude_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "prelude";
    version = "0.2.0";
    authors = [ "Garrett Berg <vitiral@gmail.com>" ];
    sha256 = "1bkx6dyz82hb6j4x7m9dr838vw2nfsjv2a2ddhh9j9aldzs6fiig";
    inherit dependencies buildDependencies features;
  };
  quote_0_3_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.3.15";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "09il61jv4kd1360spaj46qwyl21fv1qz18fsv2jra8wdnlgl5jsg";
    inherit dependencies buildDependencies features;
  };
  rand_0_3_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.3.16";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1sxwqaqr5kmmhh6qzanz1mmg10gr952mbi1kvzbp3krqhvnnsi0n";
    inherit dependencies buildDependencies features;
  };
  regex_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex";
    version = "0.2.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1f1zrrynfylg0vcfyfp60bybq4rp5g1yk2k7lc7fyz7mmc7k2qr7";
    inherit dependencies buildDependencies features;
  };
  regex_syntax_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex-syntax";
    version = "0.4.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "01yrsm68lj86ad1whgg1z95c2pfsvv58fz8qjcgw7mlszc0c08ls";
    inherit dependencies buildDependencies features;
  };
  rustc_demangle_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc-demangle";
    version = "0.1.5";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "096kkcx9j747700fhxj1s4rlwkj21pqjmvj64psdj6bakb2q13nc";
    inherit dependencies buildDependencies features;
  };
  safemem_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "safemem";
    version = "0.2.0";
    authors = [ "Austin Bonander <austin.bonander@gmail.com>" ];
    sha256 = "058m251q202n479ip1h6s91yw3plg66vsk5mpaflssn6rs5hijdm";
    inherit dependencies buildDependencies features;
  };
  scoped_threadpool_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "scoped_threadpool";
    version = "0.1.7";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "0dg58f18i6v071640062n0vymr4h42cnj0xy8a7b80sc0mddykyk";
    inherit dependencies buildDependencies features;
  };
  serde_1_0_14_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde";
    version = "1.0.14";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "15acqpi7qibhqvlmvg7bx09vpiqrf0f2q7xgig5b4i4dcn4idlkm";
    inherit dependencies buildDependencies features;
  };
  serde_derive_1_0_14_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_derive";
    version = "1.0.14";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "186mlm6drh6583qr7j9kyq64bxfyf2jamfrnl70h3grbiwj6wdrc";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  serde_derive_internals_0_16_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_derive_internals";
    version = "0.16.0";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1k96ypwlhnvmaksimkx1pd5rwvjaanfcdzpgndhy994hx03xplhs";
    inherit dependencies buildDependencies features;
  };
  shellexpand_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "shellexpand";
    version = "1.0.0";
    authors = [ "Vladimir Matveev <vladimir.matweev@gmail.com>" ];
    sha256 = "0k611hbn5lxzic1mqwm993hi3fm2dr80g74ljy7qgppp182hwifc";
    inherit dependencies buildDependencies features;
  };
  smallvec_0_4_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "smallvec";
    version = "0.4.3";
    authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "1sxpqx7rzqrni5c65ldpylf69sbpamhapgmjp6nf0riv0ml3i0cm";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  stable_deref_trait_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "stable_deref_trait";
    version = "1.0.0";
    authors = [ "Robert Grosse <n210241048576@gmail.com>" ];
    sha256 = "0ya5fms9qdwkd52d3a111w4vcz18j4rbfx4p88z44116cqd6cczr";
    inherit dependencies buildDependencies features;
  };
  strfmt_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "strfmt";
    version = "0.1.5";
    authors = [ "Garrett Berg <vitiral@gmail.com>" ];
    sha256 = "177slssa8y0lq05s19y2xnqcfh646m887lhq7iw3nfgzy4cjv2vf";
    inherit dependencies buildDependencies features;
  };
  strsim_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "strsim";
    version = "0.6.0";
    authors = [ "Danny Guo <dannyguo91@gmail.com>" ];
    sha256 = "1lz85l6y68hr62lv4baww29yy7g8pg20dlr0lbaswxmmcb0wl7gd";
    inherit dependencies buildDependencies features;
  };
  structopt_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "structopt";
    version = "0.1.0";
    authors = [ "Guillaume Pinot <texitoi@texitoi.eu>" ];
    sha256 = "0plsslnrs9537rbfvpzcb310ll500kxbizl1mx7m5512kqh0y71k";
    inherit dependencies buildDependencies features;
  };
  structopt_derive_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "structopt-derive";
    version = "0.1.0";
    authors = [ "Guillaume Pinot <texitoi@texitoi.eu>" ];
    sha256 = "0jyq3ian6fkd3g9av0sc9kk6mfakzmqiidricg9na92yxlk0zv9a";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  syn_0_11_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syn";
    version = "0.11.11";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0yw8ng7x1dn5a6ykg0ib49y7r9nhzgpiq2989rqdp7rdz3n85502";
    inherit dependencies buildDependencies features;
  };
  synom_0_11_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "synom";
    version = "0.11.3";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1l6d1s9qjfp6ng2s2z8219igvlv7gyk8gby97sdykqc1r93d8rhc";
    inherit dependencies buildDependencies features;
  };
  tabwriter_1_0_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tabwriter";
    version = "1.0.3";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1hx8pc0qwc6v2735nw8kz6hxznw1fl76qxb31vk1i8lwy16vh3ww";
    inherit dependencies buildDependencies features;
  };
  tempfile_2_1_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tempfile";
    version = "2.1.6";
    authors = [ "Steven Allen <steven@stebalien.com>" ];
    sha256 = "1l23w8plmvzmc9jhl077ki83i95ly3pzqfnkcfzf6jndilpf8vhc";
    inherit dependencies buildDependencies features;
  };
  term_size_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "term_size";
    version = "0.3.0";
    authors = [ "Kevin K. <kbknapp@gmail.com>" "Benjamin Sago <ogham@bsago.me>" ];
    sha256 = "054d5avad49sy5nfaaaphai4kv4rmdh6q0npchnvdhpxp02lcfhs";
    inherit dependencies buildDependencies features;
  };
  termios_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termios";
    version = "0.2.2";
    authors = [ "David Cuddeback <david.cuddeback@gmail.com>" ];
    sha256 = "0hjy4idvcapx9i6qbhf5536aqnf6rqk2aaj424sfwy7qhv6xmcx3";
    inherit dependencies buildDependencies features;
  };
  textwrap_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "textwrap";
    version = "0.7.0";
    authors = [ "Martin Geisler <martin@geisler.net>" ];
    sha256 = "123ix3dpvw2k0zdpr4zm8r3bbw9x8rgqxmiipcbnslkd2dcsc3g6";
    inherit dependencies buildDependencies features;
  };
  thread_local_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "thread_local";
    version = "0.3.4";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "1y6cwyhhx2nkz4b3dziwhqdvgq830z8wjp32b40pjd8r0hxqv2jr";
    inherit dependencies buildDependencies features;
  };
  toml_0_4_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "toml";
    version = "0.4.5";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "06zxqhn3y58yzjfaykhcrvlf7p2dnn54kn3g4apmja3cn5b18lkk";
    inherit dependencies buildDependencies features;
  };
  unicode_segmentation_1_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-segmentation";
    version = "1.2.0";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "0yz43x7wrhr3n7a2zsinx3r60yxsdqicg8a5kycyyhdaq1zmiz1y";
    inherit dependencies buildDependencies features;
  };
  unicode_width_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-width";
    version = "0.1.4";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "1rp7a04icn9y5c0lm74nrd4py0rdl0af8bhdwq7g478n1xifpifl";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_0_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.0.4";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "1dc8wkkcd3s6534s5aw4lbjn8m67flkkbnajp5bl8408wdg8rh9v";
    inherit dependencies buildDependencies features;
  };
  unreachable_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unreachable";
    version = "1.0.0";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "1am8czbk5wwr25gbp2zr007744fxjshhdqjz9liz7wl4pnv3whcf";
    inherit dependencies buildDependencies features;
  };
  user32_sys_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "user32-sys";
    version = "0.2.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "09jsljskvjhfpmmi0bva89ymxs00qmsrfgfk98zbq1ygz94mblxz";
    libName = "user32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  utf8_ranges_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "utf8-ranges";
    version = "1.0.0";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0rzmqprwjv9yp1n0qqgahgm24872x6c0xddfym5pfndy7a36vkn0";
    inherit dependencies buildDependencies features;
  };
  vcpkg_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vcpkg";
    version = "0.2.2";
    authors = [ "Jim McGrath <jimmc2@gmail.com>" ];
    sha256 = "1fl5j0ksnwrnsrf1b1a9lqbjgnajdipq0030vsbhx81mb7d9478a";
    inherit dependencies buildDependencies features;
  };
  vec_map_0_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vec_map";
    version = "0.8.0";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Jorge Aparicio <japaricious@gmail.com>" "Alexis Beingessner <a.beingessner@gmail.com>" "Brian Anderson <>" "tbu- <>" "Manish Goregaokar <>" "Aaron Turon <aturon@mozilla.com>" "Adolfo Ochagavía <>" "Niko Matsakis <>" "Steven Fackler <>" "Chase Southwood <csouth3@illinois.edu>" "Eduard Burtescu <>" "Florian Wilkens <>" "Félix Raimundo <>" "Tibor Benke <>" "Markus Siemens <markus@m-siemens.de>" "Josh Branchaud <jbranchaud@gmail.com>" "Huon Wilson <dbau.pp@gmail.com>" "Corey Farwell <coref@rwell.org>" "Aaron Liblong <>" "Nick Cameron <nrc@ncameron.org>" "Patrick Walton <pcwalton@mimiga.net>" "Felix S Klock II <>" "Andrew Paseltiner <apaseltiner@gmail.com>" "Sean McArthur <sean.monstar@gmail.com>" "Vadim Petrochenkov <>" ];
    sha256 = "07sgxp3cf1a4cxm9n3r27fcvqmld32bl2576mrcahnvm34j11xay";
    inherit dependencies buildDependencies features;
  };
  void_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "void";
    version = "1.0.2";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "0h1dm0dx8dhf56a83k68mijyxigqhizpskwxfdrs1drwv2cdclv3";
    inherit dependencies buildDependencies features;
  };
  winapi_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.2.8";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0a45b58ywf12vb7gvj6h3j264nydynmzyqz8d8rqxsj6icqv82as";
    inherit dependencies buildDependencies features;
  };
  winapi_build_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-build";
    version = "0.1.1";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lxlpi87rkhxcwp2ykf1ldw3p108hwm24nywf3jfrvmff4rjhqga";
    libName = "build";
    inherit dependencies buildDependencies features;
  };
  aho_corasick_0_6_3 = { features?(aho_corasick_0_6_3_features {}) }: aho_corasick_0_6_3_ {
    dependencies = mapFeatures features ([ memchr_1_0_1 ]);
  };
  aho_corasick_0_6_3_features = f: updateFeatures f (rec {
    aho_corasick_0_6_3.default = (f.aho_corasick_0_6_3.default or true);
    memchr_1_0_1.default = true;
  }) [ memchr_1_0_1_features ];
  ansi_term_0_9_0 = { features?(ansi_term_0_9_0_features {}) }: ansi_term_0_9_0_ {};
  ansi_term_0_9_0_features = f: updateFeatures f (rec {
    ansi_term_0_9_0.default = (f.ansi_term_0_9_0.default or true);
  }) [];
  argon2rs_0_2_5 = { features?(argon2rs_0_2_5_features {}) }: argon2rs_0_2_5_ {
    dependencies = mapFeatures features ([ blake2_rfc_0_2_17 scoped_threadpool_0_1_7 ]);
    features = mkFeatures (features.argon2rs_0_2_5 or {});
  };
  argon2rs_0_2_5_features = f: updateFeatures f (rec {
    argon2rs_0_2_5.default = (f.argon2rs_0_2_5.default or true);
    blake2_rfc_0_2_17.default = true;
    blake2_rfc_0_2_17.simd_asm =
      (f.blake2_rfc_0_2_17.simd_asm or false) ||
      (argon2rs_0_2_5.simd or false) ||
      (f.argon2rs_0_2_5.simd or false);
    scoped_threadpool_0_1_7.default = true;
  }) [ blake2_rfc_0_2_17_features scoped_threadpool_0_1_7_features ];
  atty_0_2_2 = { features?(atty_0_2_2_features {}) }: atty_0_2_2_ {
    dependencies = (if !(kernel == "windows") then mapFeatures features ([ libc_0_2_30 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  atty_0_2_2_features = f: updateFeatures f (rec {
    atty_0_2_2.default = (f.atty_0_2_2.default or true);
    kernel32_sys_0_2_2.default = true;
    libc_0_2_30.default = true;
    winapi_0_2_8.default = true;
  }) [ libc_0_2_30_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  backtrace_0_3_3 = { features?(backtrace_0_3_3_features {}) }: backtrace_0_3_3_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 rustc_demangle_0_1_5 ])
      ++ (if (kernel == "linux" || kernel == "darwin") && !(kernel == "emscripten") && !(kernel == "darwin") && !(kernel == "ios") then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_3.backtrace-sys or false then [ backtrace_sys_0_1_12 ] else [])) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_30 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_3.dbghelp-sys or false then [ dbghelp_sys_0_2_0 ] else [])
      ++ (if features.backtrace_0_3_3.kernel32-sys or false then [ kernel32_sys_0_2_2 ] else [])
      ++ (if features.backtrace_0_3_3.winapi or false then [ winapi_0_2_8 ] else [])) else []);
    features = mkFeatures (features.backtrace_0_3_3 or {});
  };
  backtrace_0_3_3_features = f: updateFeatures f (rec {
    backtrace_0_3_3.addr2line =
      (f.backtrace_0_3_3.addr2line or false) ||
      (f.backtrace_0_3_3.gimli-symbolize or false) ||
      (backtrace_0_3_3.gimli-symbolize or false);
    backtrace_0_3_3.backtrace-sys =
      (f.backtrace_0_3_3.backtrace-sys or false) ||
      (f.backtrace_0_3_3.libbacktrace or false) ||
      (backtrace_0_3_3.libbacktrace or false);
    backtrace_0_3_3.coresymbolication =
      (f.backtrace_0_3_3.coresymbolication or false) ||
      (f.backtrace_0_3_3.default or false) ||
      (backtrace_0_3_3.default or false);
    backtrace_0_3_3.dbghelp =
      (f.backtrace_0_3_3.dbghelp or false) ||
      (f.backtrace_0_3_3.default or false) ||
      (backtrace_0_3_3.default or false);
    backtrace_0_3_3.dbghelp-sys =
      (f.backtrace_0_3_3.dbghelp-sys or false) ||
      (f.backtrace_0_3_3.dbghelp or false) ||
      (backtrace_0_3_3.dbghelp or false);
    backtrace_0_3_3.default = (f.backtrace_0_3_3.default or true);
    backtrace_0_3_3.dladdr =
      (f.backtrace_0_3_3.dladdr or false) ||
      (f.backtrace_0_3_3.default or false) ||
      (backtrace_0_3_3.default or false);
    backtrace_0_3_3.findshlibs =
      (f.backtrace_0_3_3.findshlibs or false) ||
      (f.backtrace_0_3_3.gimli-symbolize or false) ||
      (backtrace_0_3_3.gimli-symbolize or false);
    backtrace_0_3_3.kernel32-sys =
      (f.backtrace_0_3_3.kernel32-sys or false) ||
      (f.backtrace_0_3_3.dbghelp or false) ||
      (backtrace_0_3_3.dbghelp or false);
    backtrace_0_3_3.libbacktrace =
      (f.backtrace_0_3_3.libbacktrace or false) ||
      (f.backtrace_0_3_3.default or false) ||
      (backtrace_0_3_3.default or false);
    backtrace_0_3_3.libunwind =
      (f.backtrace_0_3_3.libunwind or false) ||
      (f.backtrace_0_3_3.default or false) ||
      (backtrace_0_3_3.default or false);
    backtrace_0_3_3.rustc-serialize =
      (f.backtrace_0_3_3.rustc-serialize or false) ||
      (f.backtrace_0_3_3.serialize-rustc or false) ||
      (backtrace_0_3_3.serialize-rustc or false);
    backtrace_0_3_3.serde =
      (f.backtrace_0_3_3.serde or false) ||
      (f.backtrace_0_3_3.serialize-serde or false) ||
      (backtrace_0_3_3.serialize-serde or false);
    backtrace_0_3_3.serde_derive =
      (f.backtrace_0_3_3.serde_derive or false) ||
      (f.backtrace_0_3_3.serialize-serde or false) ||
      (backtrace_0_3_3.serialize-serde or false);
    backtrace_0_3_3.winapi =
      (f.backtrace_0_3_3.winapi or false) ||
      (f.backtrace_0_3_3.dbghelp or false) ||
      (backtrace_0_3_3.dbghelp or false);
    backtrace_sys_0_1_12.default = true;
    cfg_if_0_1_2.default = true;
    dbghelp_sys_0_2_0.default = true;
    kernel32_sys_0_2_2.default = true;
    libc_0_2_30.default = true;
    rustc_demangle_0_1_5.default = true;
    winapi_0_2_8.default = true;
  }) [ cfg_if_0_1_2_features rustc_demangle_0_1_5_features backtrace_sys_0_1_12_features libc_0_2_30_features dbghelp_sys_0_2_0_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  backtrace_sys_0_1_12 = { features?(backtrace_sys_0_1_12_features {}) }: backtrace_sys_0_1_12_ {
    dependencies = mapFeatures features ([ libc_0_2_30 ]);
    buildDependencies = mapFeatures features ([ gcc_0_3_53 ]);
  };
  backtrace_sys_0_1_12_features = f: updateFeatures f (rec {
    backtrace_sys_0_1_12.default = (f.backtrace_sys_0_1_12.default or true);
    gcc_0_3_53.default = true;
    libc_0_2_30.default = true;
  }) [ libc_0_2_30_features gcc_0_3_53_features ];
  base64_0_6_0 = { features?(base64_0_6_0_features {}) }: base64_0_6_0_ {
    dependencies = mapFeatures features ([ byteorder_1_1_0 safemem_0_2_0 ]);
  };
  base64_0_6_0_features = f: updateFeatures f (rec {
    base64_0_6_0.default = (f.base64_0_6_0.default or true);
    byteorder_1_1_0.default = true;
    safemem_0_2_0.default = true;
  }) [ byteorder_1_1_0_features safemem_0_2_0_features ];
  bitflags_0_7_0 = { features?(bitflags_0_7_0_features {}) }: bitflags_0_7_0_ {};
  bitflags_0_7_0_features = f: updateFeatures f (rec {
    bitflags_0_7_0.default = (f.bitflags_0_7_0.default or true);
  }) [];
  bitflags_0_9_1 = { features?(bitflags_0_9_1_features {}) }: bitflags_0_9_1_ {
    features = mkFeatures (features.bitflags_0_9_1 or {});
  };
  bitflags_0_9_1_features = f: updateFeatures f (rec {
    bitflags_0_9_1.default = (f.bitflags_0_9_1.default or true);
    bitflags_0_9_1.example_generated =
      (f.bitflags_0_9_1.example_generated or false) ||
      (f.bitflags_0_9_1.default or false) ||
      (bitflags_0_9_1.default or false);
  }) [];
  blake2_rfc_0_2_17 = { features?(blake2_rfc_0_2_17_features {}) }: blake2_rfc_0_2_17_ {
    dependencies = mapFeatures features ([ constant_time_eq_0_1_3 ]);
    features = mkFeatures (features.blake2_rfc_0_2_17 or {});
  };
  blake2_rfc_0_2_17_features = f: updateFeatures f (rec {
    blake2_rfc_0_2_17.default = (f.blake2_rfc_0_2_17.default or true);
    blake2_rfc_0_2_17.simd =
      (f.blake2_rfc_0_2_17.simd or false) ||
      (f.blake2_rfc_0_2_17.simd_opt or false) ||
      (blake2_rfc_0_2_17.simd_opt or false);
    blake2_rfc_0_2_17.simd_opt =
      (f.blake2_rfc_0_2_17.simd_opt or false) ||
      (f.blake2_rfc_0_2_17.simd_asm or false) ||
      (blake2_rfc_0_2_17.simd_asm or false);
    constant_time_eq_0_1_3.default = true;
  }) [ constant_time_eq_0_1_3_features ];
  byteorder_1_1_0 = { features?(byteorder_1_1_0_features {}) }: byteorder_1_1_0_ {
    features = mkFeatures (features.byteorder_1_1_0 or {});
  };
  byteorder_1_1_0_features = f: updateFeatures f (rec {
    byteorder_1_1_0.default = (f.byteorder_1_1_0.default or true);
    byteorder_1_1_0.std =
      (f.byteorder_1_1_0.std or false) ||
      (f.byteorder_1_1_0.default or false) ||
      (byteorder_1_1_0.default or false);
  }) [];
  cfg_if_0_1_2 = { features?(cfg_if_0_1_2_features {}) }: cfg_if_0_1_2_ {};
  cfg_if_0_1_2_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = (f.cfg_if_0_1_2.default or true);
  }) [];
  clap_2_26_0 = { features?(clap_2_26_0_features {}) }: clap_2_26_0_ {
    dependencies = mapFeatures features ([ bitflags_0_9_1 textwrap_0_7_0 unicode_segmentation_1_2_0 unicode_width_0_1_4 vec_map_0_8_0 ]
      ++ (if features.clap_2_26_0.ansi_term or false then [ ansi_term_0_9_0 ] else [])
      ++ (if features.clap_2_26_0.atty or false then [ atty_0_2_2 ] else [])
      ++ (if features.clap_2_26_0.strsim or false then [ strsim_0_6_0 ] else [])
      ++ (if features.clap_2_26_0.term_size or false then [ term_size_0_3_0 ] else []));
    features = mkFeatures (features.clap_2_26_0 or {});
  };
  clap_2_26_0_features = f: updateFeatures f (rec {
    ansi_term_0_9_0.default = true;
    atty_0_2_2.default = true;
    bitflags_0_9_1.default = true;
    clap_2_26_0.ansi_term =
      (f.clap_2_26_0.ansi_term or false) ||
      (f.clap_2_26_0.color or false) ||
      (clap_2_26_0.color or false);
    clap_2_26_0.atty =
      (f.clap_2_26_0.atty or false) ||
      (f.clap_2_26_0.color or false) ||
      (clap_2_26_0.color or false);
    clap_2_26_0.clippy =
      (f.clap_2_26_0.clippy or false) ||
      (f.clap_2_26_0.lints or false) ||
      (clap_2_26_0.lints or false);
    clap_2_26_0.color =
      (f.clap_2_26_0.color or false) ||
      (f.clap_2_26_0.default or false) ||
      (clap_2_26_0.default or false);
    clap_2_26_0.default = (f.clap_2_26_0.default or true);
    clap_2_26_0.strsim =
      (f.clap_2_26_0.strsim or false) ||
      (f.clap_2_26_0.suggestions or false) ||
      (clap_2_26_0.suggestions or false);
    clap_2_26_0.suggestions =
      (f.clap_2_26_0.suggestions or false) ||
      (f.clap_2_26_0.default or false) ||
      (clap_2_26_0.default or false);
    clap_2_26_0.term_size =
      (f.clap_2_26_0.term_size or false) ||
      (f.clap_2_26_0.wrap_help or false) ||
      (clap_2_26_0.wrap_help or false);
    clap_2_26_0.wrap_help =
      (f.clap_2_26_0.wrap_help or false) ||
      (f.clap_2_26_0.default or false) ||
      (clap_2_26_0.default or false);
    clap_2_26_0.yaml =
      (f.clap_2_26_0.yaml or false) ||
      (f.clap_2_26_0.doc or false) ||
      (clap_2_26_0.doc or false);
    clap_2_26_0.yaml-rust =
      (f.clap_2_26_0.yaml-rust or false) ||
      (f.clap_2_26_0.yaml or false) ||
      (clap_2_26_0.yaml or false);
    strsim_0_6_0.default = true;
    term_size_0_3_0.default = true;
    textwrap_0_7_0.default = true;
    unicode_segmentation_1_2_0.default = true;
    unicode_width_0_1_4.default = true;
    vec_map_0_8_0.default = true;
  }) [ ansi_term_0_9_0_features atty_0_2_2_features bitflags_0_9_1_features strsim_0_6_0_features term_size_0_3_0_features textwrap_0_7_0_features unicode_segmentation_1_2_0_features unicode_width_0_1_4_features vec_map_0_8_0_features ];
  clicolors_control_0_1_0 = { features?(clicolors_control_0_1_0_features {}) }: clicolors_control_0_1_0_ {
    dependencies = mapFeatures features ([ lazy_static_0_2_8 ])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_30 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
    features = mkFeatures (features.clicolors_control_0_1_0 or {});
  };
  clicolors_control_0_1_0_features = f: updateFeatures f (rec {
    clicolors_control_0_1_0.default = (f.clicolors_control_0_1_0.default or true);
    clicolors_control_0_1_0.terminal_autoconfig =
      (f.clicolors_control_0_1_0.terminal_autoconfig or false) ||
      (f.clicolors_control_0_1_0.default or false) ||
      (clicolors_control_0_1_0.default or false);
    kernel32_sys_0_2_2.default = true;
    lazy_static_0_2_8.default = true;
    libc_0_2_30.default = true;
    winapi_0_2_8.default = true;
  }) [ lazy_static_0_2_8_features libc_0_2_30_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  console_0_5_0 = { features?(console_0_5_0_features {}) }: console_0_5_0_ {
    dependencies = mapFeatures features ([ clicolors_control_0_1_0 lazy_static_0_2_8 libc_0_2_30 parking_lot_0_4_7 regex_0_2_2 unicode_width_0_1_4 ])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ termios_0_2_2 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  console_0_5_0_features = f: updateFeatures f (rec {
    clicolors_control_0_1_0.default = true;
    console_0_5_0.default = (f.console_0_5_0.default or true);
    kernel32_sys_0_2_2.default = true;
    lazy_static_0_2_8.default = true;
    libc_0_2_30.default = true;
    parking_lot_0_4_7.default = true;
    regex_0_2_2.default = true;
    termios_0_2_2.default = true;
    unicode_width_0_1_4.default = true;
    winapi_0_2_8.default = true;
  }) [ clicolors_control_0_1_0_features lazy_static_0_2_8_features libc_0_2_30_features parking_lot_0_4_7_features regex_0_2_2_features unicode_width_0_1_4_features termios_0_2_2_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  constant_time_eq_0_1_3 = { features?(constant_time_eq_0_1_3_features {}) }: constant_time_eq_0_1_3_ {};
  constant_time_eq_0_1_3_features = f: updateFeatures f (rec {
    constant_time_eq_0_1_3.default = (f.constant_time_eq_0_1_3.default or true);
  }) [];
  conv_0_3_3 = { features?(conv_0_3_3_features {}) }: conv_0_3_3_ {
    dependencies = mapFeatures features ([ custom_derive_0_1_7 ]);
  };
  conv_0_3_3_features = f: updateFeatures f (rec {
    conv_0_3_3.default = (f.conv_0_3_3.default or true);
    custom_derive_0_1_7.default = true;
  }) [ custom_derive_0_1_7_features ];
  core_foundation_0_3_0 = { features?(core_foundation_0_3_0_features {}) }: core_foundation_0_3_0_ {
    dependencies = mapFeatures features ([ core_foundation_sys_0_3_1 libc_0_2_30 ]);
  };
  core_foundation_0_3_0_features = f: updateFeatures f (rec {
    core_foundation_0_3_0.default = (f.core_foundation_0_3_0.default or true);
    core_foundation_sys_0_3_1.default = true;
    libc_0_2_30.default = true;
  }) [ core_foundation_sys_0_3_1_features libc_0_2_30_features ];
  core_foundation_sys_0_3_1 = { features?(core_foundation_sys_0_3_1_features {}) }: core_foundation_sys_0_3_1_ {
    dependencies = mapFeatures features ([ libc_0_2_30 ]);
  };
  core_foundation_sys_0_3_1_features = f: updateFeatures f (rec {
    core_foundation_sys_0_3_1.default = (f.core_foundation_sys_0_3_1.default or true);
    libc_0_2_30.default = true;
  }) [ libc_0_2_30_features ];
  core_graphics_0_8_2 = { features?(core_graphics_0_8_2_features {}) }: core_graphics_0_8_2_ {
    dependencies = mapFeatures features ([ bitflags_0_9_1 core_foundation_0_3_0 libc_0_2_30 ]);
    features = mkFeatures (features.core_graphics_0_8_2 or {});
  };
  core_graphics_0_8_2_features = f: updateFeatures f (rec {
    bitflags_0_9_1.default = true;
    core_foundation_0_3_0.default = true;
    core_graphics_0_8_2.default = (f.core_graphics_0_8_2.default or true);
    libc_0_2_30.default = true;
  }) [ bitflags_0_9_1_features core_foundation_0_3_0_features libc_0_2_30_features ];
  custom_derive_0_1_7 = { features?(custom_derive_0_1_7_features {}) }: custom_derive_0_1_7_ {
    features = mkFeatures (features.custom_derive_0_1_7 or {});
  };
  custom_derive_0_1_7_features = f: updateFeatures f (rec {
    custom_derive_0_1_7.default = (f.custom_derive_0_1_7.default or true);
    custom_derive_0_1_7.std =
      (f.custom_derive_0_1_7.std or false) ||
      (f.custom_derive_0_1_7.default or false) ||
      (custom_derive_0_1_7.default or false);
  }) [];
  dbghelp_sys_0_2_0 = { features?(dbghelp_sys_0_2_0_features {}) }: dbghelp_sys_0_2_0_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  dbghelp_sys_0_2_0_features = f: updateFeatures f (rec {
    dbghelp_sys_0_2_0.default = (f.dbghelp_sys_0_2_0.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  dialoguer_0_1_0 = { features?(dialoguer_0_1_0_features {}) }: dialoguer_0_1_0_ {
    dependencies = mapFeatures features ([ console_0_5_0 tempfile_2_1_6 ]);
  };
  dialoguer_0_1_0_features = f: updateFeatures f (rec {
    console_0_5_0.default = true;
    dialoguer_0_1_0.default = (f.dialoguer_0_1_0.default or true);
    tempfile_2_1_6.default = true;
  }) [ console_0_5_0_features tempfile_2_1_6_features ];
  enigo_0_0_11 = { features?(enigo_0_0_11_features {}) }: enigo_0_0_11_ {
    dependencies = mapFeatures features ([])
      ++ (if kernel == "linux" then mapFeatures features ([ libc_0_2_30 ]) else [])
      ++ (if kernel == "darwin" then mapFeatures features ([ core_graphics_0_8_2 libc_0_2_30 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ user32_sys_0_2_0 winapi_0_2_8 ]) else []);
    buildDependencies = mapFeatures features ([ pkg_config_0_3_9 ]);
    features = mkFeatures (features.enigo_0_0_11 or {});
  };
  enigo_0_0_11_features = f: updateFeatures f (rec {
    core_graphics_0_8_2.default = true;
    enigo_0_0_11.default = (f.enigo_0_0_11.default or true);
    enigo_0_0_11.serde =
      (f.enigo_0_0_11.serde or false) ||
      (f.enigo_0_0_11.with_serde or false) ||
      (enigo_0_0_11.with_serde or false);
    enigo_0_0_11.serde_derive =
      (f.enigo_0_0_11.serde_derive or false) ||
      (f.enigo_0_0_11.with_serde or false) ||
      (enigo_0_0_11.with_serde or false);
    libc_0_2_30.default = true;
    pkg_config_0_3_9.default = true;
    user32_sys_0_2_0.default = true;
    winapi_0_2_8.default = true;
  }) [ pkg_config_0_3_9_features libc_0_2_30_features core_graphics_0_8_2_features libc_0_2_30_features user32_sys_0_2_0_features winapi_0_2_8_features ];
  error_chain_0_11_0 = { features?(error_chain_0_11_0_features {}) }: error_chain_0_11_0_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.error_chain_0_11_0.backtrace or false then [ backtrace_0_3_3 ] else []));
    features = mkFeatures (features.error_chain_0_11_0 or {});
  };
  error_chain_0_11_0_features = f: updateFeatures f (rec {
    backtrace_0_3_3.default = true;
    error_chain_0_11_0.backtrace =
      (f.error_chain_0_11_0.backtrace or false) ||
      (f.error_chain_0_11_0.default or false) ||
      (error_chain_0_11_0.default or false);
    error_chain_0_11_0.default = (f.error_chain_0_11_0.default or true);
    error_chain_0_11_0.example_generated =
      (f.error_chain_0_11_0.example_generated or false) ||
      (f.error_chain_0_11_0.default or false) ||
      (error_chain_0_11_0.default or false);
  }) [ backtrace_0_3_3_features ];
  file_lock_0_0_17 = { features?(file_lock_0_0_17_features {}) }: file_lock_0_0_17_ {
    dependencies = mapFeatures features ([ libc_0_2_30 ]);
    buildDependencies = mapFeatures features ([ gcc_0_3_53 ]);
    features = mkFeatures (features.file_lock_0_0_17 or {});
  };
  file_lock_0_0_17_features = f: updateFeatures f (rec {
    file_lock_0_0_17.default = (f.file_lock_0_0_17.default or true);
    gcc_0_3_53.default = true;
    libc_0_2_30.default = true;
  }) [ libc_0_2_30_features gcc_0_3_53_features ];
  foreign_types_0_2_0 = { features?(foreign_types_0_2_0_features {}) }: foreign_types_0_2_0_ {};
  foreign_types_0_2_0_features = f: updateFeatures f (rec {
    foreign_types_0_2_0.default = (f.foreign_types_0_2_0.default or true);
  }) [];
  gcc_0_3_53 = { features?(gcc_0_3_53_features {}) }: gcc_0_3_53_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.gcc_0_3_53 or {});
  };
  gcc_0_3_53_features = f: updateFeatures f (rec {
    gcc_0_3_53.default = (f.gcc_0_3_53.default or true);
    gcc_0_3_53.rayon =
      (f.gcc_0_3_53.rayon or false) ||
      (f.gcc_0_3_53.parallel or false) ||
      (gcc_0_3_53.parallel or false);
  }) [];
  kernel32_sys_0_2_2 = { features?(kernel32_sys_0_2_2_features {}) }: kernel32_sys_0_2_2_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  kernel32_sys_0_2_2_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = (f.kernel32_sys_0_2_2.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  lazy_static_0_2_8 = { features?(lazy_static_0_2_8_features {}) }: lazy_static_0_2_8_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_0_2_8 or {});
  };
  lazy_static_0_2_8_features = f: updateFeatures f (rec {
    lazy_static_0_2_8.default = (f.lazy_static_0_2_8.default or true);
    lazy_static_0_2_8.nightly =
      (f.lazy_static_0_2_8.nightly or false) ||
      (f.lazy_static_0_2_8.spin_no_std or false) ||
      (lazy_static_0_2_8.spin_no_std or false);
    lazy_static_0_2_8.spin =
      (f.lazy_static_0_2_8.spin or false) ||
      (f.lazy_static_0_2_8.spin_no_std or false) ||
      (lazy_static_0_2_8.spin_no_std or false);
  }) [];
  libc_0_2_30 = { features?(libc_0_2_30_features {}) }: libc_0_2_30_ {
    features = mkFeatures (features.libc_0_2_30 or {});
  };
  libc_0_2_30_features = f: updateFeatures f (rec {
    libc_0_2_30.default = (f.libc_0_2_30.default or true);
    libc_0_2_30.use_std =
      (f.libc_0_2_30.use_std or false) ||
      (f.libc_0_2_30.default or false) ||
      (libc_0_2_30.default or false);
  }) [];
  magenta_0_1_1 = { features?(magenta_0_1_1_features {}) }: magenta_0_1_1_ {
    dependencies = mapFeatures features ([ conv_0_3_3 magenta_sys_0_1_1 ]);
  };
  magenta_0_1_1_features = f: updateFeatures f (rec {
    conv_0_3_3.default = true;
    magenta_0_1_1.default = (f.magenta_0_1_1.default or true);
    magenta_sys_0_1_1.default = true;
  }) [ conv_0_3_3_features magenta_sys_0_1_1_features ];
  magenta_sys_0_1_1 = { features?(magenta_sys_0_1_1_features {}) }: magenta_sys_0_1_1_ {
    dependencies = mapFeatures features ([ bitflags_0_7_0 ]);
  };
  magenta_sys_0_1_1_features = f: updateFeatures f (rec {
    bitflags_0_7_0.default = true;
    magenta_sys_0_1_1.default = (f.magenta_sys_0_1_1.default or true);
  }) [ bitflags_0_7_0_features ];
  memchr_1_0_1 = { features?(memchr_1_0_1_features {}) }: memchr_1_0_1_ {
    dependencies = mapFeatures features ([ libc_0_2_30 ]);
    features = mkFeatures (features.memchr_1_0_1 or {});
  };
  memchr_1_0_1_features = f: updateFeatures f (rec {
    libc_0_2_30.default = (f.libc_0_2_30.default or false);
    libc_0_2_30.use_std =
      (f.libc_0_2_30.use_std or false) ||
      (memchr_1_0_1.use_std or false) ||
      (f.memchr_1_0_1.use_std or false);
    memchr_1_0_1.default = (f.memchr_1_0_1.default or true);
    memchr_1_0_1.use_std =
      (f.memchr_1_0_1.use_std or false) ||
      (f.memchr_1_0_1.default or false) ||
      (memchr_1_0_1.default or false);
  }) [ libc_0_2_30_features ];
  novault_0_4_0 = { features?(novault_0_4_0_features {}) }: novault_0_4_0_ {
    dependencies = mapFeatures features ([ ansi_term_0_9_0 argon2rs_0_2_5 base64_0_6_0 byteorder_1_1_0 dialoguer_0_1_0 enigo_0_0_11 error_chain_0_11_0 file_lock_0_0_17 openssl_0_9_17 prelude_0_2_0 rand_0_3_16 serde_1_0_14 serde_derive_1_0_14 shellexpand_1_0_0 strfmt_0_1_5 structopt_0_1_0 structopt_derive_0_1_0 tabwriter_1_0_3 toml_0_4_5 ]);
  };
  novault_0_4_0_features = f: updateFeatures f (rec {
    ansi_term_0_9_0.default = true;
    argon2rs_0_2_5.default = true;
    base64_0_6_0.default = true;
    byteorder_1_1_0.default = true;
    dialoguer_0_1_0.default = true;
    enigo_0_0_11.default = true;
    error_chain_0_11_0.default = true;
    file_lock_0_0_17.default = true;
    novault_0_4_0.default = (f.novault_0_4_0.default or true);
    openssl_0_9_17.default = true;
    prelude_0_2_0.default = true;
    rand_0_3_16.default = true;
    serde_1_0_14.default = true;
    serde_derive_1_0_14.default = true;
    shellexpand_1_0_0.default = true;
    strfmt_0_1_5.default = true;
    structopt_0_1_0.default = true;
    structopt_derive_0_1_0.default = true;
    tabwriter_1_0_3.default = true;
    toml_0_4_5.default = true;
  }) [ ansi_term_0_9_0_features argon2rs_0_2_5_features base64_0_6_0_features byteorder_1_1_0_features dialoguer_0_1_0_features enigo_0_0_11_features error_chain_0_11_0_features file_lock_0_0_17_features openssl_0_9_17_features prelude_0_2_0_features rand_0_3_16_features serde_1_0_14_features serde_derive_1_0_14_features shellexpand_1_0_0_features strfmt_0_1_5_features structopt_0_1_0_features structopt_derive_0_1_0_features tabwriter_1_0_3_features toml_0_4_5_features ];
  openssl_0_9_17 = { features?(openssl_0_9_17_features {}) }: openssl_0_9_17_ {
    dependencies = mapFeatures features ([ bitflags_0_9_1 foreign_types_0_2_0 lazy_static_0_2_8 libc_0_2_30 openssl_sys_0_9_17 ]);
    features = mkFeatures (features.openssl_0_9_17 or {});
  };
  openssl_0_9_17_features = f: updateFeatures f (rec {
    bitflags_0_9_1.default = true;
    foreign_types_0_2_0.default = true;
    lazy_static_0_2_8.default = true;
    libc_0_2_30.default = true;
    openssl_0_9_17.default = (f.openssl_0_9_17.default or true);
    openssl_sys_0_9_17.default = true;
  }) [ bitflags_0_9_1_features foreign_types_0_2_0_features lazy_static_0_2_8_features libc_0_2_30_features openssl_sys_0_9_17_features ];
  openssl_sys_0_9_17 = { features?(openssl_sys_0_9_17_features {}) }: openssl_sys_0_9_17_ {
    dependencies = mapFeatures features ([ libc_0_2_30 ])
      ++ (if abi == "msvc" then mapFeatures features ([]) else []);
    buildDependencies = mapFeatures features ([ gcc_0_3_53 pkg_config_0_3_9 ]);
  };
  openssl_sys_0_9_17_features = f: updateFeatures f (rec {
    gcc_0_3_53.default = true;
    libc_0_2_30.default = true;
    openssl_sys_0_9_17.default = (f.openssl_sys_0_9_17.default or true);
    pkg_config_0_3_9.default = true;
  }) [ libc_0_2_30_features gcc_0_3_53_features pkg_config_0_3_9_features ];
  owning_ref_0_3_3 = { features?(owning_ref_0_3_3_features {}) }: owning_ref_0_3_3_ {
    dependencies = mapFeatures features ([ stable_deref_trait_1_0_0 ]);
  };
  owning_ref_0_3_3_features = f: updateFeatures f (rec {
    owning_ref_0_3_3.default = (f.owning_ref_0_3_3.default or true);
    stable_deref_trait_1_0_0.default = true;
  }) [ stable_deref_trait_1_0_0_features ];
  parking_lot_0_4_7 = { features?(parking_lot_0_4_7_features {}) }: parking_lot_0_4_7_ {
    dependencies = mapFeatures features ([ parking_lot_core_0_2_6 ]
      ++ (if features.parking_lot_0_4_7.owning_ref or false then [ owning_ref_0_3_3 ] else []));
    features = mkFeatures (features.parking_lot_0_4_7 or {});
  };
  parking_lot_0_4_7_features = f: updateFeatures f (rec {
    owning_ref_0_3_3.default = true;
    parking_lot_0_4_7.default = (f.parking_lot_0_4_7.default or true);
    parking_lot_0_4_7.owning_ref =
      (f.parking_lot_0_4_7.owning_ref or false) ||
      (f.parking_lot_0_4_7.default or false) ||
      (parking_lot_0_4_7.default or false);
    parking_lot_core_0_2_6.deadlock_detection =
      (f.parking_lot_core_0_2_6.deadlock_detection or false) ||
      (parking_lot_0_4_7.deadlock_detection or false) ||
      (f.parking_lot_0_4_7.deadlock_detection or false);
    parking_lot_core_0_2_6.default = true;
    parking_lot_core_0_2_6.nightly =
      (f.parking_lot_core_0_2_6.nightly or false) ||
      (parking_lot_0_4_7.nightly or false) ||
      (f.parking_lot_0_4_7.nightly or false);
  }) [ owning_ref_0_3_3_features parking_lot_core_0_2_6_features ];
  parking_lot_core_0_2_6 = { features?(parking_lot_core_0_2_6_features {}) }: parking_lot_core_0_2_6_ {
    dependencies = mapFeatures features ([ rand_0_3_16 smallvec_0_4_3 ])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_30 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
    features = mkFeatures (features.parking_lot_core_0_2_6 or {});
  };
  parking_lot_core_0_2_6_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    libc_0_2_30.default = true;
    parking_lot_core_0_2_6.backtrace =
      (f.parking_lot_core_0_2_6.backtrace or false) ||
      (f.parking_lot_core_0_2_6.deadlock_detection or false) ||
      (parking_lot_core_0_2_6.deadlock_detection or false);
    parking_lot_core_0_2_6.default = (f.parking_lot_core_0_2_6.default or true);
    parking_lot_core_0_2_6.petgraph =
      (f.parking_lot_core_0_2_6.petgraph or false) ||
      (f.parking_lot_core_0_2_6.deadlock_detection or false) ||
      (parking_lot_core_0_2_6.deadlock_detection or false);
    parking_lot_core_0_2_6.thread-id =
      (f.parking_lot_core_0_2_6.thread-id or false) ||
      (f.parking_lot_core_0_2_6.deadlock_detection or false) ||
      (parking_lot_core_0_2_6.deadlock_detection or false);
    rand_0_3_16.default = true;
    smallvec_0_4_3.default = true;
    winapi_0_2_8.default = true;
  }) [ rand_0_3_16_features smallvec_0_4_3_features libc_0_2_30_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  pkg_config_0_3_9 = { features?(pkg_config_0_3_9_features {}) }: pkg_config_0_3_9_ {};
  pkg_config_0_3_9_features = f: updateFeatures f (rec {
    pkg_config_0_3_9.default = (f.pkg_config_0_3_9.default or true);
  }) [];
  prelude_0_2_0 = { features?(prelude_0_2_0_features {}) }: prelude_0_2_0_ {};
  prelude_0_2_0_features = f: updateFeatures f (rec {
    prelude_0_2_0.default = (f.prelude_0_2_0.default or true);
  }) [];
  quote_0_3_15 = { features?(quote_0_3_15_features {}) }: quote_0_3_15_ {};
  quote_0_3_15_features = f: updateFeatures f (rec {
    quote_0_3_15.default = (f.quote_0_3_15.default or true);
  }) [];
  rand_0_3_16 = { features?(rand_0_3_16_features {}) }: rand_0_3_16_ {
    dependencies = mapFeatures features ([ libc_0_2_30 ])
      ++ (if kernel == "fuchsia" then mapFeatures features ([ magenta_0_1_1 ]) else []);
    features = mkFeatures (features.rand_0_3_16 or {});
  };
  rand_0_3_16_features = f: updateFeatures f (rec {
    libc_0_2_30.default = true;
    magenta_0_1_1.default = true;
    rand_0_3_16.default = (f.rand_0_3_16.default or true);
    rand_0_3_16.i128_support =
      (f.rand_0_3_16.i128_support or false) ||
      (f.rand_0_3_16.nightly or false) ||
      (rand_0_3_16.nightly or false);
  }) [ libc_0_2_30_features magenta_0_1_1_features ];
  regex_0_2_2 = { features?(regex_0_2_2_features {}) }: regex_0_2_2_ {
    dependencies = mapFeatures features ([ aho_corasick_0_6_3 memchr_1_0_1 regex_syntax_0_4_1 thread_local_0_3_4 utf8_ranges_1_0_0 ]);
    features = mkFeatures (features.regex_0_2_2 or {});
  };
  regex_0_2_2_features = f: updateFeatures f (rec {
    aho_corasick_0_6_3.default = true;
    memchr_1_0_1.default = true;
    regex_0_2_2.default = (f.regex_0_2_2.default or true);
    regex_0_2_2.simd =
      (f.regex_0_2_2.simd or false) ||
      (f.regex_0_2_2.simd-accel or false) ||
      (regex_0_2_2.simd-accel or false);
    regex_syntax_0_4_1.default = true;
    thread_local_0_3_4.default = true;
    utf8_ranges_1_0_0.default = true;
  }) [ aho_corasick_0_6_3_features memchr_1_0_1_features regex_syntax_0_4_1_features thread_local_0_3_4_features utf8_ranges_1_0_0_features ];
  regex_syntax_0_4_1 = { features?(regex_syntax_0_4_1_features {}) }: regex_syntax_0_4_1_ {};
  regex_syntax_0_4_1_features = f: updateFeatures f (rec {
    regex_syntax_0_4_1.default = (f.regex_syntax_0_4_1.default or true);
  }) [];
  rustc_demangle_0_1_5 = { features?(rustc_demangle_0_1_5_features {}) }: rustc_demangle_0_1_5_ {};
  rustc_demangle_0_1_5_features = f: updateFeatures f (rec {
    rustc_demangle_0_1_5.default = (f.rustc_demangle_0_1_5.default or true);
  }) [];
  safemem_0_2_0 = { features?(safemem_0_2_0_features {}) }: safemem_0_2_0_ {};
  safemem_0_2_0_features = f: updateFeatures f (rec {
    safemem_0_2_0.default = (f.safemem_0_2_0.default or true);
  }) [];
  scoped_threadpool_0_1_7 = { features?(scoped_threadpool_0_1_7_features {}) }: scoped_threadpool_0_1_7_ {
    features = mkFeatures (features.scoped_threadpool_0_1_7 or {});
  };
  scoped_threadpool_0_1_7_features = f: updateFeatures f (rec {
    scoped_threadpool_0_1_7.default = (f.scoped_threadpool_0_1_7.default or true);
  }) [];
  serde_1_0_14 = { features?(serde_1_0_14_features {}) }: serde_1_0_14_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.serde_1_0_14 or {});
  };
  serde_1_0_14_features = f: updateFeatures f (rec {
    serde_1_0_14.default = (f.serde_1_0_14.default or true);
    serde_1_0_14.serde_derive =
      (f.serde_1_0_14.serde_derive or false) ||
      (f.serde_1_0_14.derive or false) ||
      (serde_1_0_14.derive or false) ||
      (f.serde_1_0_14.playground or false) ||
      (serde_1_0_14.playground or false);
    serde_1_0_14.std =
      (f.serde_1_0_14.std or false) ||
      (f.serde_1_0_14.default or false) ||
      (serde_1_0_14.default or false);
    serde_1_0_14.unstable =
      (f.serde_1_0_14.unstable or false) ||
      (f.serde_1_0_14.alloc or false) ||
      (serde_1_0_14.alloc or false);
  }) [];
  serde_derive_1_0_14 = { features?(serde_derive_1_0_14_features {}) }: serde_derive_1_0_14_ {
    dependencies = mapFeatures features ([ quote_0_3_15 serde_derive_internals_0_16_0 syn_0_11_11 ]);
  };
  serde_derive_1_0_14_features = f: updateFeatures f (rec {
    quote_0_3_15.default = true;
    serde_derive_1_0_14.default = (f.serde_derive_1_0_14.default or true);
    serde_derive_internals_0_16_0.default = (f.serde_derive_internals_0_16_0.default or false);
    syn_0_11_11.default = true;
    syn_0_11_11.visit = true;
  }) [ quote_0_3_15_features serde_derive_internals_0_16_0_features syn_0_11_11_features ];
  serde_derive_internals_0_16_0 = { features?(serde_derive_internals_0_16_0_features {}) }: serde_derive_internals_0_16_0_ {
    dependencies = mapFeatures features ([ syn_0_11_11 synom_0_11_3 ]);
  };
  serde_derive_internals_0_16_0_features = f: updateFeatures f (rec {
    serde_derive_internals_0_16_0.default = (f.serde_derive_internals_0_16_0.default or true);
    syn_0_11_11.default = (f.syn_0_11_11.default or false);
    syn_0_11_11.parsing = true;
    synom_0_11_3.default = true;
  }) [ syn_0_11_11_features synom_0_11_3_features ];
  shellexpand_1_0_0 = { features?(shellexpand_1_0_0_features {}) }: shellexpand_1_0_0_ {};
  shellexpand_1_0_0_features = f: updateFeatures f (rec {
    shellexpand_1_0_0.default = (f.shellexpand_1_0_0.default or true);
  }) [];
  smallvec_0_4_3 = { features?(smallvec_0_4_3_features {}) }: smallvec_0_4_3_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.smallvec_0_4_3 or {});
  };
  smallvec_0_4_3_features = f: updateFeatures f (rec {
    smallvec_0_4_3.default = (f.smallvec_0_4_3.default or true);
    smallvec_0_4_3.heapsize =
      (f.smallvec_0_4_3.heapsize or false) ||
      (f.smallvec_0_4_3.heapsizeof or false) ||
      (smallvec_0_4_3.heapsizeof or false);
    smallvec_0_4_3.std =
      (f.smallvec_0_4_3.std or false) ||
      (f.smallvec_0_4_3.default or false) ||
      (smallvec_0_4_3.default or false) ||
      (f.smallvec_0_4_3.heapsizeof or false) ||
      (smallvec_0_4_3.heapsizeof or false);
  }) [];
  stable_deref_trait_1_0_0 = { features?(stable_deref_trait_1_0_0_features {}) }: stable_deref_trait_1_0_0_ {
    features = mkFeatures (features.stable_deref_trait_1_0_0 or {});
  };
  stable_deref_trait_1_0_0_features = f: updateFeatures f (rec {
    stable_deref_trait_1_0_0.default = (f.stable_deref_trait_1_0_0.default or true);
    stable_deref_trait_1_0_0.std =
      (f.stable_deref_trait_1_0_0.std or false) ||
      (f.stable_deref_trait_1_0_0.default or false) ||
      (stable_deref_trait_1_0_0.default or false);
  }) [];
  strfmt_0_1_5 = { features?(strfmt_0_1_5_features {}) }: strfmt_0_1_5_ {};
  strfmt_0_1_5_features = f: updateFeatures f (rec {
    strfmt_0_1_5.default = (f.strfmt_0_1_5.default or true);
  }) [];
  strsim_0_6_0 = { features?(strsim_0_6_0_features {}) }: strsim_0_6_0_ {};
  strsim_0_6_0_features = f: updateFeatures f (rec {
    strsim_0_6_0.default = (f.strsim_0_6_0.default or true);
  }) [];
  structopt_0_1_0 = { features?(structopt_0_1_0_features {}) }: structopt_0_1_0_ {
    dependencies = mapFeatures features ([ clap_2_26_0 ]);
  };
  structopt_0_1_0_features = f: updateFeatures f (rec {
    clap_2_26_0.default = true;
    structopt_0_1_0.default = (f.structopt_0_1_0.default or true);
  }) [ clap_2_26_0_features ];
  structopt_derive_0_1_0 = { features?(structopt_derive_0_1_0_features {}) }: structopt_derive_0_1_0_ {
    dependencies = mapFeatures features ([ quote_0_3_15 syn_0_11_11 ]);
  };
  structopt_derive_0_1_0_features = f: updateFeatures f (rec {
    quote_0_3_15.default = true;
    structopt_derive_0_1_0.default = (f.structopt_derive_0_1_0.default or true);
    syn_0_11_11.default = true;
  }) [ quote_0_3_15_features syn_0_11_11_features ];
  syn_0_11_11 = { features?(syn_0_11_11_features {}) }: syn_0_11_11_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.syn_0_11_11.quote or false then [ quote_0_3_15 ] else [])
      ++ (if features.syn_0_11_11.synom or false then [ synom_0_11_3 ] else [])
      ++ (if features.syn_0_11_11.unicode-xid or false then [ unicode_xid_0_0_4 ] else []));
    features = mkFeatures (features.syn_0_11_11 or {});
  };
  syn_0_11_11_features = f: updateFeatures f (rec {
    quote_0_3_15.default = true;
    syn_0_11_11.default = (f.syn_0_11_11.default or true);
    syn_0_11_11.parsing =
      (f.syn_0_11_11.parsing or false) ||
      (f.syn_0_11_11.default or false) ||
      (syn_0_11_11.default or false);
    syn_0_11_11.printing =
      (f.syn_0_11_11.printing or false) ||
      (f.syn_0_11_11.default or false) ||
      (syn_0_11_11.default or false);
    syn_0_11_11.quote =
      (f.syn_0_11_11.quote or false) ||
      (f.syn_0_11_11.printing or false) ||
      (syn_0_11_11.printing or false);
    syn_0_11_11.synom =
      (f.syn_0_11_11.synom or false) ||
      (f.syn_0_11_11.parsing or false) ||
      (syn_0_11_11.parsing or false);
    syn_0_11_11.unicode-xid =
      (f.syn_0_11_11.unicode-xid or false) ||
      (f.syn_0_11_11.parsing or false) ||
      (syn_0_11_11.parsing or false);
    synom_0_11_3.default = true;
    unicode_xid_0_0_4.default = true;
  }) [ quote_0_3_15_features synom_0_11_3_features unicode_xid_0_0_4_features ];
  synom_0_11_3 = { features?(synom_0_11_3_features {}) }: synom_0_11_3_ {
    dependencies = mapFeatures features ([ unicode_xid_0_0_4 ]);
  };
  synom_0_11_3_features = f: updateFeatures f (rec {
    synom_0_11_3.default = (f.synom_0_11_3.default or true);
    unicode_xid_0_0_4.default = true;
  }) [ unicode_xid_0_0_4_features ];
  tabwriter_1_0_3 = { features?(tabwriter_1_0_3_features {}) }: tabwriter_1_0_3_ {
    dependencies = mapFeatures features ([ unicode_width_0_1_4 ]);
    features = mkFeatures (features.tabwriter_1_0_3 or {});
  };
  tabwriter_1_0_3_features = f: updateFeatures f (rec {
    tabwriter_1_0_3.default = (f.tabwriter_1_0_3.default or true);
    tabwriter_1_0_3.lazy_static =
      (f.tabwriter_1_0_3.lazy_static or false) ||
      (f.tabwriter_1_0_3.ansi_formatting or false) ||
      (tabwriter_1_0_3.ansi_formatting or false);
    tabwriter_1_0_3.regex =
      (f.tabwriter_1_0_3.regex or false) ||
      (f.tabwriter_1_0_3.ansi_formatting or false) ||
      (tabwriter_1_0_3.ansi_formatting or false);
    unicode_width_0_1_4.default = true;
  }) [ unicode_width_0_1_4_features ];
  tempfile_2_1_6 = { features?(tempfile_2_1_6_features {}) }: tempfile_2_1_6_ {
    dependencies = mapFeatures features ([ rand_0_3_16 ])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_30 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  tempfile_2_1_6_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    libc_0_2_30.default = true;
    rand_0_3_16.default = true;
    tempfile_2_1_6.default = (f.tempfile_2_1_6.default or true);
    winapi_0_2_8.default = true;
  }) [ rand_0_3_16_features libc_0_2_30_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  term_size_0_3_0 = { features?(term_size_0_3_0_features {}) }: term_size_0_3_0_ {
    dependencies = mapFeatures features ([])
      ++ (if !(kernel == "windows") then mapFeatures features ([ libc_0_2_30 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
    features = mkFeatures (features.term_size_0_3_0 or {});
  };
  term_size_0_3_0_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    libc_0_2_30.default = true;
    term_size_0_3_0.clippy =
      (f.term_size_0_3_0.clippy or false) ||
      (f.term_size_0_3_0.lints or false) ||
      (term_size_0_3_0.lints or false);
    term_size_0_3_0.default = (f.term_size_0_3_0.default or true);
    term_size_0_3_0.lints =
      (f.term_size_0_3_0.lints or false) ||
      (f.term_size_0_3_0.travis or false) ||
      (term_size_0_3_0.travis or false);
    term_size_0_3_0.nightly =
      (f.term_size_0_3_0.nightly or false) ||
      (f.term_size_0_3_0.lints or false) ||
      (term_size_0_3_0.lints or false) ||
      (f.term_size_0_3_0.travis or false) ||
      (term_size_0_3_0.travis or false);
    winapi_0_2_8.default = true;
  }) [ libc_0_2_30_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  termios_0_2_2 = { features?(termios_0_2_2_features {}) }: termios_0_2_2_ {
    dependencies = mapFeatures features ([ libc_0_2_30 ]);
  };
  termios_0_2_2_features = f: updateFeatures f (rec {
    libc_0_2_30.default = true;
    termios_0_2_2.default = (f.termios_0_2_2.default or true);
  }) [ libc_0_2_30_features ];
  textwrap_0_7_0 = { features?(textwrap_0_7_0_features {}) }: textwrap_0_7_0_ {
    dependencies = mapFeatures features ([ term_size_0_3_0 unicode_width_0_1_4 ]);
  };
  textwrap_0_7_0_features = f: updateFeatures f (rec {
    term_size_0_3_0.default = true;
    textwrap_0_7_0.default = (f.textwrap_0_7_0.default or true);
    unicode_width_0_1_4.default = true;
  }) [ term_size_0_3_0_features unicode_width_0_1_4_features ];
  thread_local_0_3_4 = { features?(thread_local_0_3_4_features {}) }: thread_local_0_3_4_ {
    dependencies = mapFeatures features ([ lazy_static_0_2_8 unreachable_1_0_0 ]);
  };
  thread_local_0_3_4_features = f: updateFeatures f (rec {
    lazy_static_0_2_8.default = true;
    thread_local_0_3_4.default = (f.thread_local_0_3_4.default or true);
    unreachable_1_0_0.default = true;
  }) [ lazy_static_0_2_8_features unreachable_1_0_0_features ];
  toml_0_4_5 = { features?(toml_0_4_5_features {}) }: toml_0_4_5_ {
    dependencies = mapFeatures features ([ serde_1_0_14 ]);
  };
  toml_0_4_5_features = f: updateFeatures f (rec {
    serde_1_0_14.default = true;
    toml_0_4_5.default = (f.toml_0_4_5.default or true);
  }) [ serde_1_0_14_features ];
  unicode_segmentation_1_2_0 = { features?(unicode_segmentation_1_2_0_features {}) }: unicode_segmentation_1_2_0_ {
    features = mkFeatures (features.unicode_segmentation_1_2_0 or {});
  };
  unicode_segmentation_1_2_0_features = f: updateFeatures f (rec {
    unicode_segmentation_1_2_0.default = (f.unicode_segmentation_1_2_0.default or true);
  }) [];
  unicode_width_0_1_4 = { features?(unicode_width_0_1_4_features {}) }: unicode_width_0_1_4_ {
    features = mkFeatures (features.unicode_width_0_1_4 or {});
  };
  unicode_width_0_1_4_features = f: updateFeatures f (rec {
    unicode_width_0_1_4.default = (f.unicode_width_0_1_4.default or true);
  }) [];
  unicode_xid_0_0_4 = { features?(unicode_xid_0_0_4_features {}) }: unicode_xid_0_0_4_ {
    features = mkFeatures (features.unicode_xid_0_0_4 or {});
  };
  unicode_xid_0_0_4_features = f: updateFeatures f (rec {
    unicode_xid_0_0_4.default = (f.unicode_xid_0_0_4.default or true);
  }) [];
  unreachable_1_0_0 = { features?(unreachable_1_0_0_features {}) }: unreachable_1_0_0_ {
    dependencies = mapFeatures features ([ void_1_0_2 ]);
  };
  unreachable_1_0_0_features = f: updateFeatures f (rec {
    unreachable_1_0_0.default = (f.unreachable_1_0_0.default or true);
    void_1_0_2.default = (f.void_1_0_2.default or false);
  }) [ void_1_0_2_features ];
  user32_sys_0_2_0 = { features?(user32_sys_0_2_0_features {}) }: user32_sys_0_2_0_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  user32_sys_0_2_0_features = f: updateFeatures f (rec {
    user32_sys_0_2_0.default = (f.user32_sys_0_2_0.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  utf8_ranges_1_0_0 = { features?(utf8_ranges_1_0_0_features {}) }: utf8_ranges_1_0_0_ {};
  utf8_ranges_1_0_0_features = f: updateFeatures f (rec {
    utf8_ranges_1_0_0.default = (f.utf8_ranges_1_0_0.default or true);
  }) [];
  vcpkg_0_2_2 = { features?(vcpkg_0_2_2_features {}) }: vcpkg_0_2_2_ {};
  vcpkg_0_2_2_features = f: updateFeatures f (rec {
    vcpkg_0_2_2.default = (f.vcpkg_0_2_2.default or true);
  }) [];
  vec_map_0_8_0 = { features?(vec_map_0_8_0_features {}) }: vec_map_0_8_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.vec_map_0_8_0 or {});
  };
  vec_map_0_8_0_features = f: updateFeatures f (rec {
    vec_map_0_8_0.default = (f.vec_map_0_8_0.default or true);
    vec_map_0_8_0.serde =
      (f.vec_map_0_8_0.serde or false) ||
      (f.vec_map_0_8_0.eders or false) ||
      (vec_map_0_8_0.eders or false);
    vec_map_0_8_0.serde_derive =
      (f.vec_map_0_8_0.serde_derive or false) ||
      (f.vec_map_0_8_0.eders or false) ||
      (vec_map_0_8_0.eders or false);
  }) [];
  void_1_0_2 = { features?(void_1_0_2_features {}) }: void_1_0_2_ {
    features = mkFeatures (features.void_1_0_2 or {});
  };
  void_1_0_2_features = f: updateFeatures f (rec {
    void_1_0_2.default = (f.void_1_0_2.default or true);
    void_1_0_2.std =
      (f.void_1_0_2.std or false) ||
      (f.void_1_0_2.default or false) ||
      (void_1_0_2.default or false);
  }) [];
  winapi_0_2_8 = { features?(winapi_0_2_8_features {}) }: winapi_0_2_8_ {};
  winapi_0_2_8_features = f: updateFeatures f (rec {
    winapi_0_2_8.default = (f.winapi_0_2_8.default or true);
  }) [];
  winapi_build_0_1_1 = { features?(winapi_build_0_1_1_features {}) }: winapi_build_0_1_1_ {};
  winapi_build_0_1_1_features = f: updateFeatures f (rec {
    winapi_build_0_1_1.default = (f.winapi_build_0_1_1.default or true);
  }) [];
}
